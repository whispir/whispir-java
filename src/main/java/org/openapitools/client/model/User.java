/*
 * Whispir Platform API
 * Whispir Platform API for cross channel and multi channel communications. Documentation on each endpoint is available at https://developers.whispir.com.
 *
 * The version of the OpenAPI document: 1.1.1
 * Contact: support@whispir.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.LinkInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import whispir_sdk_java.JSON;

/**
 * The user object.
 */
@ApiModel(description = "The user object.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-22T09:15:03.121580Z[Etc/UTC]")
public class User {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  /**
   * Specifies the validity status of the user. The default status is PENDING. One cannot set the status while creation of account. Read &#x60;User State Machine&#x60; again mentioned above.&lt;/p&gt;
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    A("A"),
    
    INACTIVE("INACTIVE"),
    
    I("I"),
    
    PENDING("PENDING"),
    
    P("P"),
    
    SUSPENDED("SUSPENDED"),
    
    B("B"),
    
    DELETED("DELETED"),
    
    D("D");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status = StatusEnum.PENDING;

  public static final String SERIALIZED_NAME_WORK_MOBILE_PHONE1 = "workMobilePhone1";
  @SerializedName(SERIALIZED_NAME_WORK_MOBILE_PHONE1)
  private String workMobilePhone1;

  public static final String SERIALIZED_NAME_WORK_EMAIL_ADDRESS1 = "workEmailAddress1";
  @SerializedName(SERIALIZED_NAME_WORK_EMAIL_ADDRESS1)
  private String workEmailAddress1;

  public static final String SERIALIZED_NAME_WORK_COUNTRY = "workCountry";
  @SerializedName(SERIALIZED_NAME_WORK_COUNTRY)
  private String workCountry;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_WORK_MOBILE_PHONE2 = "workMobilePhone2";
  @SerializedName(SERIALIZED_NAME_WORK_MOBILE_PHONE2)
  private String workMobilePhone2;

  public static final String SERIALIZED_NAME_WORK_EMAIL_ADDRESS2 = "workEmailAddress2";
  @SerializedName(SERIALIZED_NAME_WORK_EMAIL_ADDRESS2)
  private String workEmailAddress2;

  public static final String SERIALIZED_NAME_WORK_PHONE_AREA_CODE1 = "workPhoneAreaCode1";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_AREA_CODE1)
  private String workPhoneAreaCode1;

  public static final String SERIALIZED_NAME_WORK_PHONE1 = "workPhone1";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE1)
  private String workPhone1;

  public static final String SERIALIZED_NAME_WORK_PHONE_AREA_CODE2 = "workPhoneAreaCode2";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_AREA_CODE2)
  private String workPhoneAreaCode2;

  public static final String SERIALIZED_NAME_WORK_PHONE2 = "workPhone2";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE2)
  private String workPhone2;

  public static final String SERIALIZED_NAME_WORK_FAX_AREA_CODE1 = "workFaxAreaCode1";
  @SerializedName(SERIALIZED_NAME_WORK_FAX_AREA_CODE1)
  private String workFaxAreaCode1;

  public static final String SERIALIZED_NAME_WORK_FAX1 = "workFax1";
  @SerializedName(SERIALIZED_NAME_WORK_FAX1)
  private String workFax1;

  public static final String SERIALIZED_NAME_WORK_SATELLITE_PHONE = "workSatellitePhone";
  @SerializedName(SERIALIZED_NAME_WORK_SATELLITE_PHONE)
  private String workSatellitePhone;

  public static final String SERIALIZED_NAME_WORK_OTHER_PHONE = "workOtherPhone";
  @SerializedName(SERIALIZED_NAME_WORK_OTHER_PHONE)
  private String workOtherPhone;

  public static final String SERIALIZED_NAME_WORK_ADDRESS1 = "workAddress1";
  @SerializedName(SERIALIZED_NAME_WORK_ADDRESS1)
  private String workAddress1;

  public static final String SERIALIZED_NAME_WORK_ADDRESS2 = "workAddress2";
  @SerializedName(SERIALIZED_NAME_WORK_ADDRESS2)
  private String workAddress2;

  public static final String SERIALIZED_NAME_WORK_SUBURB = "workSuburb";
  @SerializedName(SERIALIZED_NAME_WORK_SUBURB)
  private String workSuburb;

  public static final String SERIALIZED_NAME_WORK_STATE = "workState";
  @SerializedName(SERIALIZED_NAME_WORK_STATE)
  private String workState;

  public static final String SERIALIZED_NAME_WORK_POST_CODE = "workPostCode";
  @SerializedName(SERIALIZED_NAME_WORK_POST_CODE)
  private String workPostCode;

  public static final String SERIALIZED_NAME_WORK_POSTAL_ADDRESS1 = "workPostalAddress1";
  @SerializedName(SERIALIZED_NAME_WORK_POSTAL_ADDRESS1)
  private String workPostalAddress1;

  public static final String SERIALIZED_NAME_WORK_POSTAL_ADDRESS2 = "workPostalAddress2";
  @SerializedName(SERIALIZED_NAME_WORK_POSTAL_ADDRESS2)
  private String workPostalAddress2;

  public static final String SERIALIZED_NAME_WORK_POSTAL_SUBURB = "workPostalSuburb";
  @SerializedName(SERIALIZED_NAME_WORK_POSTAL_SUBURB)
  private String workPostalSuburb;

  public static final String SERIALIZED_NAME_WORK_POSTAL_STATE = "workPostalState";
  @SerializedName(SERIALIZED_NAME_WORK_POSTAL_STATE)
  private String workPostalState;

  public static final String SERIALIZED_NAME_WORK_POSTAL_POST_CODE = "workPostalPostCode";
  @SerializedName(SERIALIZED_NAME_WORK_POSTAL_POST_CODE)
  private String workPostalPostCode;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS1 = "personalEmailAddress1";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS1)
  private String personalEmailAddress1;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS2 = "personalEmailAddress2";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS2)
  private String personalEmailAddress2;

  public static final String SERIALIZED_NAME_PERSONAL_ADDRESS1 = "personalAddress1";
  @SerializedName(SERIALIZED_NAME_PERSONAL_ADDRESS1)
  private String personalAddress1;

  public static final String SERIALIZED_NAME_PERSONAL_ADDRESS2 = "personalAddress2";
  @SerializedName(SERIALIZED_NAME_PERSONAL_ADDRESS2)
  private String personalAddress2;

  public static final String SERIALIZED_NAME_PERSONAL_SUBURB = "personalSuburb";
  @SerializedName(SERIALIZED_NAME_PERSONAL_SUBURB)
  private String personalSuburb;

  public static final String SERIALIZED_NAME_PERSONAL_STATE = "personalState";
  @SerializedName(SERIALIZED_NAME_PERSONAL_STATE)
  private String personalState;

  public static final String SERIALIZED_NAME_PERSONAL_POST_CODE = "personalPostCode";
  @SerializedName(SERIALIZED_NAME_PERSONAL_POST_CODE)
  private String personalPostCode;

  public static final String SERIALIZED_NAME_PERSONAL_COUNTRY = "personalCountry";
  @SerializedName(SERIALIZED_NAME_PERSONAL_COUNTRY)
  private String personalCountry;

  public static final String SERIALIZED_NAME_PERSONAL_PHONE_AREA_CODE1 = "personalPhoneAreaCode1";
  @SerializedName(SERIALIZED_NAME_PERSONAL_PHONE_AREA_CODE1)
  private String personalPhoneAreaCode1;

  public static final String SERIALIZED_NAME_PERSONAL_PHONE1 = "personalPhone1";
  @SerializedName(SERIALIZED_NAME_PERSONAL_PHONE1)
  private String personalPhone1;

  public static final String SERIALIZED_NAME_PERSONAL_PHONE_AREA_CODE2 = "personalPhoneAreaCode2";
  @SerializedName(SERIALIZED_NAME_PERSONAL_PHONE_AREA_CODE2)
  private String personalPhoneAreaCode2;

  public static final String SERIALIZED_NAME_PERSONAL_PHONE2 = "personalPhone2";
  @SerializedName(SERIALIZED_NAME_PERSONAL_PHONE2)
  private String personalPhone2;

  public static final String SERIALIZED_NAME_PERSONAL_FAX_AREA_CODE1 = "personalFaxAreaCode1";
  @SerializedName(SERIALIZED_NAME_PERSONAL_FAX_AREA_CODE1)
  private String personalFaxAreaCode1;

  public static final String SERIALIZED_NAME_PERSONAL_FAX1 = "personalFax1";
  @SerializedName(SERIALIZED_NAME_PERSONAL_FAX1)
  private String personalFax1;

  public static final String SERIALIZED_NAME_OTHER_PHONE_AREA_CODE1 = "otherPhoneAreaCode1";
  @SerializedName(SERIALIZED_NAME_OTHER_PHONE_AREA_CODE1)
  private String otherPhoneAreaCode1;

  public static final String SERIALIZED_NAME_OTHER_PHONE1 = "otherPhone1";
  @SerializedName(SERIALIZED_NAME_OTHER_PHONE1)
  private String otherPhone1;

  public static final String SERIALIZED_NAME_OTHER_MOBILE = "otherMobile";
  @SerializedName(SERIALIZED_NAME_OTHER_MOBILE)
  private String otherMobile;

  public static final String SERIALIZED_NAME_OTHER_FIRST_NAME = "otherFirstName";
  @SerializedName(SERIALIZED_NAME_OTHER_FIRST_NAME)
  private String otherFirstName;

  public static final String SERIALIZED_NAME_OTHER_LAST_NAME = "otherLastName";
  @SerializedName(SERIALIZED_NAME_OTHER_LAST_NAME)
  private String otherLastName;

  public static final String SERIALIZED_NAME_OTHER_TITLE = "otherTitle";
  @SerializedName(SERIALIZED_NAME_OTHER_TITLE)
  private String otherTitle;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_DIVISION = "division";
  @SerializedName(SERIALIZED_NAME_DIVISION)
  private String division;

  public static final String SERIALIZED_NAME_BUSINESS_UNIT = "businessUnit";
  @SerializedName(SERIALIZED_NAME_BUSINESS_UNIT)
  private String businessUnit;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private String department;

  public static final String SERIALIZED_NAME_TEAM_NAME1 = "teamName1";
  @SerializedName(SERIALIZED_NAME_TEAM_NAME1)
  private String teamName1;

  public static final String SERIALIZED_NAME_TEAM_NAME2 = "teamName2";
  @SerializedName(SERIALIZED_NAME_TEAM_NAME2)
  private String teamName2;

  public static final String SERIALIZED_NAME_ROLE1 = "role1";
  @SerializedName(SERIALIZED_NAME_ROLE1)
  private String role1;

  public static final String SERIALIZED_NAME_ROLE2 = "role2";
  @SerializedName(SERIALIZED_NAME_ROLE2)
  private String role2;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private List<LinkInner> link = null;

  public User() { 
  }

  
  public User(
     String id, 
     List<LinkInner> link
  ) {
    this();
    this.id = id;
    this.link = link;
  }

   /**
   * The ID of the user.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4DC922649AFE370C", value = "The ID of the user.")

  public String getId() {
    return id;
  }




  public User userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * Specifies the username for the account
   * @return userName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "John.Wick", required = true, value = "Specifies the username for the account")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    this.userName = userName;
  }


  public User password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Specifies the password for the account &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;The following are the rules for the password:&lt;/p&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;Alpha Numeric [a-zA-Z0-9_]&lt;/li&gt;&lt;li&gt;Must have at least one uppercase and one lowercase character&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
   * @return password
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "string", required = true, value = "Specifies the password for the account <p><b>Note:</b>The following are the rules for the password:</p><p><ul><li>Alpha Numeric [a-zA-Z0-9_]</li><li>Must have at least one uppercase and one lowercase character</li></ul></p>")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public User firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the user.
   * @return firstName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "John", required = true, value = "The first name of the user.")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public User middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

   /**
   * The middle name of the user.
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Bjork", value = "The middle name of the user.")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public User lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the user.
   * @return lastName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Wick", required = true, value = "The last name of the user.")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public User title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title to address the user with.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Dr", value = "The title to address the user with.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public User nickname(String nickname) {
    
    this.nickname = nickname;
    return this;
  }

   /**
   * Preferred name to be shown in the platfom interface
   * @return nickname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Babayaga", value = "Preferred name to be shown in the platfom interface")

  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    this.nickname = nickname;
  }


  public User status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Specifies the validity status of the user. The default status is PENDING. One cannot set the status while creation of account. Read &#x60;User State Machine&#x60; again mentioned above.&lt;/p&gt;
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PENDING", value = "Specifies the validity status of the user. The default status is PENDING. One cannot set the status while creation of account. Read `User State Machine` again mentioned above.</p>")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public User workMobilePhone1(String workMobilePhone1) {
    
    this.workMobilePhone1 = workMobilePhone1;
    return this;
  }

   /**
   * The primary work mobile number of the user.
   * @return workMobilePhone1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "61400400400", value = "The primary work mobile number of the user.")

  public String getWorkMobilePhone1() {
    return workMobilePhone1;
  }


  public void setWorkMobilePhone1(String workMobilePhone1) {
    this.workMobilePhone1 = workMobilePhone1;
  }


  public User workEmailAddress1(String workEmailAddress1) {
    
    this.workEmailAddress1 = workEmailAddress1;
    return this;
  }

   /**
   * The primary work email address of the user.
   * @return workEmailAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "testUser@example.com", value = "The primary work email address of the user.")

  public String getWorkEmailAddress1() {
    return workEmailAddress1;
  }


  public void setWorkEmailAddress1(String workEmailAddress1) {
    this.workEmailAddress1 = workEmailAddress1;
  }


  public User workCountry(String workCountry) {
    
    this.workCountry = workCountry;
    return this;
  }

   /**
   * The work country of the user.
   * @return workCountry
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Australia", required = true, value = "The work country of the user.")

  public String getWorkCountry() {
    return workCountry;
  }


  public void setWorkCountry(String workCountry) {
    this.workCountry = workCountry;
  }


  public User timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * The time zone in which the user lives in. Values are relative to GMT.  Supported values are:  * Offset from GMT in the format &#x60;+/-NN&#x60;. For example, &#x60;+10&#x60;. * Worldwide time zone in the format &#x60;Country/City&#x60;. For example, &#x60;Australia/Melbourne&#x60;  See the list of [worldwide time zones](https://en.wikipedia.org/wiki/List_of_time_zones_by_country).
   * @return timezone
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Australia/Melbourne", required = true, value = "The time zone in which the user lives in. Values are relative to GMT.  Supported values are:  * Offset from GMT in the format `+/-NN`. For example, `+10`. * Worldwide time zone in the format `Country/City`. For example, `Australia/Melbourne`  See the list of [worldwide time zones](https://en.wikipedia.org/wiki/List_of_time_zones_by_country).")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public User workMobilePhone2(String workMobilePhone2) {
    
    this.workMobilePhone2 = workMobilePhone2;
    return this;
  }

   /**
   * The secondary work mobile number of the user.
   * @return workMobilePhone2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "61500500500", value = "The secondary work mobile number of the user.")

  public String getWorkMobilePhone2() {
    return workMobilePhone2;
  }


  public void setWorkMobilePhone2(String workMobilePhone2) {
    this.workMobilePhone2 = workMobilePhone2;
  }


  public User workEmailAddress2(String workEmailAddress2) {
    
    this.workEmailAddress2 = workEmailAddress2;
    return this;
  }

   /**
   * The secondary work email address of the user.
   * @return workEmailAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "newUser@example.com", value = "The secondary work email address of the user.")

  public String getWorkEmailAddress2() {
    return workEmailAddress2;
  }


  public void setWorkEmailAddress2(String workEmailAddress2) {
    this.workEmailAddress2 = workEmailAddress2;
  }


  public User workPhoneAreaCode1(String workPhoneAreaCode1) {
    
    this.workPhoneAreaCode1 = workPhoneAreaCode1;
    return this;
  }

   /**
   * The primary work phone number area code of the user.
   * @return workPhoneAreaCode1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "09", value = "The primary work phone number area code of the user.")

  public String getWorkPhoneAreaCode1() {
    return workPhoneAreaCode1;
  }


  public void setWorkPhoneAreaCode1(String workPhoneAreaCode1) {
    this.workPhoneAreaCode1 = workPhoneAreaCode1;
  }


  public User workPhone1(String workPhone1) {
    
    this.workPhone1 = workPhone1;
    return this;
  }

   /**
   * The primary work phone number of the user.
   * @return workPhone1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5006000", value = "The primary work phone number of the user.")

  public String getWorkPhone1() {
    return workPhone1;
  }


  public void setWorkPhone1(String workPhone1) {
    this.workPhone1 = workPhone1;
  }


  public User workPhoneAreaCode2(String workPhoneAreaCode2) {
    
    this.workPhoneAreaCode2 = workPhoneAreaCode2;
    return this;
  }

   /**
   * The secondary work phone number area code of the user.
   * @return workPhoneAreaCode2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "09", value = "The secondary work phone number area code of the user.")

  public String getWorkPhoneAreaCode2() {
    return workPhoneAreaCode2;
  }


  public void setWorkPhoneAreaCode2(String workPhoneAreaCode2) {
    this.workPhoneAreaCode2 = workPhoneAreaCode2;
  }


  public User workPhone2(String workPhone2) {
    
    this.workPhone2 = workPhone2;
    return this;
  }

   /**
   * The secondary work phone number of the user.
   * @return workPhone2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5007000", value = "The secondary work phone number of the user.")

  public String getWorkPhone2() {
    return workPhone2;
  }


  public void setWorkPhone2(String workPhone2) {
    this.workPhone2 = workPhone2;
  }


  public User workFaxAreaCode1(String workFaxAreaCode1) {
    
    this.workFaxAreaCode1 = workFaxAreaCode1;
    return this;
  }

   /**
   * The work fax number area code of the user.
   * @return workFaxAreaCode1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "09", value = "The work fax number area code of the user.")

  public String getWorkFaxAreaCode1() {
    return workFaxAreaCode1;
  }


  public void setWorkFaxAreaCode1(String workFaxAreaCode1) {
    this.workFaxAreaCode1 = workFaxAreaCode1;
  }


  public User workFax1(String workFax1) {
    
    this.workFax1 = workFax1;
    return this;
  }

   /**
   * The work fax number of the user.
   * @return workFax1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5008000", value = "The work fax number of the user.")

  public String getWorkFax1() {
    return workFax1;
  }


  public void setWorkFax1(String workFax1) {
    this.workFax1 = workFax1;
  }


  public User workSatellitePhone(String workSatellitePhone) {
    
    this.workSatellitePhone = workSatellitePhone;
    return this;
  }

   /**
   * The work satellite phone number of the user.
   * @return workSatellitePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "61600600600", value = "The work satellite phone number of the user.")

  public String getWorkSatellitePhone() {
    return workSatellitePhone;
  }


  public void setWorkSatellitePhone(String workSatellitePhone) {
    this.workSatellitePhone = workSatellitePhone;
  }


  public User workOtherPhone(String workOtherPhone) {
    
    this.workOtherPhone = workOtherPhone;
    return this;
  }

   /**
   * The work other phone number of the user.
   * @return workOtherPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "61700700700", value = "The work other phone number of the user.")

  public String getWorkOtherPhone() {
    return workOtherPhone;
  }


  public void setWorkOtherPhone(String workOtherPhone) {
    this.workOtherPhone = workOtherPhone;
  }


  public User workAddress1(String workAddress1) {
    
    this.workAddress1 = workAddress1;
    return this;
  }

   /**
   * The first work address line of the user.
   * @return workAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Level 15", value = "The first work address line of the user.")

  public String getWorkAddress1() {
    return workAddress1;
  }


  public void setWorkAddress1(String workAddress1) {
    this.workAddress1 = workAddress1;
  }


  public User workAddress2(String workAddress2) {
    
    this.workAddress2 = workAddress2;
    return this;
  }

   /**
   * The second work address line of the user.
   * @return workAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "360 Collins St", value = "The second work address line of the user.")

  public String getWorkAddress2() {
    return workAddress2;
  }


  public void setWorkAddress2(String workAddress2) {
    this.workAddress2 = workAddress2;
  }


  public User workSuburb(String workSuburb) {
    
    this.workSuburb = workSuburb;
    return this;
  }

   /**
   * The work address suburb of the user.
   * @return workSuburb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Melboure", value = "The work address suburb of the user.")

  public String getWorkSuburb() {
    return workSuburb;
  }


  public void setWorkSuburb(String workSuburb) {
    this.workSuburb = workSuburb;
  }


  public User workState(String workState) {
    
    this.workState = workState;
    return this;
  }

   /**
   * The work address state of the user.
   * @return workState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Victoria", value = "The work address state of the user.")

  public String getWorkState() {
    return workState;
  }


  public void setWorkState(String workState) {
    this.workState = workState;
  }


  public User workPostCode(String workPostCode) {
    
    this.workPostCode = workPostCode;
    return this;
  }

   /**
   * The work address post code of the user.
   * @return workPostCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3000", value = "The work address post code of the user.")

  public String getWorkPostCode() {
    return workPostCode;
  }


  public void setWorkPostCode(String workPostCode) {
    this.workPostCode = workPostCode;
  }


  public User workPostalAddress1(String workPostalAddress1) {
    
    this.workPostalAddress1 = workPostalAddress1;
    return this;
  }

   /**
   * The first work postal address line of the user.
   * @return workPostalAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Level 15", value = "The first work postal address line of the user.")

  public String getWorkPostalAddress1() {
    return workPostalAddress1;
  }


  public void setWorkPostalAddress1(String workPostalAddress1) {
    this.workPostalAddress1 = workPostalAddress1;
  }


  public User workPostalAddress2(String workPostalAddress2) {
    
    this.workPostalAddress2 = workPostalAddress2;
    return this;
  }

   /**
   * The second work postal address line of the user.
   * @return workPostalAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "360 Collins St", value = "The second work postal address line of the user.")

  public String getWorkPostalAddress2() {
    return workPostalAddress2;
  }


  public void setWorkPostalAddress2(String workPostalAddress2) {
    this.workPostalAddress2 = workPostalAddress2;
  }


  public User workPostalSuburb(String workPostalSuburb) {
    
    this.workPostalSuburb = workPostalSuburb;
    return this;
  }

   /**
   * The work postal address suburb of the user.
   * @return workPostalSuburb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Melboure", value = "The work postal address suburb of the user.")

  public String getWorkPostalSuburb() {
    return workPostalSuburb;
  }


  public void setWorkPostalSuburb(String workPostalSuburb) {
    this.workPostalSuburb = workPostalSuburb;
  }


  public User workPostalState(String workPostalState) {
    
    this.workPostalState = workPostalState;
    return this;
  }

   /**
   * The work postal address state of the user.
   * @return workPostalState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Victoria", value = "The work postal address state of the user.")

  public String getWorkPostalState() {
    return workPostalState;
  }


  public void setWorkPostalState(String workPostalState) {
    this.workPostalState = workPostalState;
  }


  public User workPostalPostCode(String workPostalPostCode) {
    
    this.workPostalPostCode = workPostalPostCode;
    return this;
  }

   /**
   * The work postal address post code of the user.
   * @return workPostalPostCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3000", value = "The work postal address post code of the user.")

  public String getWorkPostalPostCode() {
    return workPostalPostCode;
  }


  public void setWorkPostalPostCode(String workPostalPostCode) {
    this.workPostalPostCode = workPostalPostCode;
  }


  public User personalEmailAddress1(String personalEmailAddress1) {
    
    this.personalEmailAddress1 = personalEmailAddress1;
    return this;
  }

   /**
   * The primary personal email address of the user.
   * @return personalEmailAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "personalPrimaryUser@example.com", value = "The primary personal email address of the user.")

  public String getPersonalEmailAddress1() {
    return personalEmailAddress1;
  }


  public void setPersonalEmailAddress1(String personalEmailAddress1) {
    this.personalEmailAddress1 = personalEmailAddress1;
  }


  public User personalEmailAddress2(String personalEmailAddress2) {
    
    this.personalEmailAddress2 = personalEmailAddress2;
    return this;
  }

   /**
   * The secondary personal email address of the user.
   * @return personalEmailAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "personalSecondaryUser@example.com", value = "The secondary personal email address of the user.")

  public String getPersonalEmailAddress2() {
    return personalEmailAddress2;
  }


  public void setPersonalEmailAddress2(String personalEmailAddress2) {
    this.personalEmailAddress2 = personalEmailAddress2;
  }


  public User personalAddress1(String personalAddress1) {
    
    this.personalAddress1 = personalAddress1;
    return this;
  }

   /**
   * The first personal address line of the user.
   * @return personalAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Level 15", value = "The first personal address line of the user.")

  public String getPersonalAddress1() {
    return personalAddress1;
  }


  public void setPersonalAddress1(String personalAddress1) {
    this.personalAddress1 = personalAddress1;
  }


  public User personalAddress2(String personalAddress2) {
    
    this.personalAddress2 = personalAddress2;
    return this;
  }

   /**
   * The second personal address line of the user.
   * @return personalAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "360 Collins St", value = "The second personal address line of the user.")

  public String getPersonalAddress2() {
    return personalAddress2;
  }


  public void setPersonalAddress2(String personalAddress2) {
    this.personalAddress2 = personalAddress2;
  }


  public User personalSuburb(String personalSuburb) {
    
    this.personalSuburb = personalSuburb;
    return this;
  }

   /**
   * The personal address suburb of the user.
   * @return personalSuburb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Melboure", value = "The personal address suburb of the user.")

  public String getPersonalSuburb() {
    return personalSuburb;
  }


  public void setPersonalSuburb(String personalSuburb) {
    this.personalSuburb = personalSuburb;
  }


  public User personalState(String personalState) {
    
    this.personalState = personalState;
    return this;
  }

   /**
   * The personal address state of the user.
   * @return personalState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Victoria", value = "The personal address state of the user.")

  public String getPersonalState() {
    return personalState;
  }


  public void setPersonalState(String personalState) {
    this.personalState = personalState;
  }


  public User personalPostCode(String personalPostCode) {
    
    this.personalPostCode = personalPostCode;
    return this;
  }

   /**
   * The personal address post code of the user.
   * @return personalPostCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3000", value = "The personal address post code of the user.")

  public String getPersonalPostCode() {
    return personalPostCode;
  }


  public void setPersonalPostCode(String personalPostCode) {
    this.personalPostCode = personalPostCode;
  }


  public User personalCountry(String personalCountry) {
    
    this.personalCountry = personalCountry;
    return this;
  }

   /**
   * The personal address country of the user.
   * @return personalCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Australia", value = "The personal address country of the user.")

  public String getPersonalCountry() {
    return personalCountry;
  }


  public void setPersonalCountry(String personalCountry) {
    this.personalCountry = personalCountry;
  }


  public User personalPhoneAreaCode1(String personalPhoneAreaCode1) {
    
    this.personalPhoneAreaCode1 = personalPhoneAreaCode1;
    return this;
  }

   /**
   * The primary personal phone number area code of the user.
   * @return personalPhoneAreaCode1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "09", value = "The primary personal phone number area code of the user.")

  public String getPersonalPhoneAreaCode1() {
    return personalPhoneAreaCode1;
  }


  public void setPersonalPhoneAreaCode1(String personalPhoneAreaCode1) {
    this.personalPhoneAreaCode1 = personalPhoneAreaCode1;
  }


  public User personalPhone1(String personalPhone1) {
    
    this.personalPhone1 = personalPhone1;
    return this;
  }

   /**
   * The primary personal phone number of the user.
   * @return personalPhone1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5006000", value = "The primary personal phone number of the user.")

  public String getPersonalPhone1() {
    return personalPhone1;
  }


  public void setPersonalPhone1(String personalPhone1) {
    this.personalPhone1 = personalPhone1;
  }


  public User personalPhoneAreaCode2(String personalPhoneAreaCode2) {
    
    this.personalPhoneAreaCode2 = personalPhoneAreaCode2;
    return this;
  }

   /**
   * The secondary personal phone number area code of the user.
   * @return personalPhoneAreaCode2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "09", value = "The secondary personal phone number area code of the user.")

  public String getPersonalPhoneAreaCode2() {
    return personalPhoneAreaCode2;
  }


  public void setPersonalPhoneAreaCode2(String personalPhoneAreaCode2) {
    this.personalPhoneAreaCode2 = personalPhoneAreaCode2;
  }


  public User personalPhone2(String personalPhone2) {
    
    this.personalPhone2 = personalPhone2;
    return this;
  }

   /**
   * The secondary personal phone number of the user.
   * @return personalPhone2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5007000", value = "The secondary personal phone number of the user.")

  public String getPersonalPhone2() {
    return personalPhone2;
  }


  public void setPersonalPhone2(String personalPhone2) {
    this.personalPhone2 = personalPhone2;
  }


  public User personalFaxAreaCode1(String personalFaxAreaCode1) {
    
    this.personalFaxAreaCode1 = personalFaxAreaCode1;
    return this;
  }

   /**
   * The personal fax number area code of the user.
   * @return personalFaxAreaCode1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "09", value = "The personal fax number area code of the user.")

  public String getPersonalFaxAreaCode1() {
    return personalFaxAreaCode1;
  }


  public void setPersonalFaxAreaCode1(String personalFaxAreaCode1) {
    this.personalFaxAreaCode1 = personalFaxAreaCode1;
  }


  public User personalFax1(String personalFax1) {
    
    this.personalFax1 = personalFax1;
    return this;
  }

   /**
   * The personal fax number of the user.
   * @return personalFax1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5008000", value = "The personal fax number of the user.")

  public String getPersonalFax1() {
    return personalFax1;
  }


  public void setPersonalFax1(String personalFax1) {
    this.personalFax1 = personalFax1;
  }


  public User otherPhoneAreaCode1(String otherPhoneAreaCode1) {
    
    this.otherPhoneAreaCode1 = otherPhoneAreaCode1;
    return this;
  }

   /**
   * The other phone number area code of the user.
   * @return otherPhoneAreaCode1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "09", value = "The other phone number area code of the user.")

  public String getOtherPhoneAreaCode1() {
    return otherPhoneAreaCode1;
  }


  public void setOtherPhoneAreaCode1(String otherPhoneAreaCode1) {
    this.otherPhoneAreaCode1 = otherPhoneAreaCode1;
  }


  public User otherPhone1(String otherPhone1) {
    
    this.otherPhone1 = otherPhone1;
    return this;
  }

   /**
   * The other phone number of the user.
   * @return otherPhone1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5009000", value = "The other phone number of the user.")

  public String getOtherPhone1() {
    return otherPhone1;
  }


  public void setOtherPhone1(String otherPhone1) {
    this.otherPhone1 = otherPhone1;
  }


  public User otherMobile(String otherMobile) {
    
    this.otherMobile = otherMobile;
    return this;
  }

   /**
   * The other mobile number of the user.
   * @return otherMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "61900900900", value = "The other mobile number of the user.")

  public String getOtherMobile() {
    return otherMobile;
  }


  public void setOtherMobile(String otherMobile) {
    this.otherMobile = otherMobile;
  }


  public User otherFirstName(String otherFirstName) {
    
    this.otherFirstName = otherFirstName;
    return this;
  }

   /**
   * The other first name of the user.
   * @return otherFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Harold", value = "The other first name of the user.")

  public String getOtherFirstName() {
    return otherFirstName;
  }


  public void setOtherFirstName(String otherFirstName) {
    this.otherFirstName = otherFirstName;
  }


  public User otherLastName(String otherLastName) {
    
    this.otherLastName = otherLastName;
    return this;
  }

   /**
   * The other last name of the user.
   * @return otherLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Wickman", value = "The other last name of the user.")

  public String getOtherLastName() {
    return otherLastName;
  }


  public void setOtherLastName(String otherLastName) {
    this.otherLastName = otherLastName;
  }


  public User otherTitle(String otherTitle) {
    
    this.otherTitle = otherTitle;
    return this;
  }

   /**
   * The other title to address the user with.
   * @return otherTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mr", value = "The other title to address the user with.")

  public String getOtherTitle() {
    return otherTitle;
  }


  public void setOtherTitle(String otherTitle) {
    this.otherTitle = otherTitle;
  }


  public User companyName(String companyName) {
    
    this.companyName = companyName;
    return this;
  }

   /**
   * The company name of the user.
   * @return companyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Whispir", value = "The company name of the user.")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public User jobTitle(String jobTitle) {
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * The job title of the user.
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Software Engineer", value = "The job title of the user.")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }


  public User division(String division) {
    
    this.division = division;
    return this;
  }

   /**
   * The division in the company to which the user is associated.
   * @return division
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Technology", value = "The division in the company to which the user is associated.")

  public String getDivision() {
    return division;
  }


  public void setDivision(String division) {
    this.division = division;
  }


  public User businessUnit(String businessUnit) {
    
    this.businessUnit = businessUnit;
    return this;
  }

   /**
   * The business unit in the company to which the user is associated.
   * @return businessUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Core Platform", value = "The business unit in the company to which the user is associated.")

  public String getBusinessUnit() {
    return businessUnit;
  }


  public void setBusinessUnit(String businessUnit) {
    this.businessUnit = businessUnit;
  }


  public User department(String department) {
    
    this.department = department;
    return this;
  }

   /**
   * The department in the company to which the user is associated.
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Research & Development", value = "The department in the company to which the user is associated.")

  public String getDepartment() {
    return department;
  }


  public void setDepartment(String department) {
    this.department = department;
  }


  public User teamName1(String teamName1) {
    
    this.teamName1 = teamName1;
    return this;
  }

   /**
   * The primary team name of the user.
   * @return teamName1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Optimus Prime", value = "The primary team name of the user.")

  public String getTeamName1() {
    return teamName1;
  }


  public void setTeamName1(String teamName1) {
    this.teamName1 = teamName1;
  }


  public User teamName2(String teamName2) {
    
    this.teamName2 = teamName2;
    return this;
  }

   /**
   * The secondary team name of the user.
   * @return teamName2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Bumblebee", value = "The secondary team name of the user.")

  public String getTeamName2() {
    return teamName2;
  }


  public void setTeamName2(String teamName2) {
    this.teamName2 = teamName2;
  }


  public User role1(String role1) {
    
    this.role1 = role1;
    return this;
  }

   /**
   * The primary role of the user.
   * @return role1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Administrator", value = "The primary role of the user.")

  public String getRole1() {
    return role1;
  }


  public void setRole1(String role1) {
    this.role1 = role1;
  }


  public User role2(String role2) {
    
    this.role2 = role2;
    return this;
  }

   /**
   * The secondary role of the user.
   * @return role2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Analyst", value = "The secondary role of the user.")

  public String getRole2() {
    return role2;
  }


  public void setRole2(String role2) {
    this.role2 = role2;
  }


   /**
   * A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object, describing all discoverable resources in relation to the original request.
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object, describing all discoverable resources in relation to the original request.")

  public List<LinkInner> getLink() {
    return link;
  }





  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
        Objects.equals(this.userName, user.userName) &&
        Objects.equals(this.password, user.password) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.middleName, user.middleName) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.title, user.title) &&
        Objects.equals(this.nickname, user.nickname) &&
        Objects.equals(this.status, user.status) &&
        Objects.equals(this.workMobilePhone1, user.workMobilePhone1) &&
        Objects.equals(this.workEmailAddress1, user.workEmailAddress1) &&
        Objects.equals(this.workCountry, user.workCountry) &&
        Objects.equals(this.timezone, user.timezone) &&
        Objects.equals(this.workMobilePhone2, user.workMobilePhone2) &&
        Objects.equals(this.workEmailAddress2, user.workEmailAddress2) &&
        Objects.equals(this.workPhoneAreaCode1, user.workPhoneAreaCode1) &&
        Objects.equals(this.workPhone1, user.workPhone1) &&
        Objects.equals(this.workPhoneAreaCode2, user.workPhoneAreaCode2) &&
        Objects.equals(this.workPhone2, user.workPhone2) &&
        Objects.equals(this.workFaxAreaCode1, user.workFaxAreaCode1) &&
        Objects.equals(this.workFax1, user.workFax1) &&
        Objects.equals(this.workSatellitePhone, user.workSatellitePhone) &&
        Objects.equals(this.workOtherPhone, user.workOtherPhone) &&
        Objects.equals(this.workAddress1, user.workAddress1) &&
        Objects.equals(this.workAddress2, user.workAddress2) &&
        Objects.equals(this.workSuburb, user.workSuburb) &&
        Objects.equals(this.workState, user.workState) &&
        Objects.equals(this.workPostCode, user.workPostCode) &&
        Objects.equals(this.workPostalAddress1, user.workPostalAddress1) &&
        Objects.equals(this.workPostalAddress2, user.workPostalAddress2) &&
        Objects.equals(this.workPostalSuburb, user.workPostalSuburb) &&
        Objects.equals(this.workPostalState, user.workPostalState) &&
        Objects.equals(this.workPostalPostCode, user.workPostalPostCode) &&
        Objects.equals(this.personalEmailAddress1, user.personalEmailAddress1) &&
        Objects.equals(this.personalEmailAddress2, user.personalEmailAddress2) &&
        Objects.equals(this.personalAddress1, user.personalAddress1) &&
        Objects.equals(this.personalAddress2, user.personalAddress2) &&
        Objects.equals(this.personalSuburb, user.personalSuburb) &&
        Objects.equals(this.personalState, user.personalState) &&
        Objects.equals(this.personalPostCode, user.personalPostCode) &&
        Objects.equals(this.personalCountry, user.personalCountry) &&
        Objects.equals(this.personalPhoneAreaCode1, user.personalPhoneAreaCode1) &&
        Objects.equals(this.personalPhone1, user.personalPhone1) &&
        Objects.equals(this.personalPhoneAreaCode2, user.personalPhoneAreaCode2) &&
        Objects.equals(this.personalPhone2, user.personalPhone2) &&
        Objects.equals(this.personalFaxAreaCode1, user.personalFaxAreaCode1) &&
        Objects.equals(this.personalFax1, user.personalFax1) &&
        Objects.equals(this.otherPhoneAreaCode1, user.otherPhoneAreaCode1) &&
        Objects.equals(this.otherPhone1, user.otherPhone1) &&
        Objects.equals(this.otherMobile, user.otherMobile) &&
        Objects.equals(this.otherFirstName, user.otherFirstName) &&
        Objects.equals(this.otherLastName, user.otherLastName) &&
        Objects.equals(this.otherTitle, user.otherTitle) &&
        Objects.equals(this.companyName, user.companyName) &&
        Objects.equals(this.jobTitle, user.jobTitle) &&
        Objects.equals(this.division, user.division) &&
        Objects.equals(this.businessUnit, user.businessUnit) &&
        Objects.equals(this.department, user.department) &&
        Objects.equals(this.teamName1, user.teamName1) &&
        Objects.equals(this.teamName2, user.teamName2) &&
        Objects.equals(this.role1, user.role1) &&
        Objects.equals(this.role2, user.role2) &&
        Objects.equals(this.link, user.link);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userName, password, firstName, middleName, lastName, title, nickname, status, workMobilePhone1, workEmailAddress1, workCountry, timezone, workMobilePhone2, workEmailAddress2, workPhoneAreaCode1, workPhone1, workPhoneAreaCode2, workPhone2, workFaxAreaCode1, workFax1, workSatellitePhone, workOtherPhone, workAddress1, workAddress2, workSuburb, workState, workPostCode, workPostalAddress1, workPostalAddress2, workPostalSuburb, workPostalState, workPostalPostCode, personalEmailAddress1, personalEmailAddress2, personalAddress1, personalAddress2, personalSuburb, personalState, personalPostCode, personalCountry, personalPhoneAreaCode1, personalPhone1, personalPhoneAreaCode2, personalPhone2, personalFaxAreaCode1, personalFax1, otherPhoneAreaCode1, otherPhone1, otherMobile, otherFirstName, otherLastName, otherTitle, companyName, jobTitle, division, businessUnit, department, teamName1, teamName2, role1, role2, link);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    workMobilePhone1: ").append(toIndentedString(workMobilePhone1)).append("\n");
    sb.append("    workEmailAddress1: ").append(toIndentedString(workEmailAddress1)).append("\n");
    sb.append("    workCountry: ").append(toIndentedString(workCountry)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    workMobilePhone2: ").append(toIndentedString(workMobilePhone2)).append("\n");
    sb.append("    workEmailAddress2: ").append(toIndentedString(workEmailAddress2)).append("\n");
    sb.append("    workPhoneAreaCode1: ").append(toIndentedString(workPhoneAreaCode1)).append("\n");
    sb.append("    workPhone1: ").append(toIndentedString(workPhone1)).append("\n");
    sb.append("    workPhoneAreaCode2: ").append(toIndentedString(workPhoneAreaCode2)).append("\n");
    sb.append("    workPhone2: ").append(toIndentedString(workPhone2)).append("\n");
    sb.append("    workFaxAreaCode1: ").append(toIndentedString(workFaxAreaCode1)).append("\n");
    sb.append("    workFax1: ").append(toIndentedString(workFax1)).append("\n");
    sb.append("    workSatellitePhone: ").append(toIndentedString(workSatellitePhone)).append("\n");
    sb.append("    workOtherPhone: ").append(toIndentedString(workOtherPhone)).append("\n");
    sb.append("    workAddress1: ").append(toIndentedString(workAddress1)).append("\n");
    sb.append("    workAddress2: ").append(toIndentedString(workAddress2)).append("\n");
    sb.append("    workSuburb: ").append(toIndentedString(workSuburb)).append("\n");
    sb.append("    workState: ").append(toIndentedString(workState)).append("\n");
    sb.append("    workPostCode: ").append(toIndentedString(workPostCode)).append("\n");
    sb.append("    workPostalAddress1: ").append(toIndentedString(workPostalAddress1)).append("\n");
    sb.append("    workPostalAddress2: ").append(toIndentedString(workPostalAddress2)).append("\n");
    sb.append("    workPostalSuburb: ").append(toIndentedString(workPostalSuburb)).append("\n");
    sb.append("    workPostalState: ").append(toIndentedString(workPostalState)).append("\n");
    sb.append("    workPostalPostCode: ").append(toIndentedString(workPostalPostCode)).append("\n");
    sb.append("    personalEmailAddress1: ").append(toIndentedString(personalEmailAddress1)).append("\n");
    sb.append("    personalEmailAddress2: ").append(toIndentedString(personalEmailAddress2)).append("\n");
    sb.append("    personalAddress1: ").append(toIndentedString(personalAddress1)).append("\n");
    sb.append("    personalAddress2: ").append(toIndentedString(personalAddress2)).append("\n");
    sb.append("    personalSuburb: ").append(toIndentedString(personalSuburb)).append("\n");
    sb.append("    personalState: ").append(toIndentedString(personalState)).append("\n");
    sb.append("    personalPostCode: ").append(toIndentedString(personalPostCode)).append("\n");
    sb.append("    personalCountry: ").append(toIndentedString(personalCountry)).append("\n");
    sb.append("    personalPhoneAreaCode1: ").append(toIndentedString(personalPhoneAreaCode1)).append("\n");
    sb.append("    personalPhone1: ").append(toIndentedString(personalPhone1)).append("\n");
    sb.append("    personalPhoneAreaCode2: ").append(toIndentedString(personalPhoneAreaCode2)).append("\n");
    sb.append("    personalPhone2: ").append(toIndentedString(personalPhone2)).append("\n");
    sb.append("    personalFaxAreaCode1: ").append(toIndentedString(personalFaxAreaCode1)).append("\n");
    sb.append("    personalFax1: ").append(toIndentedString(personalFax1)).append("\n");
    sb.append("    otherPhoneAreaCode1: ").append(toIndentedString(otherPhoneAreaCode1)).append("\n");
    sb.append("    otherPhone1: ").append(toIndentedString(otherPhone1)).append("\n");
    sb.append("    otherMobile: ").append(toIndentedString(otherMobile)).append("\n");
    sb.append("    otherFirstName: ").append(toIndentedString(otherFirstName)).append("\n");
    sb.append("    otherLastName: ").append(toIndentedString(otherLastName)).append("\n");
    sb.append("    otherTitle: ").append(toIndentedString(otherTitle)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    division: ").append(toIndentedString(division)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    teamName1: ").append(toIndentedString(teamName1)).append("\n");
    sb.append("    teamName2: ").append(toIndentedString(teamName2)).append("\n");
    sb.append("    role1: ").append(toIndentedString(role1)).append("\n");
    sb.append("    role2: ").append(toIndentedString(role2)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("userName");
    openapiFields.add("password");
    openapiFields.add("firstName");
    openapiFields.add("middleName");
    openapiFields.add("lastName");
    openapiFields.add("title");
    openapiFields.add("nickname");
    openapiFields.add("status");
    openapiFields.add("workMobilePhone1");
    openapiFields.add("workEmailAddress1");
    openapiFields.add("workCountry");
    openapiFields.add("timezone");
    openapiFields.add("workMobilePhone2");
    openapiFields.add("workEmailAddress2");
    openapiFields.add("workPhoneAreaCode1");
    openapiFields.add("workPhone1");
    openapiFields.add("workPhoneAreaCode2");
    openapiFields.add("workPhone2");
    openapiFields.add("workFaxAreaCode1");
    openapiFields.add("workFax1");
    openapiFields.add("workSatellitePhone");
    openapiFields.add("workOtherPhone");
    openapiFields.add("workAddress1");
    openapiFields.add("workAddress2");
    openapiFields.add("workSuburb");
    openapiFields.add("workState");
    openapiFields.add("workPostCode");
    openapiFields.add("workPostalAddress1");
    openapiFields.add("workPostalAddress2");
    openapiFields.add("workPostalSuburb");
    openapiFields.add("workPostalState");
    openapiFields.add("workPostalPostCode");
    openapiFields.add("personalEmailAddress1");
    openapiFields.add("personalEmailAddress2");
    openapiFields.add("personalAddress1");
    openapiFields.add("personalAddress2");
    openapiFields.add("personalSuburb");
    openapiFields.add("personalState");
    openapiFields.add("personalPostCode");
    openapiFields.add("personalCountry");
    openapiFields.add("personalPhoneAreaCode1");
    openapiFields.add("personalPhone1");
    openapiFields.add("personalPhoneAreaCode2");
    openapiFields.add("personalPhone2");
    openapiFields.add("personalFaxAreaCode1");
    openapiFields.add("personalFax1");
    openapiFields.add("otherPhoneAreaCode1");
    openapiFields.add("otherPhone1");
    openapiFields.add("otherMobile");
    openapiFields.add("otherFirstName");
    openapiFields.add("otherLastName");
    openapiFields.add("otherTitle");
    openapiFields.add("companyName");
    openapiFields.add("jobTitle");
    openapiFields.add("division");
    openapiFields.add("businessUnit");
    openapiFields.add("department");
    openapiFields.add("teamName1");
    openapiFields.add("teamName2");
    openapiFields.add("role1");
    openapiFields.add("role2");
    openapiFields.add("link");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("userName");
    openapiRequiredFields.add("password");
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("lastName");
    openapiRequiredFields.add("workCountry");
    openapiRequiredFields.add("timezone");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to User
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (User.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in User is not found in the empty JSON string", User.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!User.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `User` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : User.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
      if (jsonObj.get("password") != null && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      if (jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if (jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if (jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("workMobilePhone1") != null && !jsonObj.get("workMobilePhone1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workMobilePhone1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workMobilePhone1").toString()));
      }
      if (jsonObj.get("workEmailAddress1") != null && !jsonObj.get("workEmailAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workEmailAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workEmailAddress1").toString()));
      }
      if (jsonObj.get("workCountry") != null && !jsonObj.get("workCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workCountry").toString()));
      }
      if (jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if (jsonObj.get("workMobilePhone2") != null && !jsonObj.get("workMobilePhone2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workMobilePhone2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workMobilePhone2").toString()));
      }
      if (jsonObj.get("workEmailAddress2") != null && !jsonObj.get("workEmailAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workEmailAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workEmailAddress2").toString()));
      }
      if (jsonObj.get("workPhoneAreaCode1") != null && !jsonObj.get("workPhoneAreaCode1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneAreaCode1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneAreaCode1").toString()));
      }
      if (jsonObj.get("workPhone1") != null && !jsonObj.get("workPhone1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone1").toString()));
      }
      if (jsonObj.get("workPhoneAreaCode2") != null && !jsonObj.get("workPhoneAreaCode2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneAreaCode2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneAreaCode2").toString()));
      }
      if (jsonObj.get("workPhone2") != null && !jsonObj.get("workPhone2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone2").toString()));
      }
      if (jsonObj.get("workFaxAreaCode1") != null && !jsonObj.get("workFaxAreaCode1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workFaxAreaCode1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workFaxAreaCode1").toString()));
      }
      if (jsonObj.get("workFax1") != null && !jsonObj.get("workFax1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workFax1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workFax1").toString()));
      }
      if (jsonObj.get("workSatellitePhone") != null && !jsonObj.get("workSatellitePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workSatellitePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workSatellitePhone").toString()));
      }
      if (jsonObj.get("workOtherPhone") != null && !jsonObj.get("workOtherPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workOtherPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workOtherPhone").toString()));
      }
      if (jsonObj.get("workAddress1") != null && !jsonObj.get("workAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workAddress1").toString()));
      }
      if (jsonObj.get("workAddress2") != null && !jsonObj.get("workAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workAddress2").toString()));
      }
      if (jsonObj.get("workSuburb") != null && !jsonObj.get("workSuburb").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workSuburb` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workSuburb").toString()));
      }
      if (jsonObj.get("workState") != null && !jsonObj.get("workState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workState").toString()));
      }
      if (jsonObj.get("workPostCode") != null && !jsonObj.get("workPostCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPostCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPostCode").toString()));
      }
      if (jsonObj.get("workPostalAddress1") != null && !jsonObj.get("workPostalAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPostalAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPostalAddress1").toString()));
      }
      if (jsonObj.get("workPostalAddress2") != null && !jsonObj.get("workPostalAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPostalAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPostalAddress2").toString()));
      }
      if (jsonObj.get("workPostalSuburb") != null && !jsonObj.get("workPostalSuburb").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPostalSuburb` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPostalSuburb").toString()));
      }
      if (jsonObj.get("workPostalState") != null && !jsonObj.get("workPostalState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPostalState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPostalState").toString()));
      }
      if (jsonObj.get("workPostalPostCode") != null && !jsonObj.get("workPostalPostCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPostalPostCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPostalPostCode").toString()));
      }
      if (jsonObj.get("personalEmailAddress1") != null && !jsonObj.get("personalEmailAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalEmailAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalEmailAddress1").toString()));
      }
      if (jsonObj.get("personalEmailAddress2") != null && !jsonObj.get("personalEmailAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalEmailAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalEmailAddress2").toString()));
      }
      if (jsonObj.get("personalAddress1") != null && !jsonObj.get("personalAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalAddress1").toString()));
      }
      if (jsonObj.get("personalAddress2") != null && !jsonObj.get("personalAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalAddress2").toString()));
      }
      if (jsonObj.get("personalSuburb") != null && !jsonObj.get("personalSuburb").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalSuburb` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalSuburb").toString()));
      }
      if (jsonObj.get("personalState") != null && !jsonObj.get("personalState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalState").toString()));
      }
      if (jsonObj.get("personalPostCode") != null && !jsonObj.get("personalPostCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalPostCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalPostCode").toString()));
      }
      if (jsonObj.get("personalCountry") != null && !jsonObj.get("personalCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalCountry").toString()));
      }
      if (jsonObj.get("personalPhoneAreaCode1") != null && !jsonObj.get("personalPhoneAreaCode1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalPhoneAreaCode1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalPhoneAreaCode1").toString()));
      }
      if (jsonObj.get("personalPhone1") != null && !jsonObj.get("personalPhone1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalPhone1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalPhone1").toString()));
      }
      if (jsonObj.get("personalPhoneAreaCode2") != null && !jsonObj.get("personalPhoneAreaCode2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalPhoneAreaCode2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalPhoneAreaCode2").toString()));
      }
      if (jsonObj.get("personalPhone2") != null && !jsonObj.get("personalPhone2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalPhone2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalPhone2").toString()));
      }
      if (jsonObj.get("personalFaxAreaCode1") != null && !jsonObj.get("personalFaxAreaCode1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalFaxAreaCode1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalFaxAreaCode1").toString()));
      }
      if (jsonObj.get("personalFax1") != null && !jsonObj.get("personalFax1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalFax1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalFax1").toString()));
      }
      if (jsonObj.get("otherPhoneAreaCode1") != null && !jsonObj.get("otherPhoneAreaCode1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherPhoneAreaCode1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherPhoneAreaCode1").toString()));
      }
      if (jsonObj.get("otherPhone1") != null && !jsonObj.get("otherPhone1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherPhone1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherPhone1").toString()));
      }
      if (jsonObj.get("otherMobile") != null && !jsonObj.get("otherMobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherMobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherMobile").toString()));
      }
      if (jsonObj.get("otherFirstName") != null && !jsonObj.get("otherFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherFirstName").toString()));
      }
      if (jsonObj.get("otherLastName") != null && !jsonObj.get("otherLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherLastName").toString()));
      }
      if (jsonObj.get("otherTitle") != null && !jsonObj.get("otherTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherTitle").toString()));
      }
      if (jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if (jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if (jsonObj.get("division") != null && !jsonObj.get("division").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `division` to be a primitive type in the JSON string but got `%s`", jsonObj.get("division").toString()));
      }
      if (jsonObj.get("businessUnit") != null && !jsonObj.get("businessUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessUnit").toString()));
      }
      if (jsonObj.get("department") != null && !jsonObj.get("department").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `department` to be a primitive type in the JSON string but got `%s`", jsonObj.get("department").toString()));
      }
      if (jsonObj.get("teamName1") != null && !jsonObj.get("teamName1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `teamName1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("teamName1").toString()));
      }
      if (jsonObj.get("teamName2") != null && !jsonObj.get("teamName2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `teamName2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("teamName2").toString()));
      }
      if (jsonObj.get("role1") != null && !jsonObj.get("role1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role1").toString()));
      }
      if (jsonObj.get("role2") != null && !jsonObj.get("role2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role2").toString()));
      }
      JsonArray jsonArraylink = jsonObj.getAsJsonArray("link");
      if (jsonArraylink != null) {
        // ensure the json data is an array
        if (!jsonObj.get("link").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `link` to be an array in the JSON string but got `%s`", jsonObj.get("link").toString()));
        }

        // validate the optional field `link` (array)
        for (int i = 0; i < jsonArraylink.size(); i++) {
          LinkInner.validateJsonObject(jsonArraylink.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!User.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'User' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<User> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(User.class));

       return (TypeAdapter<T>) new TypeAdapter<User>() {
           @Override
           public void write(JsonWriter out, User value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public User read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of User given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of User
  * @throws IOException if the JSON string is invalid with respect to User
  */
  public static User fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, User.class);
  }

 /**
  * Convert an instance of User to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

