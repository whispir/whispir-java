/*
 * Whispir Platform API
 * Whispir Platform API for cross channel and multi channel communications. Documentation on each endpoint is available at https://developers.whispir.com.
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support@whispir.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.whispir.api;

import com.whispir.client.ApiException;
import com.whispir.model.ApiError;
import java.math.BigDecimal;
import com.whispir.model.ResponseRule;
import com.whispir.model.ResponseRuleCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResponseRulesApi
 */
@Disabled
public class ResponseRulesApiTest {

    private final ResponseRulesApi api = new ResponseRulesApi();

    /**
     * Delete a response rule
     *
     * Deletes a Response Rule object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteResponseRulesByIdTest() throws ApiException {
        String workspaceId = null;
        String xApiKey = null;
        String responseRuleId = null;
        api.deleteResponseRulesById(workspaceId, xApiKey, responseRuleId);
        // TODO: test validations
    }

    /**
     * List response rules
     *
     * Returns a list of response rules.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResponseRulesTest() throws ApiException {
        String workspaceId = null;
        String xApiKey = null;
        String accept = null;
        BigDecimal limit = null;
        BigDecimal offset = null;
        String sortOrder = null;
        String sortFields = null;
        ResponseRuleCollection response = api.getResponseRules(workspaceId, xApiKey, accept, limit, offset, sortOrder, sortFields);
        // TODO: test validations
    }

    /**
     * Retrieve a response rule
     *
     * Retrieves a response rule object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getResponseRulesByIdTest() throws ApiException {
        String workspaceId = null;
        String xApiKey = null;
        String accept = null;
        String responseRuleId = null;
        ResponseRule response = api.getResponseRulesById(workspaceId, xApiKey, accept, responseRuleId);
        // TODO: test validations
    }

    /**
     * Create a response rule
     *
     * ## Response Template Patterns  Each Response Rule has a series of **Patterns** that allow the creator to specify what textual content should be matched in the response SMS or Email, and a number that should be entered when IVR (Voice) is being used.  Each Response Rule can specify as many Response Template Patterns as required.  Each of the Patterns specified will also dynamically create buttons within any Rich Message that is associated with the Response Rule.  This provides an out of the box capability to quickly gather feedback from the field using a Rich User interface, and leveraging SMS as the delivery mechanism. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postResponseRulesTest() throws ApiException {
        String workspaceId = null;
        String xApiKey = null;
        String contentType = null;
        String accept = null;
        ResponseRule responseRule = null;
        api.postResponseRules(workspaceId, xApiKey, contentType, accept, responseRule);
        // TODO: test validations
    }

    /**
     * Update a response rule
     *
     * Updates a Response Rule object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putResponseRulesByIdTest() throws ApiException {
        String workspaceId = null;
        String xApiKey = null;
        String contentType = null;
        String accept = null;
        String responseRuleId = null;
        ResponseRule responseRule = null;
        api.putResponseRulesById(workspaceId, xApiKey, contentType, accept, responseRuleId, responseRule);
        // TODO: test validations
    }

}
