/*
 * Whispir Platform API
 * Whispir Platform API for cross channel and multi channel communications. Documentation on each endpoint is available at https://developers.whispir.com.
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support@whispir.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.whispir.api;

import com.whispir.client.ApiException;
import com.whispir.model.ApiError;
import java.math.BigDecimal;
import com.whispir.model.Workspace;
import com.whispir.model.WorkspaceCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkspacesApi
 */
@Disabled
public class WorkspacesApiTest {

    private final WorkspacesApi api = new WorkspacesApi();

    /**
     * List workspaces
     *
     * Returns a list of your workspaces.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspacesTest() throws ApiException {
        String xApiKey = null;
        String accept = null;
        BigDecimal limit = null;
        BigDecimal offset = null;
        String sortOrder = null;
        String sortFields = null;
        WorkspaceCollection response = api.getWorkspaces(xApiKey, accept, limit, offset, sortOrder, sortFields);
        // TODO: test validations
    }

    /**
     * Retrieve a workspace
     *
     * Use GET on a Workspace Id to verify it is a valid Workspace ID, and see a list of all the other endpoint URIs in that workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspacesByIdTest() throws ApiException {
        String workspaceId = null;
        String xApiKey = null;
        String accept = null;
        Workspace response = api.getWorkspacesById(workspaceId, xApiKey, accept);
        // TODO: test validations
    }

    /**
     * Create a workspace
     *
     * Note: There is no limit to the amount of workspaces each API user can create. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postWorkspacesTest() throws ApiException {
        String xApiKey = null;
        String contentType = null;
        String accept = null;
        Workspace workspace = null;
        Workspace response = api.postWorkspaces(xApiKey, contentType, accept, workspace);
        // TODO: test validations
    }

    /**
     * Update a workspace
     *
     * Update a workspace endpoint
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putWorkspaceByIdTest() throws ApiException {
        String workspaceId = null;
        String xApiKey = null;
        String contentType = null;
        String accept = null;
        Workspace workspace = null;
        Workspace response = api.putWorkspaceById(workspaceId, xApiKey, contentType, accept, workspace);
        // TODO: test validations
    }

}
