/*
 * Whispir Platform API
 * Whispir Platform API for cross channel and multi channel communications. Documentation on each endpoint is available at https://developers.whispir.com.
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: support@whispir.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.whispir.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.whispir.model.Link;
import com.whispir.model.MessageDlr;
import com.whispir.model.MessageEmail;
import com.whispir.model.MessageFeatures;
import com.whispir.model.MessageSocial;
import com.whispir.model.MessageVoice;
import com.whispir.model.MessageWeb;
import com.whispir.model.Resource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Message
 */
public class MessageTest {
    private final Message model = new Message();

    /**
     * Model tests for Message
     */
    @Test
    public void testMessage() {
        // TODO: test Message
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

    /**
     * Test the property 'body'
     */
    @Test
    public void bodyTest() {
        // TODO: test body
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'voice'
     */
    @Test
    public void voiceTest() {
        // TODO: test voice
    }

    /**
     * Test the property 'web'
     */
    @Test
    public void webTest() {
        // TODO: test web
    }

    /**
     * Test the property 'social'
     */
    @Test
    public void socialTest() {
        // TODO: test social
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'features'
     */
    @Test
    public void featuresTest() {
        // TODO: test features
    }

    /**
     * Test the property 'resource'
     */
    @Test
    public void resourceTest() {
        // TODO: test resource
    }

    /**
     * Test the property 'messageTemplateId'
     */
    @Test
    public void messageTemplateIdTest() {
        // TODO: test messageTemplateId
    }

    /**
     * Test the property 'messageTemplateName'
     */
    @Test
    public void messageTemplateNameTest() {
        // TODO: test messageTemplateName
    }

    /**
     * Test the property 'callbackId'
     */
    @Test
    public void callbackIdTest() {
        // TODO: test callbackId
    }

    /**
     * Test the property 'callbackParameters'
     */
    @Test
    public void callbackParametersTest() {
        // TODO: test callbackParameters
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'eventId'
     */
    @Test
    public void eventIdTest() {
        // TODO: test eventId
    }

    /**
     * Test the property 'messageType'
     */
    @Test
    public void messageTypeTest() {
        // TODO: test messageType
    }

    /**
     * Test the property 'scheduleType'
     */
    @Test
    public void scheduleTypeTest() {
        // TODO: test scheduleType
    }

    /**
     * Test the property 'scheduleDate'
     */
    @Test
    public void scheduleDateTest() {
        // TODO: test scheduleDate
    }

    /**
     * Test the property 'repetitionCount'
     */
    @Test
    public void repetitionCountTest() {
        // TODO: test repetitionCount
    }

    /**
     * Test the property 'repeatDays'
     */
    @Test
    public void repeatDaysTest() {
        // TODO: test repeatDays
    }

    /**
     * Test the property 'repeatHrs'
     */
    @Test
    public void repeatHrsTest() {
        // TODO: test repeatHrs
    }

    /**
     * Test the property 'repeatMin'
     */
    @Test
    public void repeatMinTest() {
        // TODO: test repeatMin
    }

    /**
     * Test the property 'from'
     */
    @Test
    public void fromTest() {
        // TODO: test from
    }

    /**
     * Test the property 'direction'
     */
    @Test
    public void directionTest() {
        // TODO: test direction
    }

    /**
     * Test the property 'responseCount'
     */
    @Test
    public void responseCountTest() {
        // TODO: test responseCount
    }

    /**
     * Test the property 'createdTime'
     */
    @Test
    public void createdTimeTest() {
        // TODO: test createdTime
    }

    /**
     * Test the property 'whatsappValidMessage'
     */
    @Test
    public void whatsappValidMessageTest() {
        // TODO: test whatsappValidMessage
    }

    /**
     * Test the property 'validBody'
     */
    @Test
    public void validBodyTest() {
        // TODO: test validBody
    }

    /**
     * Test the property 'validSubject'
     */
    @Test
    public void validSubjectTest() {
        // TODO: test validSubject
    }

    /**
     * Test the property 'dlr'
     */
    @Test
    public void dlrTest() {
        // TODO: test dlr
    }

    /**
     * Test the property 'link'
     */
    @Test
    public void linkTest() {
        // TODO: test link
    }

}
