openapi: 3.0.0
info:
  contact:
    email: support@whispir.com
    name: Whispir Support
    url: https://www.whispir.com/support
  description: Whispir Platform API for cross channel and multi channel communications.
    Documentation on each endpoint is available at https://developers.whispir.com.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://www.whispir.com/terms-of-service
  title: Whispir Platform API
  version: 1.1.1
  x-release-please-start-version: true
  x-release-please-end: true
externalDocs:
  description: API Documentation for Whispir Platform API
  url: https://developers.whispir.com
servers:
- description: Australia
  url: https://api.au.whispir.com
- description: Singapore
  url: https://api.ap.whispir.com
- description: AP1
  url: https://api.ap1.whispir.com
- description: New Zealand
  url: https://api.nz.whispir.com
- description: United States
  url: https://api.us.whispir.com
- description: IT
  url: https://api.it.whispir.com
- description: Education
  url: https://api.education.whispir.com
security:
- BasicAuth: []
  ApiKeyAuth: []
- BearerAuth: []
  ApiKeyAuth: []
tags:
- description: Communications are the core of what the Whispir Platform API offers
    as a service to customers.
  externalDocs:
    url: https://developers.whispir.com/c2NoOjE0NDgyNjQ-message
  name: Messages
- description: "Using Whispir’s API, one can submit data payloads to be stored by\
    \ Whispir and used in various API calls. These files are uploaded through the\
    \ /resources endpoint."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjI0NTEwMjA-resource
  name: Resources
- description: "Using the Whispir Platform API, messages can be stored as Message\
    \ Templates that can be easily referenced within your API calls."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM0ODAzNDA4-template
  name: Templates
- description: Using Response Rules in combination with Message Templates allows users
    to automatically group responses to messages into different response groups for
    reporting purposes.
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM4OTQzOTA1-response-rule
  name: Response Rules
- description: "Contacts form the core of the Whispir offerings. They make up the\
    \ base data to which and from which all communications are performed. The Whispir\
    \ API provides secure cloud based storage for your contact information. This can\
    \ then easily be retrieved by any application or device that requires access,\
    \ and has permission to do so."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM0ODAzNDA5-contact
  name: Contacts
- description: Whispir’s API allows users to categorise their contacts into different
    groups to simplify the distribution of messages.
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM4OTQzOTE5-distribution-list
  name: Distribution Lists
- description: "Scenarios allows users to simplify the message delivery processes\
    \ through automated one click communications. The process involves creating a\
    \ fixed message or a message template combined with a contact or a distribution\
    \ list. When the scenario is executed, the message is sent to the contacts."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM4OTQzOTIw-scenario
  name: Scenarios
- description: Whispir utilises API Callbacks to send simple notifications to different
    registered services in the event that some change has occurred on the Whispir
    Platform.
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM4OTQzOTIx-callback
  name: Callbacks
- description: "Workspace allows application developers to create new work areas for\
    \ the varying use cases of their application. They provides different functions\
    \ that can be provided to users of the application, e.g. creating messages, executing\
    \ scenarios, or viewing distribution lists."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM4OTQzOTI0-workspace
  name: Workspaces
- description: "Activities are all the individual changes, tasks, calls, messages..\
    \ just about everything performed in a given company workspaces. Each Activity\
    \ log entry contains information about the workspace, the module (message, email,\
    \ IVR..), the user who performed it, time stamps, description of the activity,\
    \ and its status (success, fail) etc."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjQ2MzAxMjM-activity
  name: Activities
- description: Custom Lists are user specific translations or preferred options in
    the various list controls used in the platform tool. These provide the freedom
    for the user to customize the list options in various modules like Messages and
    Events. These custom list either can complement or completely overwrite the existing
    list items.
  externalDocs:
    url: https://developers.whispir.com/b3A6Mzg5NDM5NzY-list-custom-lists
  name: Custom Lists
- description: "Access to use the Whispir API, Platform and its features is strictly\
    \ limited to user permission set. One needs to have proper permissions to access\
    \ all the features provided by the platform, and when using the API, have appropriate\
    \ permissions to modify the user attributes of themselves or others in their company\
    \ workspaces."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjU4ODQwOQ-user
  name: Users
- description: "Whispir’s Events API allows users to capture, create and manage Events\
    \ (including Incidents, Issues, Places, and Assets). Link multi-channel communications\
    \ to each event to track report and disseminate information textually and Geo-spatially."
  externalDocs:
    url: https://developers.whispir.com/c2NoOjY5MTI5NA-event
  name: Events
- description: The Imports endpoint allows users to import a CSV/JSON/XML file of
    contacts (via /resources) to be added to the contacts database.
  externalDocs:
    url: https://developers.whispir.com/c2NoOjM4OTQzOTI4-import
  name: Imports
- description: The Auth endpoint allows users to retrieve and verify a JWT authentication
    token.
  externalDocs:
    url: https://developers.whispir.com/b3A6NDEyMTEzOA-create-an-auth-token
  name: Auth
paths:
  /workspaces/{workspaceId}/messages:
    get:
      description: |-
        List all sent messages for the workspace.

        Pagination is available.
      operationId: getMessages
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.message-v1+json
          enum:
          - application/vnd.whispir.message-v1+json
          - application/vnd.whispir.bulkmessage-v1+json
          - application/vnd.whispir.message-v1+xml
          - application/vnd.whispir.bulkmessage-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.message-v1+json:
              examples:
                Response:
                  value:
                    messages:
                    - subject: Test Message
                      to: "61400400400"
                      repetitionCount: 0
                      repeatDays: 0
                      repeatHrs: 0
                      repeatMin: 0
                      from: Test User
                      direction: OUTGOING
                      responseCount: "0"
                      createdTime: 1647467664000
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                      whatsappValidMessage: true
                      validBody: true
                      validSubject: true
                    - subject: Test Message
                      to: "61400400400"
                      repetitionCount: 0
                      repeatDays: 0
                      repeatHrs: 0
                      repeatMin: 0
                      from: Test User
                      direction: OUTGOING
                      responseCount: "0"
                      createdTime: 1647466923000
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/E9F52215AD0787EBECDD691916955C1E
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                      whatsappValidMessage: true
                      validBody: true
                      validSubject: true
                    status: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Message-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List messages
      tags:
      - Messages
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "Communications are the core of what the Whispir Platform API offers\
        \ as a service to customers.    \nWhispir has the ability to send communications\
        \ across 7 different channels in a single API request:  \n- **SMS** - up to\
        \ 1600 characters per message, premium routes, delivery receipts  \n- **Email**\
        \ - free email messaging with HTML and Plain Text support \n- **Voice** -\
        \ high quality outbound voice calls delivered to mobiles and landlines within\
        \ seconds  \n- **Rich Messages** - personalised, targeted rich messaging to\
        \ drive conversations  \n- **Twitter** - support for instant publishing to\
        \ multiple twitter accounts  \n- **Facebook** - simplify the process of publishing\
        \ to multiple facebook accounts instantaneously  \n- **RSS** - easily generate\
        \ RSS feeds for consumption by other services\n\nAll communications are driven\
        \ from the Messages endpoint resources within the API. This endpoint allows\
        \ a user to perform the following tasks:\n1.  Create and send a new message\n\
        2.  Retrieve a list of previously sent messages  \n\n* * *\n\n### Using Templates\n\
        Messages can simply specify the `messageTemplateId` in the messages request,\
        \ instead of specifying the entire content payload.\n\nThe message template\
        \ can then easily be changed (using either another API request or by logging\
        \ in to the Whispir Platform) and the part of the application sending the\
        \ messages does not need to be altered.  \n\n* * *\n\n### Callback Parameters\n\
        \nThe callback API allows you to pass in any values (parameters), which you\
        \ want to be returned as is, included in the callback response.\n\n* * *\n\
        \n### Using Events\n\nOnce you have created an [Event](./openapi.yaml/paths/~1workspaces~1{workspaceId}~1events/post)\
        \ in the Whispir Platform, the next logical step is to be able to deliver\
        \ a notification about the event.\n\n```json\n{\n  \"to\": \"+1000000000\"\
        ,\n  \"subject\": \"Event Notification\",\n  \"eventId\": \"2EE7FEA3343662BE\"\
        ,\n  \"body\": \"An event has occurred: @@summary@@. A resolution is required\
        \ by @@actionDate1@@.\"\n}\n```\n\n* * *\n\n### Message Variables\n\nWhispir\
        \ allows the use of message variables to dynamically customise the content\
        \ in a message. Available variables include [Native Tags](#native-tags), [System\
        \ Tags](#system-tags), and [Custom Tags](#custom-tags). Each of these variables\
        \ are described in the following sections.\n\n#### Native Tags\n\nWhen sending\
        \ messages using the Whispir API you can automatically customise your communications\
        \ including recipients information as part of the message. This is facilitated\
        \ by the Whispir's native message variables [or native tags] that will be\
        \ resolved against the recipients MRIs.\n> **IMPORTANT**: the following tags\
        \ can be included in any SMS, email or voice message. They are NOT meant to\
        \ be used in rich messages. In this case recipient-specific fields can be\
        \ populated using the Whispir JavaScript API.\n\nContact Tag | Description\n\
        ---------|----------\n @@first_name@@ | Recipient’s first name.  <br/> For\
        \ example, John. \n @@last_name@@ | Recipient’s last name. <br/> For example,\
        \ Smith.\n @@recipient_email@@ | Recipient’s primary email address.<br/>For\
        \ example, jsmith@email.com \n @@recipient_sms@@ | Recipient’s primary mobile\
        \ phone number. <br/><br/>For example, 61400400400. \n @@recipient_voice@@\
        \ | Recipient’s primary phone number for voice calls.<br/><br/> For example,\
        \ 61400400400. \n @@pin@@ | Whispir message retrieval service call back PIN\
        \ (only populated when voice is used). <br/><br/> For example, 1234. \n @@recipient_role@@\
        \ | Resolves to the recipient’s ‘Role’ field.<br/><br/> For example, Manager.\
        \ \n @@recipient_additionalrole@@ | Resolves to the recipient’s ‘Additional\
        \ Role’ field. <br/><br/>For example, Team Leader. \n @@team_name1@@ | Resolves\
        \ to the recipient’s ‘Team Name’ field.<br/><br/> For example, Red Team. \n\
        \ @@messagelabel@@| Resolves to the label field of the sent message. <br/><br/>For\
        \ example, Incident #1234. \n @@messagecategories@@ | Resolves to the list\
        \ of categories used in the message, separated with commas. <br/><br/>For\
        \ example, Product Update. \n \n``` JSON\nPOST https://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+json\nAccept: application/vnd.whispir.message-v1+json\n\
        \ \n{\n   \"to\" : \"John_Wick.1143139@Contact.whispir.sg\",\n   \"subject\"\
        \ : \"Test SMS Message with tags\",\n   \"body\" : \"Hi @@first_name@@. This\
        \ is your message.\"\n}\n```\n``` XML\nPOST https://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+xml\nAccept: application/vnd.whispir.message-v1+xml\n\
        \ \n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:message\
        \ xmlns:ns2=\"http://schemas.api.whispir.com\">\n    <to>John_Wick.1143139@Contact.whispir.sg</to>\n\
        \    <subject>Test SMS Message with tags</subject>\n    <body>Hi @@first_name@@.\
        \ This is your message.</body>\n</ns2:message>\n```\n \nThe main difference\
        \ with the examples seen so far is given here by the `to` field of the payloads,\
        \ where a Contact MRI is specified. This reference allows the Whispir platform\
        \ to inspect the Contact to retrieve the Contact tags.\n\n* * *\n\n#### System\
        \ Tags\n\nWhen sending messages using the Whispir API, you can automatically\
        \ include system-generated information via system variables. Each of them\
        \ will resolve to the value obtained when you send the message. Unlike the\
        \ preceding ones, they don't depend from the Contacts information stored in\
        \ Whispir, so they can be included also in messages where the recipients are\
        \ not represented by their MRI.\n\nSystem Tag | Description|\n---------|----------\n\
        @@dd@@| Current day with leading zero. <br/> For example, 08.\n@@mm@@ | Current\
        \ month with leading zero. <br/> For example, 06.\n@@yy@@| Current year, short\
        \ form.<br/>For example, 22.\n@@yyyy@@| Current year, long form. <br/><br/>For\
        \ example, 2022.\n@@day@@ | Day in spoken form.<br/><br/> For example, Wednesday.\
        \ \n@@month@@| Month in spoken form. <br/><br/> For example, January. \n@@hrs@@|\
        \ Current hour with leading zero, in 24 hour format.<br/><br/> For example,\
        \ 16. \n@@min@@ | Current minute with leading zero.<br/><br/> For example,\
        \ 45. \n@@date@ | Current date in format (yyyy-mm-dd)<br/><br/> For example,\
        \ 2022-02-02.\n@@time@@| Current time in 24-hour format. <br/><br/>For example,\
        \ 16:37. \n \n* * *\n\n#### Custom Tags\n\nUsing message attributes and message\
        \ Templates allows developers to cleanly separate these responsibilities.\
        \ This is done by combining the message channels being used for the message\
        \ and the data driving the message.\nUnder the operational point of view this\
        \ solution is achieved with two steps:\n1. Creating a Template including attributes\n\
        2. Using the Template and replacing the values for the attributes\n\nWhispir’\
        s API customers can simplify their requests by using the message attributes\
        \ directly from the API.\nUsing message attributes allows to achieve flexibility\
        \ in the communications. With this solution, Developers just need to take\
        \ care of the data behind a message while the Marketing team can focus on\
        \ the presentation or messaging channels within the message.\n> Unlike native\
        \ tags, user-defined attributes require Whispir administrative assistance\
        \ to enable and are configured at the account level. Please contact your Whispir\
        \ account manager or the [Whispir Support Team](mailto='support@whispir.com')\
        \ if interested in using them. Whispir’s API only accepts message attributes\
        \ containing alpha-numeric ASCII characters.\nWe are about to see a full example\
        \ where an initial fixed message has been adapted to be reusable.\n\n**Without\
        \ Custom Tags**\n\n```JSON\nPOST http://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+json\nAccept: application/vnd.whispir.message-v1+json\n\
        \ \n{\n   \"to\" : \"jsmith@test.com\", \n   \"subject\" : \"Reminder\", \n\
        \   \"body\" : \"Your invitation to the Acme Event will expire on 13/06/2019\
        \ at 23:59:59\", \n   \"email\" : { \n      \"type\" : \"text/plain\", \n\
        \      \"body\" : \"Your invitation to the Acme Event will expire on 13/06/2019\
        \ at 23:59:59\" \n   }\n}\n```\n```XML\nPOST http://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+xml\nAccept: application/vnd.whispir.message-v1+xml\n\
        \ \n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:message\
        \ xmlns:ns2=\"http://schemas.api.whispir.com\">\n    <to>jsmith@test.com</to>\n\
        \    <subject>Reminder</subject>\n    <body>Your invitation to the Acme Event\
        \ will expire on 13/06/2019 at 23:59:59</body>\n    <email>\n        <type>text/plain</type>\n\
        \        <body>Your invitation to the Acme Event will expire on 13/06/2019\
        \ at 23:59:59</body>\n    </email>\n</ns2:message>\n```\n\n**With Custom Tags**\n\
        \n#### Using Message Variables in Templates\n\n```JSON\nStep 1 - Creating\
        \ a Template including the attributes\nPOST http://api.<region>.whispir.com/workspaces/{workspaceId}/templates\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.template-v1+json\nAccept: application/vnd.whispir.template-v1+json\
        \ \n \n{ \n   \"messageTemplateName\" : \"Event Reminder\", \n   \"subject\"\
        \ : \"Reminder:\", \n   \"body\" : \"Your invitation to the Acme Event will\
        \ expire on @@event_expiry@@ at @@event_expiry_time@@\", \n   \"email\" :\
        \ { \n      \"type\" : \"text/plain\", \n      \"body\" : \"Your invitation\
        \ to the Acme Event will expire on @@event_expiry@@.\" \n   }\n}\nResponse\
        \ - template created\n201 - Created\nLocation: http://api.<region>.whispir.com/workspaces/{workspaceId}/templates/DACADB02209CC93C\n\
        { \n   ...\n   \"id\": \"DACADB02209CC93C\", \n   ...\n}\nStep 2 - Using Template\
        \ including attributes to send the message\nPOST http://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+json\nAccept: application/vnd.whispir.message-v1+json\n\
        \ \n{ \n   \"to\" : \"jsmith@test.com\", \n   \"messageTemplateId\" : \"DACADB02209CC93C\"\
        , \n   \"messageattributes\" : {\n      \"attribute\" : [{\n         \"name\"\
        \ : \"event_expiry\",     \n         \"value\" : \"13/06/2019\"   \n     \
        \ },{\n         \"name\" : \"event_expiry_time\",     \n         \"value\"\
        \ : \"23:59:59\"   \n      }]\n   } \n}\n```\n```XML\nStep 1 - Creating a\
        \ Template including attributes\nPOST http://api.<region>.whispir.com/workspaces/{workspaceId}/templates\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.template-v1+xml\nAccept: application/vnd.whispir.template-v1+xml\n\
        \ \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ns3:template xmlns:ns3=\"\
        http://schemas.api.whispir.com\" \n              xmlns:ns2=\"http://schemas.api.whispir.com/dap\"\
        >\n  <messageTemplateName>Event Reminder</messageTemplateName>\n  <subject>Reminder</subject>\n\
        \  <body>Your invitation to the Acme Event will expire on @@event_expiry@@\
        \ at @@event_expiry_time@@</body>\n  <email>\n     <type>text/plain</type>\n\
        \     <body>Your invitation to the Acme Event will expire on @@event_expiry@@\
        \ at @@event_expiry_time@@</body>\n  </email>\n</ns3:template>\nResponse -\
        \ template created\n201 - Created\nLocation: http://api.<region>.whispir.com/workspaces/{workspaceId}/templates/DACADB02209CC93C\n\
        <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns3:template\
        \ xmlns:ns2=\"http://schemas.api.whispir.com/dap\" xmlns:ns3=\"http://schemas.api.whispir.com\"\
        >\n    ...\n    <id>DACADB02209CC93C</id>\n    ...\n<ns3:template>\nStep 2\
        \ - Using Template including attributes to send the message\nPOST http://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+xml\nAccept: application/vnd.whispir.message-v1+xml\n\
        \ \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ns3:template xmlns:ns3=\"\
        http://schemas.api.whispir.com\" \n              xmlns:ns2=\"http://schemas.api.whispir.com/dap\"\
        >\n   <to>jsmith@test.com</to>\n   <messageTemplateId>DACADB02209CC93C</messageTemplateId>\n\
        \   <messageattributes>\n      <attribute>\n         <element>\n         \
        \   <name>@@event_expiry@@</name>\n            <value>13/06/2019</value>\n\
        \         </element>\n         <element>\n            <name>@@event_expiry_time@@</name>\n\
        \            <value>23:59:59</value>\n         </element>\n      </attribute>\n\
        \   </messageattributes>\n<ns3:template>\n```\nUsing this message template\
        \ ID and now using the message attribute @@event_expiry@@, the updated code\
        \ example (combining the message template and message attribute) is far simpler\
        \ to implement and is more efficient.\n\n* * *\n\n### Scheduled Messages\n\
        \n#### Timezone - Scheduling rules\n\nUsing the Whispir API you can schedule\
        \ messages to be sent later, both once or repeatedly with the possibility\
        \ to specify the interval between the sessions. The service is available for\
        \ SMS, email, voice, rich messages \nA message is scheduled according to the\
        \ timezone set in the Whispir account of the user who initiates the message\
        \ request. This setting can be found in the Whispir Portal under \"Settings\"\
        ->\"User Manager\"->\"View/Edit\". Whispir DOES NOT honor the timezone where\
        \ the sender or the message recipient are currently located in\nFor example\
        \ if the user’s time zone is set to UTC in their Whispir profile then messages\
        \ are scheduled to be sent as per UTC, even if the user triggers the message\
        \ while sitting in Singapore (+8). So please ensure that any scheduled communication\
        \ is sent at the appropriate/preferred time\nAlso, changing the user's timezone\
        \ setting after the message is triggered DOES NOT change the original scheduled\
        \ time.\n\n#### Sending messages at a later date\n\n```JSON\nPOST https://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+json\nAccept: application/vnd.whispir.message-v1+json\n\
        ONCE\nIn this sample we will schedule a single message to be delivered at\
        \ 3:55pm on 14 February 2019\n{\n    \"to\" : \"jsmith@test.com\",\n    \"\
        subject\" : \"Test scheduled email message\",\n    \"email\" : {\n       \
        \ \"body\" : \"This is my scheduled content\",\n        \"type\" : \"text/plain\"\
        \n    },\n    \"messageType\" : \"SCHEDULED\",\n    \"scheduleType\" : \"\
        ONCE\",\n    \"scheduleDate\" : \"14/02/2019 15:55\"\n}\nREPEAT\nIn this sample\
        \ we will will schedule 10 messages to be delivered every hour starting from\
        \ 3:55pm on 14 February 2019\n{\n    \"to\" : \"jsmith@test.com\",\n    \"\
        subject\" : \"Test scheduled email message\",\n    \"email\" : {\n       \
        \ \"body\" : \"This is my scheduled content\",\n        \"type\" : \"text/plain\"\
        \n    },\n    \"messageType\" : \"SCHEDULED\",\n    \"scheduleType\" : \"\
        REPEAT\",\n    \"scheduleDate\" : \"14/02/2019 15:55\",\n    \"repetitionCount\"\
        \ : \"10\",\n    \"repeatDays\" : \"0\",\n    \"repeatHrs\" : \"1\",\n   \
        \ \"repeatMin\" : \"0\"\n}\n```\n```XML\nPOST https://api.<region>.whispir.com/workspaces/{workspaceId}/messages\n\
        \ \nAuthorization: Basic am9obi5zbWl0aDpteXBhc3N3b3Jk\nx-api-key: your_api_key\n\
        Content-Type: application/vnd.whispir.message-v1+json\nAccept: application/vnd.whispir.message-v1+json\n\
        ONCE\nIn this sample we will schedule a single message to be delivered at\
        \ 3:55pm on 14 February 2019\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
        yes\"?>\n<ns2:message xmlns:ns2=\"http://schemas.api.whispir.com\" xmlns:ns3=\"\
        http://schemas.api.whispir.com/dap\">\n    <to>john.smith@test.com</to>\n\
        \    <subject>Test scheduled email message</subject>\n    <email>\n      \
        \  <body>This is my scheduled content</body>\n        <type>text/plain</type>\n\
        \    </email>\n    <messageType>SCHEDULED</messageType>\n    <scheduleType>ONCE</scheduleType>\n\
        \    <scheduleDate>14/02/2019 15:55</scheduleDate>\n</ns2:message>\nREPEAT\n\
        In this sample we will will schedule 10 messages to be delivered every hour\
        \ starting from 3:55pm on 14 February 2019\n<?xml version=\"1.0\" encoding=\"\
        UTF-8\" standalone=\"yes\"?>\n<ns2:message xmlns:ns2=\"http://schemas.api.whispir.com\"\
        \ xmlns:ns3=\"http://schemas.api.whispir.com/dap\">\n    <to>john.smith@test.com</to>\n\
        \    <subject>Test scheduled email message</subject>\n    <email>\n      \
        \  <body>This is my scheduled content</body>\n        <type>text/plain</type>\n\
        \    </email>\n    <messageType>SCHEDULED</messageType>\n    <scheduleType>REPEAT</scheduleType>\n\
        \    <scheduleDate>14/02/2019 15:55</scheduleDate>\n    <repetitionCount>10</repetitionCount>\n\
        \    <repeatDays>0</repeatDays>\n    <repeatHrs>1</repeatHrs>\n    <repeatMin>0</repeatMin>\n\
        </ns2:message>\n```"
      operationId: postMessages
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.message-v1+json
          enum:
          - application/vnd.whispir.message-v1+json
          - application/vnd.whispir.bulkmessage-v1+json
          - application/vnd.whispir.message-v1+xml
          - application/vnd.whispir.bulkmessage-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.message-v1+json
          enum:
          - application/vnd.whispir.message-v1+json
          - application/vnd.whispir.bulkmessage-v1+json
          - application/vnd.whispir.message-v1+xml
          - application/vnd.whispir.bulkmessage-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.message-v1+json:
            examples:
              SMS:
                value:
                  to: "61400400400"
                  subject: Test Message
                  body: This is the body of my test SMS message
              Email:
                value:
                  to: test@test.com
                  subject: Test Message
                  email:
                    body: This is the body of my test Email message
                    footer: This is the footer of my message
                    type: text/plain
              Email with attachment:
                value:
                  to: test@test.com
                  subject: Test Message
                  email:
                    body: This is the body of my test Email message
                    footer: This is the footer of my message
                    type: text/html
                    resources:
                      attachments:
                      - attachmentName: sample.json
                        attachmentDesc: Sample
                        derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
              Voice:
                value:
                  to: "61400400400"
                  subject: Test Message
                  voice:
                    header: "This is the introduction, read out to the recipient prior\
                      \ to any key press."
                    body: "This is the body of the voice call, read out after the\
                      \ key press"
                    type: "Pin:,ConfCall:,ConfAccountNo:,ConfPinNo:,ConfModPinNo:"
              SMS with Message Variables:
                value:
                  to: John_Wick.1143139@Contact.whispir.au
                  subject: Test Message
                  body: Hi @@first_name@@. The current day is @@day@@.
              SMS & Email:
                value:
                  to: "61400400400,test@test.com"
                  subject: Test Message
                  body: This is the body of my test SMS message
                  email:
                    body: This is the body of my test Email message
                    footer: This is the footer of my message
                    type: text/plain
              SMS & Web Page:
                value:
                  to: "61400400400"
                  subject: Test Message
                  body: This is the body of my test SMS message. @@web_link@@
                  web:
                    body: This is the content of my web publishing or Rich Push Message
                    type: text/plain
              SMS - Single Scheduled Message:
                value:
                  to: "61400400400"
                  subject: Single Scheduled Message
                  body: This is a single scheduled SMS message.
                  messageType: SCHEDULED
                  scheduleType: ONCE
                  scheduleDate: 14/02/2019 15:55
              SMS - Repeated Scheduled Message:
                value:
                  to: "61400400400"
                  subject: Repeated Scheduled Message
                  body: This is a repeated scheduled SMS message.
                  messageType: SCHEDULED
                  scheduleType: REPEAT
                  scheduleDate: 14/02/2019 15:55
                  repetitionCount: 10
                  repeatDays: 0
                  repeatHrs: 1
                  repeatMin: 0
            schema:
              $ref: '#/components/schemas/message'
        description: "Message object needed to create message. At least one of the\
          \ Body fields must be populated [SMS, email, voice or web]."
        required: true
      responses:
        "200":
          content:
            application/vnd.whispir.message-v1+json:
              examples:
                Response:
                  value:
                    to: "61400400400"
                    subject: Repeated Scheduled Message
                    body: This is a repeated scheduled SMS message.
                    messageType: SCHEDULED
                    scheduleDate: 01/04/2022 13:40
                    scheduleType: REPEAT
                    repetitionCount: 10
                    repeatDays: 0
                    repeatHrs: 0
                    repeatMin: 1
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/89518B11A0458848AC3926AEAA48BA14
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    validBody: true
                    validSubject: true
                    whatsappValidMessage: true
              schema:
                $ref: '#/components/schemas/message'
          description: The response code for a message that is accepted for scheduled
            delivery.
          headers:
            Content-Type:
              $ref: '#/components/headers/Message-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "202":
          content:
            application/vnd.whispir.message-v1+json:
              examples:
                Response:
                  value: Your request has been accepted for processing
              schema:
                description: The status of the response acceptance.
                enum:
                - Your request has been accepted for processing
                type: string
          description: The response code for a message that is accepted for immediate
            delivery.
          headers:
            Content-Type:
              $ref: '#/components/headers/Message-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Send a message
      tags:
      - Messages
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.message-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/messages/{messageId}:
    get:
      description: "Each of the URLs specified in the response can be accessed using\
        \ the REL and appropriate METHOD to perform the specified functionality.\n\
        \n**Rel Attribute Descriptions**\n\n* * *\n\n- **self:** Retrieves the current\
        \ message.  \n\n- **summaryStatus:** Returns the status information of the\
        \ message as a messagestatus object, in a summary view.  \n\n- **detailedStatus:**\
        \ Returns the status information of the message as a messagestatus object,\
        \ in a detailed view.  \n\n- **summaryResponses:** Returns the response information\
        \ of the message as a messageresponse object, in a summary view.  \n\n- **detailedResponses:**\
        \ Returns the response information of the message as a messageresponse object,\
        \ in a detailed view.  \n- **summaryResponsesWithResponseRule:** Returns the\
        \ response information of the message as a messageresponse object, filtered\
        \ by the Response Rule (if one was used) in a summary view.  \n\n- **detailedResponsesWithResponseRule:**\
        \ Returns the response information of the message as a messageresponse object,\
        \ filtered by the Response Rule (if one was used) in a detailed view."
      operationId: getMessageById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.message-v1+json
          enum:
          - application/vnd.whispir.message-v1+json
          - application/vnd.whispir.bulkmessage-v1+json
          - application/vnd.whispir.message-v1+xml
          - application/vnd.whispir.bulkmessage-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The identifier for the message.
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.whispir.message-v1+json:
              examples:
                Response:
                  value:
                    to: "61400400400"
                    subject: Test Message
                    body: This is the body of my test SMS message
                    label: ""
                    type: default
                    repetitionCount: 0
                    dlr:
                      period: ""
                      rule: ""
                      type: ""
                      publishToWeb: false
                      expiryDay: 0
                      expiryHour: 0
                      expiryMin: 0
                      feedIds: ""
                      bool: false
                    repeatDays: 0
                    repeatHrs: 0
                    repeatMin: 0
                    voice:
                      body: Test message
                      type: "Pin:,ConfCall:,ConfAccountNo:,ConfPinNo:,ConfModPinNo:"
                    from: testUser.au@User.whispir.com
                    direction: OUTGOING
                    responseCount: "0"
                    social:
                      social:
                      - id: social
                      - id: social_long
                    createdTime: 1647466923000
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messagestatus?view=summary
                      rel: summaryStatus
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messagestatus?view=detailed
                      rel: detailedStatus
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=summary&filter=default
                      rel: summaryResponses
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=default
                      rel: detailedResponses
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=summary&filter=responserule
                      rel: summaryResponsesWithResponseRule
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
                      rel: detailedResponsesWithResponseRule
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    validBody: true
                    validSubject: true
                    whatsappValidMessage: true
              schema:
                $ref: '#/components/schemas/message'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Message-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a message
      tags:
      - Messages
      x-sdkOperation: retrieve
      x-accepts: application/json
  /workspaces/{workspaceId}/messages/{messageId}/messagestatus:
    get:
      description: "Whispir will automatically monitor the status of each message\
        \ after it has been sent to each recipient. Using the message status information,\
        \ you are able to determine who received the message, what exact time they\
        \ received it, on what message channel (SMS, Email, Voice, Web, Push Notification),\
        \ whether they replied to the message, what time they replied, and on what\
        \ messaging channel.  \n\n\n  Each message progresses through various states,\
        \ from Pending to Acknowledged.\n\n\n### Message Status Descriptions\n\n-\
        \ **Pending (PENDING):** The message has not yet been processed by Whispir.\
        \ It is in a queue and will be processed shortly.\n- **Sent (SENT):** The\
        \ message has been sent from Whispir to the recipient, however, there has\
        \ been no acknowledgement from the recipient via read receipt that the message\
        \ has arrived.\n- **Received (DELIVRD):**\n  - **Email:** Whispir has received\
        \ acknowledgement via a read receipt that the message has arrived in the inbox.\n\
        \  - **SMS:** Received status can mean one of two things for SMS.\n    1.\
        \  The message has been received by the network and is being processed for\
        \ delivery to the handset.  \n        How long the message stays in this state\
        \ is up to the telco.\n    2.  The message has been received by the handset\
        \ and confirmed by the telco.\n- **Acknowledged (READ):** Whispir has received\
        \ an intended response from the recipient, either by reply SMS, Email or Voice\
        \ prompt\n- **Undeliverable (FAILED):** Whispir was not able to deliver the\
        \ message to the intended recipient on the specified channel. This may be\
        \ due to incorrect information e.g. wrong phone number or email address, or\
        \ due to poor network coverage.\n\nUsing the API, developers are able to access\
        \ this status information at either a Summary or Detailed level.\n\nThe first\
        \ thing a developer must do in order to retrieve the status of a sent message\
        \ is retrieve the message using the API.\n\n### Retrieve Summary Status\n\n\
        Using the links provided in the message response, the user can simply make\
        \ a new API request to retrieve the summaryStatus URL.\n\nIn the example above,\
        \ the summaryStatus URL is:\n\nSo the request would look as follows:\n\n`GET\
        \ /messages/069BF68E5E0FE99B/messagestatus?view=summary`\n\nAs this is a GET\
        \ request we don’t have to provide any message body.\n\nThis response states\
        \ that of the 2 people that were sent the message, both of them Acknowledged\
        \ it by sending a response.\n\nYour application can use this information to\
        \ easily determine the numbers of recipients in each state and show a small\
        \ graph.\n\n### Retrieve Detailed Status\n\nSimilar to the summaryStatus,\
        \ using the links provided in the message response, the user can simply make\
        \ a new API request to retrieve the detailedStatus URL.\n\n`GET /messages/069BF68E5E0FE99B/messagestatus?view=detailed`\n\
        \nAs this is a GET request we don’t have to provide any message body.\n\n\
        The user can easily use this information to receive a far more detailed status\
        \ breakdown of (for each recipient):\n\n*   The name of the recipient\n* \
        \  The channel type (SMS, Email, Voice, Web)\n*   The sent timestamp for each\
        \ channel\n*   The received timestamp for each channel\n*   The acknowledged\
        \ timestamp for each channel\n*   The undeliverable timestamp (only present\
        \ when the channel is undeliverable)\n*   The overall status for this recipient\
        \ (PENDING, SENT, DELIVRD, READ, FAILED)\n*   The information text describing\
        \ how this message has progressed.\n\nOnce you have processed the status information,\
        \ the next likely piece of information you will be looking to find is the\
        \ content of the responses (if any). The section on Message Responses describes\
        \ how to retrieve this information.\n"
      operationId: getMessageStatus
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.messagestatus-v1+json
          enum:
          - application/vnd.whispir.messagestatus-v1+json
          - application/vnd.whispir.messagestatus-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: Enter message id
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          example: 44F4DA8F04755430BEC5A0E1E2154EBA
          type: string
        style: simple
      - description: The view for the message status.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detailed
          type: string
        style: form
      - description: The filter for the message status.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: default
          enum:
          - default
          - responserule
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.messagestatus-v1+json:
              examples:
                Summary:
                  value:
                    messageStatuses:
                    - link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messagestatus
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                      categories:
                      - name: Sent
                        recipientCount: 0
                        percentageTotal: 0.0%
                      - name: Pending
                        recipientCount: 0
                        percentageTotal: 0.0%
                      - name: Received
                        recipientCount: 1
                        percentageTotal: 100.0%
                      - name: Acknowledged
                        recipientCount: 0
                        percentageTotal: 0.0%
                      - name: Undeliverable
                        recipientCount: 0
                        percentageTotal: 0.0%
                    link: []
                Detailed:
                  value:
                    messageStatuses:
                    - name: "61400400400"
                      info: '  SMS message sent. SMSCODE=008 SMS message received
                        by device. SMSCODE=001 '
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messagestatus?view=detailed
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                      status:
                      - type: email
                        status: ""
                        destination: ""
                      - type: sms
                        status: DELIVRD
                        destination: "61400400400"
                        sentTimestamp: 1647466923000
                        receivedTimestamp: 1647466931000
                      - type: voice
                        status: ""
                        destination: ""
                    status: '1 to 1 of 1    '
                    link: []
              schema:
                $ref: '#/components/schemas/messageStatus'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/MessageStatus-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a message status
      tags:
      - Messages
      x-sdkOperation: retrieveMessageStatus
      x-accepts: application/json
  /workspaces/{workspaceId}/messages/{messageId}/messageresponses:
    get:
      description: "## Summary Responses\n\nUsing the links provided in the message\
        \ response, the user can simply make a new API request to retrieve the summaryStatus\
        \ URL.\n\nThe request for this information would look as follows:\n\n`GET\
        \ /messages/069BF68E5E0FE99B/messagestatus?view=summary`\n\nThis request is\
        \ asking for a couple of things:\n\n1.  The URL is specifically asking for\
        \ all of the **messageresponses** to the message with ID **069BF68E5E0FE99B**\n\
        \n3.  The **View** parameter is specifying that the message responses should\
        \ be shown in a **summary** view\n\n5.  The **Filter** parameter is specifying\
        \ that the filter should not use a response rule, it should show the **default**\
        \ filter\n\nAs this is a **GET** request we don’t have to provide any message\
        \ body.\n\nThis response states that of the 2 people that were sent the message,\
        \ both of them **Acknowledged** it by sending a response.\n\nYour application\
        \ can use this information to easily determine the numbers of recipients in\
        \ each state and show a small graph.\n\n## Detailed Responses\nUsing the links\
        \ provided in the message response, the user can simply make a new API request\
        \ to retrieve the detailedResponses URL.\n\nThe resulting request would look\
        \ as follows:\n\n`GET /messages/069BF68E5E0FE99B/messageresponses?view=detailed&filter=default`\n\
        \nThis request is asking for a couple of things:\n\n1.  The URL is specifically\
        \ asking for all of the **messageresponses** to the message with ID `069BF68E5E0FE99B`\n\
        2.  The **View** parameter is specifying that the message responses should\
        \ be shown in a **detailed** view\n3.  The **Filter** parameter is specifying\
        \ that the filter should not use a response rule, it should show the **default**\
        \ filter\n\nAs this is a **GET** request we don’t have to provide any message\
        \ body.\n\n**Note**:Searching responses will be described further on in this\
        \ documentation.\n\n*   The **responseMessage channel** describes the messaging\
        \ channel that the response has come in to the Whispir Platform via.\n\n*\
        \   The **responseMessage content** describes the actual content of the inbound\
        \ message.\n\n*   The **responseMessage acknowledged** shows the date of when\
        \ the response was received by the Whispir Platform\n"
      operationId: getMessageResponsesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.messageresponse-v1+json
          enum:
          - application/vnd.whispir.messageresponse-v1+json
          - application/vnd.whispir.messageresponse-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: Enter message id
        explode: false
        in: path
        name: messageId
        required: true
        schema:
          example: 44F4DA8F04755430BEC5A0E1E2154EBA
          type: string
        style: simple
      - description: The view for the message response.
        explode: true
        in: query
        name: view
        required: false
        schema:
          default: summary
          enum:
          - summary
          - detailed
          type: string
        style: form
      - description: The filter for the message response.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - noresponse
          - notmatched
          - responserule
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.messageresponse-v1+json:
              examples:
                Summary:
                  value:
                    messageresponses:
                    - percentageTotal: 50%
                      responseCount: "1"
                      link: []
                      type: noresponse
                    - percentageTotal: 50%
                      responseCount: "1"
                      link: []
                      type: notmatched
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                Detailed:
                  value:
                    status: '1 to 2 of 2    '
                    messageresponses:
                    - from:
                        name: John Smith
                        mri: John_Smith.484215.Critical_Incident_Management@Contact.whispir.com
                        mobile: +1000000000
                        email: jsmith@test.com
                        voice: +1000000000
                      responseCategory: noresponse
                      responseMessage:
                        content: N/A
                        acknowledged: N/A
                        channel: N/A
                    - from:
                        name: Fred Smith
                        mri: Fred_Smith.341550.Critical_Incident_Management@Contact.whispir.com
                        mobile: +1000000000
                        email: fsmith@test.com
                        voice: +1000000000
                      responseCategory: notmatched
                      responseMessage:
                        content: "OK, got it. Thanks."
                        acknowledged: 28/09/12 08:48
                        channel: sms
                    link: []
              schema:
                $ref: '#/components/schemas/getMessageResponsesById_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/MessageResponse-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a message response
      tags:
      - Messages
      x-sdkOperation: retrieveMessageResponse
      x-accepts: application/json
  /workspaces/{workspaceId}/resources:
    get:
      description: "Existing resources can be easily retrieved via the GET /resources\
        \ API call. The response lists all of the existing public and private resources\
        \ available in the system.\n\n**name:** String  \n- Specifies the name of\
        \ the resource. The name is given during creation.\n\n**scope:** String  \n\
        - Specifies the permission scope of the file being uploaded.\n\n**mimeType:**\
        \ String  \n- The mime type of the file that is being uploaded.\n\n**url:**\
        \ String  \n- The downloaded link to the resource location. Browsing this\
        \ link results in a download of the resource.  \n- **Note:** Only available\
        \ for Public scoped resources.\n\n**link:** Array  \n- Provides a list of\
        \ URLs that can be used to manipulate or access the message template.\n  -\
        \ uri - the link to access the message template\n  - rel - the descriptor\
        \ for what the link will do\n  - method - the HTTP method to use with this\
        \ particular link\n\n## Filtering search results\n\n**Note:** when it comes\
        \ to searching by name, the equal sign must be intended as `contains` rather\
        \ than `equals`. So, if we search resources with the value equals to `in`\
        \ we might be given back\n \n**Eg** (`India.csv` and `Indonesia.json` but\
        \ also `Argentina.csv`)\n\n### Filtering By scope\n\nResources can be filtered\
        \ by their scope. This can be achieved by sending in the required scope type\
        \ in the URL as query parameter. The scope can be one of the allowed scope\
        \ types.\n\n*   Public - &scope=public\n*   Private - &scope=private\n\n###\
        \ Filtering By name\n\nResources can be filtered by their name. This can be\
        \ achieved by sending in the name in the URL as query parameter.\n\n**Note:**\
        \ The name including the file extension makes it a unique search.\n\n**Eg:**\
        \ - &name=australia.csv\n"
      operationId: getResources
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.resource-v1+json
          enum:
          - application/vnd.whispir.resource-v1+json
          - application/vnd.whispir.resource-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: A filter parameter for the visibility of the resource.
        explode: true
        in: query
        name: scope
        required: false
        schema:
          enum:
          - private
          - public
          type: string
        style: form
      - description: A filter parameter for the name of the resource.
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: recipients.json
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.resource-v1+json:
              examples:
                example-1:
                  value:
                    status: 1 to 2 of 2
                    resources:
                    - id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
                      name: sample.json
                      scope: private
                      mimeType: application/json
                      derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
              schema:
                $ref: '#/components/schemas/getResources_200_response'
          description: List of resources
          headers:
            Content-Type:
              $ref: '#/components/headers/Resource-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List resources
      tags:
      - Resources
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "### High-Level Response Elements\n\n**name:** String  \n*   Specifies\
        \ the name of the file being uploaded. The extension of the file too is allowed\
        \ to be present in the name. **Eg:** australia-contacts.csv\n*   **Note:**\
        \ It is advised that names should not contain spaces or special characters\
        \ other than `-` and `.`. This helps for easier search and also for a valid\
        \ URL link (especially) in case of public scoped files.\n*   **Eg:** `australia-contacts.csv`\
        \ is better name convention than `australia contacts.csv` as the latter converts\
        \ into `australia%20contacts.csv`.  \n\n**scope:** String  \nSpecifies the\
        \ permission scope of the file being uploaded. The scope defines the access\
        \ restriction of the resource. It can be only one between:\n  *   **Public\
        \ -** Public files have an addressable URL and are available publicly\n  *\
        \   **Private -** Private files have no URL and are only available for bulk\
        \ messaging purposes and for importing contacts.\n\n**mimeType:** String \
        \ \nThe mime type of the file that is being uploaded. The type is dependent\
        \ on the scope of the resource.\n  *   **Public -** Public files can be of\
        \ any mimetype. `text/html`; `text/csv`\n  *   **Private -** Private files\
        \ are restricted to `CSV`, `JSON`, and `XML`\n\n**derefUri:** The base64 representation\
        \ of the file being submitted.\n\n**Note:** When creating a resource, the\
        \ following conditions apply -\n\n*   Maximum of 10MB per file being uploaded.\n\
        *   Transactions will have an enforced timeout.\n*   Resources will be available\
        \ in the Whispir Platform for a limited timeframe (30 days). These will then\
        \ be automatically cleaned. This will be a configurable setting for Whispir\
        \ Administrators.\n\n### Upload the Resource file via API  \nTo upload a file\
        \ to Whispir’s API, users will make an API call to the /resources endpoint.\
        \  \nApplications can use this endpoint to store the source files for dynamic\
        \ messages. This endpoint can also be used to store any file based data (e.g.\
        \ images, pdf documents, spreadsheets) for an unlimited amount of time.  \n\
        \n**Note:** The types of files allowed are - `CSV`, `JSON`, `XML`, Images\
        \ [`JPEG`, `PNG`], and `WAV`.  \n\nInformation about the resources endpoint\
        \ is documented in the Resources section of the documentation.\n"
      operationId: postResources
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.resource-v1+json
          enum:
          - application/vnd.whispir.resource-v1+json
          - application/vnd.whispir.resource-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.resource-v1+json
          enum:
          - application/vnd.whispir.resource-v1+json
          - application/vnd.whispir.resource-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.resource-v1+json:
            examples:
              Example:
                value:
                  name: sample.json
                  scope: private
                  mimeType: application/json
                  derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
            schema:
              $ref: '#/components/schemas/resource'
        description: resources object that needs to be create resources
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.resource-v1+json:
              examples:
                example-1:
                  value:
                    id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
                    name: sample.json
                    scope: private
                    mimeType: application/json
                    derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/resource'
          description: Resource endpoint response
          headers:
            Content-Type:
              $ref: '#/components/headers/Resource-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a resource
      tags:
      - Resources
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.resource-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/resources/{resourceId}:
    delete:
      description: "Resources can be deleted after use. These can be both public and\
        \ private in scope.  \n\n**Note:** Deleting a public resource may result in\
        \ 404 File Not Found error for any sites or material referencing to it. So,\
        \ ensure that DELETE is only executed when the reference to all material is\
        \ removed or the content has to be removed for other purposes immediately.\n"
      operationId: deleteResourcesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The id of the resources to be deleted
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          example: 2C32F4AA38917318D52A279D1946BDE8
          type: string
        style: simple
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a resource
      tags:
      - Resources
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: |
        A single resource (public|private) can be retrieved from the available resource by using the resource’s specific link uri
      operationId: getResourcesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.resource-v1+json
          enum:
          - application/vnd.whispir.resource-v1+json
          - application/vnd.whispir.resource-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The identifier for the resource.
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          example: 2C32F4AA38917318D52A279D1946BDE8
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.whispir.resource-v1+json:
              examples:
                example-1:
                  value:
                    id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
                    name: sample.json
                    scope: private
                    mimeType: application/json
                    derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/resource'
          description: Resource endpoint response
          headers:
            Content-Type:
              $ref: '#/components/headers/Resource-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a resource
      tags:
      - Resources
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: "Updating a resource involves the same process as in creating a\
        \ resource. The process of using one of the format (CSV, JSON, XML) for private\
        \ and any format for public -> converting to base64 encoded data is the same.\
        \  \nThe change is doing a PUT to the existing resource URL that needs to\
        \ be updated. Please be careful that doing an update overwrites the previous\
        \ resource. There is no versioning available in Whispir for the resources.\
        \  \nAny or all of the 4 values can be changed. i.e, name, scope, mimeType,\
        \ derefUri, but all 4 are mandatory values to be sent.\n"
      operationId: putResourcesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.resource-v1+json
          enum:
          - application/vnd.whispir.resource-v1+json
          - application/vnd.whispir.resource-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.resource-v1+json
          enum:
          - application/vnd.whispir.resource-v1+json
          - application/vnd.whispir.resource-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Enter resources id.
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          example: 2C32F4AA38917318D52A279D1946BDE8
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.whispir.resource-v1+json:
            examples:
              Example:
                value:
                  name: sample.json
                  scope: private
                  mimeType: application/json
                  derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
            schema:
              $ref: '#/components/schemas/resource'
        description: resources object that needs to be update resources
        required: true
      responses:
        "200":
          content:
            application/vnd.whispir.resource-v1+json:
              examples:
                example-1:
                  value:
                    id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
                    name: sample.json
                    scope: private
                    mimeType: application/json
                    derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/resource'
          description: Resource endpoint response
          headers:
            Content-Type:
              $ref: '#/components/headers/Resource-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a resource
      tags:
      - Resources
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.resource-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/templates:
    get:
      description: |
        List all message templates for the workspace.

        Pagination is available.
      operationId: getTemplates
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            examples:
              examples:
                A list of templates:
                  value:
                    status: '1 to 2 of 2    '
                    messagetemplates:
                    - messageTemplateName: Sample SMS Template 2
                      messageTemplateDescription: Template to provide an example on
                        whispir.io no.1
                      id: 236EA3E3E63439DA
                      link:
                      - uri: https://api.au.whispir.com/workspaces/618CAD33669AD31A/templates/236EA3E3E63439DA
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    - messageTemplateName: Sample SMS Template with tags
                      messageTemplateDescription: Template to provide an example on
                        whispir.io no.1
                      id: D09B63AD6BD1A503
                      link:
                      - uri: https://api.au.whispir.com/workspaces/618CAD33669AD31A/templates/D09B63AD6BD1A503
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    link: []
              schema:
                $ref: '#/components/schemas/getTemplates_200_response'
          description: OK
          headers:
            Content-Type:
              description: Indicates the resource's media type
              explode: false
              schema:
                default: application/vnd.whispir.template-v1+xml
                enum:
                - application/vnd.whispir.template-v1+xml
                - application/vnd.whispir.template-v1+json
                type: string
              style: simple
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List templates
      tags:
      - Templates
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "Create a message template, combining multi-channel content for\
        \ use with the Message resource. The message template can be reused across\
        \ multiple sent messages."
      operationId: postTemplates
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.template-v1+json:
            schema:
              $ref: '#/components/schemas/template'
        description: Templates object that needs to be create Templates
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.template-v1+json:
              examples:
                Example:
                  value:
                    id: ABD927D9E0F9A92
                    messageTemplateName: Sample SMS Template
                    messageTemplateDescription: Template to provide an example on
                      whispir.io
                    responseTemplateId: responseTemplateId
                    subject: Test SMS Message
                    body: This is the body of my test SMS message
                    email:
                      body: This is the body of my email message.
                      footer: This is the footer of my message.
                      type: text/plain
                      resources:
                        attachments:
                        - attachmentName: TestIcon.png
                          attachmentDesc: MyPhoto
                          derefUri: iVBORw0KGgoAAAANSUhEUgAAABQAAAASCAIAAADUsmlHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMvSURBVDhPTVT5S1RhFD3fezOOOePTXHKriWgjsogWC1TSMuuHIFqoX0KsIIgSWwiq/6FFU8MKK6KyXYSKpkUKR4QMSSpCLQpyxHHUZpztzdu63xub5vKWj/fu+c6599z3mMfjSU9P13UdZoiCaLfZYQWiUGKq1WrBLEBDOBpWNTWeQyEIwvT0NAsEAgROPKXFxceNbQOtv4ShkKCkaZZ5kYU1Sw6dqT0NMTkLBIbf7zf+xaOuJzgG4RmyPyP/Kwq/oWAYeT+R6gYOofnmlUQmLQjI6JQkifasu368KdCQWwFEwBiYQOIgiDBETDFIORh/iZ0De55cehgXQJIphce9d/ebJhuyV0P3QY9Cj/HDUKhseIPomP/CW2QYB42nSx+db76YUM9IusPhYHVM2g5Bpo5xNuIkZibCF8On0oGVjhWabmR8EBx5GDuHaItsy0zhzA6bo/H5ZSyDMQ1d4YQa0Sqc1hdAe3E7IYkqp9tiUcHGkXIQZ8+fm+k5uXK3/46YAV3mMMLEt/BHUJ1Vua9oH+WV9ayLyLpVhRYFkT8d4mUzRuI0DAcHmQngSLrGoBJ/GC/L31JSy/cm91ifXTcboYDJGLX+1kI6WS3AQFSRCUDvwhGEwubiD1yVLkLKWuxoT50kzGwab6Ru6HIsahpiwTybkwTLU9iUU1Ezf394CmuyV20p2kLg8mcbRHLLxGimLlWFFMpMc6TRFlx29aJqePBgx4M3u7tubb1dMXfjw6rHhOwb+/jhV3+qNtMFKspQEZnA+oxSPr9UdjgUllV59pHZhSUFI/We5AnMv5o7bvhsFu5f3DlmR7ATr/a+rtq2mVulqEqmlFlbUuv5MbqudW0C7PrhGpvwidRhIoyXqiHoRam/tGrT5n9Wmfcb9TfmBOf0DXy80H0h/uKU6yQRcqlmk+mji0RhbbN2XOpAygzF/9nmfp4oc4+4y6vLqRnuUTdsfNqYFRop/4JFw4t723qz52YlZpvPd/K30vm+03nAie1ADXAYOADsgHOXs/laix7RkzMJyJJ/BjQ09lQ7me8f9/cP9nsnvemzpOIFy3PzclkK0wyNgvDEHP8Z/AXQ58rAz69IBAAAAABJRU5ErkJggg==
                    voice:
                      header: "This is the introduction, read out to the recipient\
                        \ prior to any key press."
                      body: "This is the body of the voice call, read out after the\
                        \ key press"
                      type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
                    web:
                      body: This is the content of my web publishing or Rich Push
                        Message
                      type: text/plain
                    social:
                      social:
                      - id: social
                        body: Facebook Content
                        type: text/plain
                    type: defaultNoReply
                    features:
                      pushOptions:
                        notifications: enabled
                        escalationMins: "3"
                        appId: appId
                    dlr:
                      period: ""
                      rule: ""
                      type: ""
                      publishToWeb: false
                      expiryDay: 0
                      expiryHour: 0
                      expiryMin: 0
                      feedIds: ""
                      bool: false
                    link:
                    - uri: https://api.au.whispir.com/workspaces/618CAD33669AD31A/templates/3148356543415EE7
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    tags: internal
              schema:
                $ref: '#/components/schemas/template'
          description: Template endpoint response.
          headers:
            Content-Type:
              $ref: '#/components/headers/Template-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/templates/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a template
      tags:
      - Templates
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.template-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/templates/{templateId}:
    delete:
      description: "**Note:** When a template is DELETED, all the associated Scenarios,\
        \ events, and references of template use in other endpoints will fail. So,\
        \ ensure that the template is not used anywhere before it is deleted. Whispir\
        \ **will not** do that check before it deletes the template.\n"
      operationId: deleteTemplatesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The identifier for the template.
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          example: 321D8505157C5F27
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a template
      tags:
      - Templates
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: Retrieves a message template
      operationId: getTemplatesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The identifier for the template.
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          example: 321D8505157C5F27
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "201":
          content:
            application/vnd.whispir.template-v1+json:
              examples:
                Example:
                  value:
                    id: ABD927D9E0F9A92
                    messageTemplateName: Sample SMS Template
                    messageTemplateDescription: Template to provide an example on
                      whispir.io
                    responseTemplateId: responseTemplateId
                    subject: Test SMS Message
                    body: This is the body of my test SMS message
                    email:
                      body: This is the body of my email message.
                      footer: This is the footer of my message.
                      type: text/plain
                      resources:
                        attachments:
                        - attachmentName: TestIcon.png
                          attachmentDesc: MyPhoto
                          derefUri: iVBORw0KGgoAAAANSUhEUgAAABQAAAASCAIAAADUsmlHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMvSURBVDhPTVT5S1RhFD3fezOOOePTXHKriWgjsogWC1TSMuuHIFqoX0KsIIgSWwiq/6FFU8MKK6KyXYSKpkUKR4QMSSpCLQpyxHHUZpztzdu63xub5vKWj/fu+c6599z3mMfjSU9P13UdZoiCaLfZYQWiUGKq1WrBLEBDOBpWNTWeQyEIwvT0NAsEAgROPKXFxceNbQOtv4ShkKCkaZZ5kYU1Sw6dqT0NMTkLBIbf7zf+xaOuJzgG4RmyPyP/Kwq/oWAYeT+R6gYOofnmlUQmLQjI6JQkifasu368KdCQWwFEwBiYQOIgiDBETDFIORh/iZ0De55cehgXQJIphce9d/ebJhuyV0P3QY9Cj/HDUKhseIPomP/CW2QYB42nSx+db76YUM9IusPhYHVM2g5Bpo5xNuIkZibCF8On0oGVjhWabmR8EBx5GDuHaItsy0zhzA6bo/H5ZSyDMQ1d4YQa0Sqc1hdAe3E7IYkqp9tiUcHGkXIQZ8+fm+k5uXK3/46YAV3mMMLEt/BHUJ1Vua9oH+WV9ayLyLpVhRYFkT8d4mUzRuI0DAcHmQngSLrGoBJ/GC/L31JSy/cm91ifXTcboYDJGLX+1kI6WS3AQFSRCUDvwhGEwubiD1yVLkLKWuxoT50kzGwab6Ru6HIsahpiwTybkwTLU9iUU1Ezf394CmuyV20p2kLg8mcbRHLLxGimLlWFFMpMc6TRFlx29aJqePBgx4M3u7tubb1dMXfjw6rHhOwb+/jhV3+qNtMFKspQEZnA+oxSPr9UdjgUllV59pHZhSUFI/We5AnMv5o7bvhsFu5f3DlmR7ATr/a+rtq2mVulqEqmlFlbUuv5MbqudW0C7PrhGpvwidRhIoyXqiHoRam/tGrT5n9Wmfcb9TfmBOf0DXy80H0h/uKU6yQRcqlmk+mji0RhbbN2XOpAygzF/9nmfp4oc4+4y6vLqRnuUTdsfNqYFRop/4JFw4t723qz52YlZpvPd/K30vm+03nAie1ADXAYOADsgHOXs/laix7RkzMJyJJ/BjQ09lQ7me8f9/cP9nsnvemzpOIFy3PzclkK0wyNgvDEHP8Z/AXQ58rAz69IBAAAAABJRU5ErkJggg==
                    voice:
                      header: "This is the introduction, read out to the recipient\
                        \ prior to any key press."
                      body: "This is the body of the voice call, read out after the\
                        \ key press"
                      type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
                    web:
                      body: This is the content of my web publishing or Rich Push
                        Message
                      type: text/plain
                    social:
                      social:
                      - id: social
                        body: Facebook Content
                        type: text/plain
                    type: defaultNoReply
                    features:
                      pushOptions:
                        notifications: enabled
                        escalationMins: "3"
                        appId: appId
                    dlr:
                      period: ""
                      rule: ""
                      type: ""
                      publishToWeb: false
                      expiryDay: 0
                      expiryHour: 0
                      expiryMin: 0
                      feedIds: ""
                      bool: false
                    link:
                    - uri: https://api.au.whispir.com/workspaces/618CAD33669AD31A/templates/3148356543415EE7
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    tags: internal
              schema:
                $ref: '#/components/schemas/template'
          description: Template endpoint response.
          headers:
            Content-Type:
              $ref: '#/components/headers/Template-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/templates/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a template
      tags:
      - Templates
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: "**Note:** Currently users cannot update templates with the same\
        \ name as a template that already exists in Whispir. Users can overcome this\
        \ by saving the updated template with a new name, then either changing this\
        \ back in a subsequent save, or retaining the updated name.\n"
      operationId: putTemplatesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The identifier for the template.
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          example: 321D8505157C5F27
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.template-v1+json
          enum:
          - application/vnd.whispir.template-v1+json
          - application/vnd.whispir.template-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.template-v1+json:
            schema:
              $ref: '#/components/schemas/template'
        description: Templates object that needs to be update Templates
        required: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a template
      tags:
      - Templates
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.template-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/responserules:
    get:
      description: Returns a list of response rules.
      operationId: getResponseRules
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.responserule-v1+json
          enum:
          - application/vnd.whispir.responserule-v1+json
          - application/vnd.whispir.responserule-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.responserule-v1+json:
              examples:
                Example 1:
                  value:
                    status: 1 to 8 of 8
                    responseRules:
                    - name: Response Rule 1
                      description: My Response Rule
                      responseTemplatePatterns:
                        name: Yes Rule
                        pattern: startswith
                        textPrompt: "YES"
                        voicePrompt: "1"
                        spokenVoicePrompt: to select YES
                        colour: '#00947d'
              schema:
                $ref: '#/components/schemas/getResponseRules_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/ResponseRule-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List response rules
      tags:
      - Response Rules
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "## Response Template Patterns\n\nEach Response Rule has a series\
        \ of **Patterns** that allow the creator to specify what textual content should\
        \ be matched in the response SMS or Email, and a number that should be entered\
        \ when IVR (Voice) is being used.\n\nEach Response Rule can specify as many\
        \ Response Template Patterns as required.\n\nEach of the Patterns specified\
        \ will also dynamically create buttons within any Rich Message that is associated\
        \ with the Response Rule.\n\nThis provides an out of the box capability to\
        \ quickly gather feedback from the field using a Rich User interface, and\
        \ leveraging SMS as the delivery mechanism.\n"
      operationId: postResponseRules
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.responserule-v1+json
          enum:
          - application/vnd.whispir.responserule-v1+json
          - application/vnd.whispir.responserule-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.responserule-v1+json
          enum:
          - application/vnd.whispir.responserule-v1+json
          - application/vnd.whispir.responserule-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.responserule-v1+json:
            examples:
              Example:
                value:
                  name: Response Rule 1
                  description: string
                  responseTemplatePatterns:
                    name: Yes Rule
                    pattern: startswith
                    textPrompt: "YES"
                    voicePrompt: "1"
                    spokenVoicePrompt: to select YES
                    colour: '#00947d'
            schema:
              $ref: '#/components/schemas/responseRule'
        description: ""
        required: true
      responses:
        "201":
          description: Created
          headers:
            Content-Type:
              $ref: '#/components/headers/ResponseRule-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/responserules/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a response rule
      tags:
      - Response Rules
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.responserule-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/responserules/{responseRuleId}:
    delete:
      description: Deletes a Response Rule object.
      operationId: deleteResponseRulesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Response Rule Id
        explode: false
        in: path
        name: responseRuleId
        required: true
        schema:
          example: 64BC5314665B947B
          type: string
        style: simple
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a response rule
      tags:
      - Response Rules
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: Retrieves a response rule object.
      operationId: getResponseRulesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.responserule-v1+json
          enum:
          - application/vnd.whispir.responserule-v1+json
          - application/vnd.whispir.responserule-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Response Rule Id
        explode: false
        in: path
        name: responseRuleId
        required: true
        schema:
          example: 64BC5314665B947B
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.whispir.responserule-v1+json:
              examples:
                Example 1:
                  value:
                    name: Response Rule 1
                    description: My Response Rule
                    responseTemplatePatterns:
                      name: Yes Rule
                      pattern: startswith
                      textPrompt: "YES"
                      voicePrompt: "1"
                      spokenVoicePrompt: to select YES
                      colour: '#00947d'
              schema:
                $ref: '#/components/schemas/responseRule'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/ResponseRule-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a response rule
      tags:
      - Response Rules
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: Updates a Response Rule object.
      operationId: putResponseRulesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.responserule-v1+json
          enum:
          - application/vnd.whispir.responserule-v1+json
          - application/vnd.whispir.responserule-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.responserule-v1+json
          enum:
          - application/vnd.whispir.responserule-v1+json
          - application/vnd.whispir.responserule-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Response Rule Id
        explode: false
        in: path
        name: responseRuleId
        required: true
        schema:
          example: 64BC5314665B947B
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.whispir.responserule-v1+json:
            examples:
              Example:
                value:
                  name: Response Rule 1
                  description: string
                  responseTemplatePatterns:
                    name: Yes Rule
                    pattern: startswith
                    textPrompt: "YES"
                    voicePrompt: "1"
                    spokenVoicePrompt: to select YES
                    colour: '#00947d'
            schema:
              $ref: '#/components/schemas/responseRule'
        description: Response Rules object used to update Response Rules
        required: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a response rule
      tags:
      - Response Rules
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.responserule-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/contacts:
    get:
      description: "**Note:** There is no global search feature available where one\
        \ can search on all the workspaces present in the system (under allowed user\
        \ permission). So, When no workspace is provided, the search is performed\
        \ on the default workspace of the user.\n\n### Searching for contacts with\
        \ Custom Fields\n\nAs Whispir supports extension of the default Contact Profile\
        \ through the use of Custom Fields. There may be cases where users want to\
        \ search for Contacts that contain these specific fields. As such, the Whispir\
        \ API supports searching for contacts using these custom fields.\n\nAny custom\
        \ field can be searched by adding the custom_ prepended to the name.\n\nFor\
        \ example, if the field name is **StaffId**, then the URL would search for:\n\
        \n`/contacts?custom_StaffId=12345`\n"
      operationId: getContacts
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: "String Specifies the field name of the contact object. The field\
          \ name could be any thing as long as it is a valid contact attribute.  \n\
          Example: `http://api.whispir.com/contacts?firstName=Sam`\n"
        explode: true
        in: query
        name: fieldname
        required: false
        schema:
          type: string
        style: form
      - description: Custom Fields
        explode: true
        in: query
        name: customFields
        required: false
        schema:
          type: boolean
        style: form
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.contact-v1+json
          enum:
          - application/vnd.whispir.contact-v1+json
          - application/vnd.whispir.contact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          content:
            application/vnd.whispir.contact-v1+json:
              examples:
                Example:
                  value:
                    status: 1 to 8 of 8
                    contacts:
                    - firstName: John
                      lastName: Wick
                      workMobilePhone1: "61400400400"
                      workEmailAddress1: testUser@example.com
                      workCountry: Australia
                      timezone: Australia/Melbourne
                      title: Dr
                      workMobilePhone2: "61500500500"
                      workEmailAddress2: newUser@example.com
                      workPhoneAreaCode1: "09"
                      workPhone1: "5006000"
                      workPhoneAreaCode2: "09"
                      workPhone2: "5007000"
                      workFaxAreaCode1: "09"
                      workFax1: "5008000"
                      workSatellitePhone: "61600600600"
                      workOtherPhone: "61700700700"
                      workAddress1: Level 15
                      workAddress2: 360 Collins St
                      workSuburb: Melboure
                      workState: Victoria
                      workPostCode: "3000"
                      workPostalAddress1: Level 15
                      workPostalAddress2: 360 Collins St
                      workPostalSuburb: Melboure
                      workPostalState: Victoria
                      workPostalPostCode: "3000"
                      personalEmailAddress1: personalPrimaryUser@example.com
                      personalEmailAddress2: personalSecondaryUser@example.com
                      personalAddress1: Level 15
                      personalAddress2: 360 Collins St
                      personalSuburb: Melboure
                      personalState: Victoria
                      personalPostCode: "3000"
                      personalCountry: Australia
                      personalPhoneAreaCode1: "09"
                      personalPhone1: "5006000"
                      personalPhoneAreaCode2: "09"
                      personalPhone2: "5007000"
                      personalFaxAreaCode1: "09"
                      personalFax1: "5008000"
                      otherPhoneAreaCode1: "09"
                      otherPhone1: "5009000"
                      otherMobile: "61900900900"
                      otherFirstName: Harold
                      otherLastName: Wickman
                      otherTitle: Mr
                      status: A
                      companyName: Whispir
                      jobTitle: Software Engineer
                      division: Technology
                      businessUnit: Core Platform
                      department: Research & Development
                      teamName1: Optimus Prime
                      teamName2: Bumblebee
                      role1: Administrator
                      role2: Analyst
                      locations:
                      - latitude: 41.9028
                        longitude: -12.4964
                        type: CurrentLocation
                      messagingoptions:
                      - channel: sms
                        enabled: true
                        primary: WorkMobilePhone1
                        secondary: WorkMobilePhone1
                        tertiary: WorkMobilePhone1
                      type: PROJECT
                      mri: "61400400400"
                      devices: []
                      link:
                      - uri: https://api.au.whispir.com/workspaces/673A8E38D34BBF0C/contacts/47F08A08482A5AA40F5A99CE69FB0C16
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
              schema:
                $ref: '#/components/schemas/getContacts_200_response'
          description: Example response
          headers:
            Content-Type:
              $ref: '#/components/headers/Contact-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List contacts
      tags:
      - Contacts
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: Creates a Contact object. The Contact can be used as a recipient
        when sending multi-channel messages.
      operationId: postContacts
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.contact-v1+json
          enum:
          - application/vnd.whispir.contact-v1+json
          - application/vnd.whispir.contact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.contact-v1+json
          enum:
          - application/vnd.whispir.contact-v1+json
          - application/vnd.whispir.contact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.contact-v1+json:
            examples:
              Basic:
                value:
                  firstName: John
                  lastName: Wick
                  workMobilePhone1: "61400400400"
                  workEmailAddress1: testUser@example.com
                  workCountry: Australia
                  timezone: Australia/Melbourne
              Comprehensive:
                value:
                  firstName: John
                  lastName: Wick
                  workMobilePhone1: "61400400400"
                  workEmailAddress1: testUser@example.com
                  workCountry: Australia
                  timezone: Australia/Melbourne
                  title: Dr
                  workMobilePhone2: "61500500500"
                  workEmailAddress2: newUser@example.com
                  workPhoneAreaCode1: "09"
                  workPhone1: "5006000"
                  workPhoneAreaCode2: "09"
                  workPhone2: "5007000"
                  workFaxAreaCode1: "09"
                  workFax1: "5008000"
                  workSatellitePhone: "61600600600"
                  workOtherPhone: "61700700700"
                  workAddress1: Level 15
                  workAddress2: 360 Collins St
                  workSuburb: Melboure
                  workState: Victoria
                  workPostCode: "3000"
                  workPostalAddress1: Level 15
                  workPostalAddress2: 360 Collins St
                  workPostalSuburb: Melboure
                  workPostalState: Victoria
                  workPostalPostCode: "3000"
                  personalEmailAddress1: personalPrimaryUser@example.com
                  personalEmailAddress2: personalSecondaryUser@example.com
                  personalAddress1: Level 15
                  personalAddress2: 360 Collins St
                  personalSuburb: Melboure
                  personalState: Victoria
                  personalPostCode: "3000"
                  personalCountry: Australia
                  personalPhoneAreaCode1: "09"
                  personalPhone1: "5006000"
                  personalPhoneAreaCode2: "09"
                  personalPhone2: "5007000"
                  personalFaxAreaCode1: "09"
                  personalFax1: "5008000"
                  otherPhoneAreaCode1: "09"
                  otherPhone1: "5009000"
                  otherMobile: "61900900900"
                  otherFirstName: Harold
                  otherLastName: Wickman
                  otherTitle: Mr
                  status: A
                  companyName: Whispir
                  jobTitle: Software Engineer
                  division: Technology
                  businessUnit: Core Platform
                  department: Research & Development
                  teamName1: Optimus Prime
                  teamName2: Bumblebee
                  role1: Administrator
                  role2: Analyst
                  locations:
                  - latitude: 41.9028
                    longitude: -12.4964
                    type: CurrentLocation
                  messagingoptions:
                  - channel: sms
                    enabled: true
                    primary: WorkMobilePhone1
                    secondary: WorkMobilePhone1
                    tertiary: WorkMobilePhone1
            schema:
              $ref: '#/components/schemas/contact'
          application/vnd.whispir.contact-v1+xml:
            schema:
              $ref: '#/components/schemas/contact'
        description: Contact object to be created
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.contact-v1+json:
              examples:
                Example:
                  value:
                    firstName: John
                    lastName: Wick
                    workMobilePhone1: "61400400400"
                    workEmailAddress1: testUser@example.com
                    workCountry: Australia
                    timezone: Australia/Melbourne
                    title: Dr
                    workMobilePhone2: "61500500500"
                    workEmailAddress2: newUser@example.com
                    workPhoneAreaCode1: "09"
                    workPhone1: "5006000"
                    workPhoneAreaCode2: "09"
                    workPhone2: "5007000"
                    workFaxAreaCode1: "09"
                    workFax1: "5008000"
                    workSatellitePhone: "61600600600"
                    workOtherPhone: "61700700700"
                    workAddress1: Level 15
                    workAddress2: 360 Collins St
                    workSuburb: Melboure
                    workState: Victoria
                    workPostCode: "3000"
                    workPostalAddress1: Level 15
                    workPostalAddress2: 360 Collins St
                    workPostalSuburb: Melboure
                    workPostalState: Victoria
                    workPostalPostCode: "3000"
                    personalEmailAddress1: personalPrimaryUser@example.com
                    personalEmailAddress2: personalSecondaryUser@example.com
                    personalAddress1: Level 15
                    personalAddress2: 360 Collins St
                    personalSuburb: Melboure
                    personalState: Victoria
                    personalPostCode: "3000"
                    personalCountry: Australia
                    personalPhoneAreaCode1: "09"
                    personalPhone1: "5006000"
                    personalPhoneAreaCode2: "09"
                    personalPhone2: "5007000"
                    personalFaxAreaCode1: "09"
                    personalFax1: "5008000"
                    otherPhoneAreaCode1: "09"
                    otherPhone1: "5009000"
                    otherMobile: "61900900900"
                    otherFirstName: Harold
                    otherLastName: Wickman
                    otherTitle: Mr
                    status: A
                    companyName: Whispir
                    jobTitle: Software Engineer
                    division: Technology
                    businessUnit: Core Platform
                    department: Research & Development
                    teamName1: Optimus Prime
                    teamName2: Bumblebee
                    role1: Administrator
                    role2: Analyst
                    locations:
                    - latitude: 41.9028
                      longitude: -12.4964
                      type: CurrentLocation
                    messagingoptions:
                    - channel: sms
                      enabled: true
                      primary: WorkMobilePhone1
                      secondary: WorkMobilePhone1
                      tertiary: WorkMobilePhone1
                    type: PROJECT
                    mri: "61400400400"
                    devices: []
                    link:
                    - uri: https://api.au.whispir.com/workspaces/673A8E38D34BBF0C/contacts/47F08A08482A5AA40F5A99CE69FB0C16
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                    lastModifiedTime: 2022-03-29T16:30:18+11:00
              schema:
                $ref: '#/components/schemas/contact'
          description: Example response
          headers:
            Content-Type:
              $ref: '#/components/headers/Contact-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/contacts/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a contact
      tags:
      - Contacts
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.contact-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/contacts/{contactId}:
    delete:
      description: "After performing this request, the response does not contain any\
        \ information other than the headers as it is not necessary.\n\nThe user has\
        \ requested to delete a contact, and when the response of 204 No Content is\
        \ returned, the contact is successfully deleted.\n"
      operationId: deleteContactsById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The id of the contact to be deleted
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          example: 5130D4DDDED0AD4D69D33C3E64419A51
          type: string
        style: simple
      - description: "The API call involves passing an `action=deleteAll` query parameter.\
          \ Once this action is triggered, all the contact references in all workspaces\
          \ for a given `contact_id` are deleted asynchronously. There is no way to\
          \ stop the process once it's triggered. **Use the action only when you're\
          \ definitely sure you want to delete the contact from all workspaces**"
        explode: true
        in: query
        name: action
        required: false
        schema:
          enum:
          - deleteAll
          type: string
        style: form
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a contact
      tags:
      - Contacts
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: "### Showing Custom Fields\n\nWhispir supports extension of the\
        \ default Contact Profile through the use of Custom Fields. Custom fields\
        \ can support other fields that may be required to be stored on your Contacts,\
        \ such as Staff ID, Internal Billing Codes, or One Up Manager.\n\nThese custom\
        \ fields can be configured on any account through a Change Request to Whispir.\n\
        \nIn order to reveal these custom fields on the contact profile, you can use\
        \ the `customFields=true` flag within your API request.\n\nExample: `/contacts/AB38CB3EFD38AFDB?customFields=true`\n"
      operationId: getContactsById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter contact id.
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          example: 5130D4DDDED0AD4D69D33C3E64419A51
          type: string
        style: simple
      - description: "NOTE: once again, the equal sign must be intended as \"contains\"\
          \ rather than \"equals\". So if we search the people whose firstName equals\
          \ Sam we might be given back e.g. Sam, Samantha, Samuel. Similarly for numbers:\
          \ if we search Contacts with staffId equal to 1234 we will given back e.g.\
          \ the contact with staffID equal to 1234 but also e.g. a contact with staffID\
          \ equal to 98123456. If you need to narrow down please consider applying\
          \ additional filters"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          example: "workEmailAddress1,workMobilePhone1&firstname=Sam"
          type: string
        style: form
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.contact-v1+json
          enum:
          - application/vnd.whispir.contact-v1+json
          - application/vnd.whispir.contact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.contact-v1+json:
              schema:
                $ref: '#/components/schemas/contact'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Contact-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a contact
      tags:
      - Contacts
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: "The application must provide all the fields during the update\
        \ request, even if they are not being updated.\n\n## **NOTE:** Any missing\
        \ fields will be automatically removed from the existing record.\n\n**Note:**\
        \ You cannot selectively update the contact fields needed as this is a PUT\
        \ request.\n\n1.  GET `/contact/{id of contact}`\n2.  Update the contact field\
        \ in the object to the required value\n3.  PUT `/contact/{id of contact}`\
        \ the new object\n\nThe response to the PUT request upon success is usually\
        \ a 204 with no content being provided.\n"
      operationId: putContactsById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter contact id.
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          example: 5130D4DDDED0AD4D69D33C3E64419A51
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.contact-v1+json
          enum:
          - application/vnd.whispir.contact-v1+json
          - application/vnd.whispir.contact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.contact-v1+json
          enum:
          - application/vnd.whispir.contact-v1+json
          - application/vnd.whispir.contact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.contact-v1+json:
            examples:
              Basic:
                value:
                  firstName: John
                  lastName: Wick
                  workMobilePhone1: "61400400400"
                  workEmailAddress1: testUser@example.com
                  workCountry: Australia
                  timezone: Australia/Melbourne
              Comprehensive:
                value:
                  firstName: John
                  lastName: Wick
                  workMobilePhone1: "61400400400"
                  workEmailAddress1: testUser@example.com
                  workCountry: Australia
                  timezone: Australia/Melbourne
                  title: Dr
                  workMobilePhone2: "61500500500"
                  workEmailAddress2: newUser@example.com
                  workPhoneAreaCode1: "09"
                  workPhone1: "5006000"
                  workPhoneAreaCode2: "09"
                  workPhone2: "5007000"
                  workFaxAreaCode1: "09"
                  workFax1: "5008000"
                  workSatellitePhone: "61600600600"
                  workOtherPhone: "61700700700"
                  workAddress1: Level 15
                  workAddress2: 360 Collins St
                  workSuburb: Melboure
                  workState: Victoria
                  workPostCode: "3000"
                  workPostalAddress1: Level 15
                  workPostalAddress2: 360 Collins St
                  workPostalSuburb: Melboure
                  workPostalState: Victoria
                  workPostalPostCode: "3000"
                  personalEmailAddress1: personalPrimaryUser@example.com
                  personalEmailAddress2: personalSecondaryUser@example.com
                  personalAddress1: Level 15
                  personalAddress2: 360 Collins St
                  personalSuburb: Melboure
                  personalState: Victoria
                  personalPostCode: "3000"
                  personalCountry: Australia
                  personalPhoneAreaCode1: "09"
                  personalPhone1: "5006000"
                  personalPhoneAreaCode2: "09"
                  personalPhone2: "5007000"
                  personalFaxAreaCode1: "09"
                  personalFax1: "5008000"
                  otherPhoneAreaCode1: "09"
                  otherPhone1: "5009000"
                  otherMobile: "61900900900"
                  otherFirstName: Harold
                  otherLastName: Wickman
                  otherTitle: Mr
                  status: A
                  companyName: Whispir
                  jobTitle: Software Engineer
                  division: Technology
                  businessUnit: Core Platform
                  department: Research & Development
                  teamName1: Optimus Prime
                  teamName2: Bumblebee
                  role1: Administrator
                  role2: Analyst
                  locations:
                  - latitude: 41.9028
                    longitude: -12.4964
                    type: CurrentLocation
                  messagingoptions:
                  - channel: sms
                    enabled: true
                    primary: WorkMobilePhone1
                    secondary: WorkMobilePhone1
                    tertiary: WorkMobilePhone1
            schema:
              $ref: '#/components/schemas/contact'
          application/vnd.whispir.contact-v1+xml:
            schema:
              $ref: '#/components/schemas/contact'
        description: contact object that needs to be update contact
        required: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a contact
      tags:
      - Contacts
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.contact-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/distributionlists:
    get:
      description: "The distribution list is usually retrieved by its id, but one\
        \ can also search or refer to the distribution list by its name. This feature\
        \ has to do with the unique name requirement for the distribution list.\n\n\
        Apart from the name, the description field can also be used to search for\
        \ a distribution list. While name can be directly used to send in messages,\
        \ the description is solely for the purpose of search. Once search yields\
        \ the required result, the mri has to be picked from the selected DL and then\
        \ used to send the messages.\n\nBoth these operations can be performed by\
        \ passing in the relevant search parameters in the URL as query params."
      operationId: getDistributionLists
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.distributionlist-v1+json
          enum:
          - application/vnd.whispir.distributionlist-v1+json
          - application/vnd.whispir.distributionlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: Specifies the name of the Distribution List to be searched for.
          It is based on the uniqueness of the name of the Distribution List. If the
          name contains spaces it is suggested - but not required - to escape them
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: My Distribution List
          type: string
        style: form
      - description: Specifies the descrition for the Distribution List to be searched
          for. If the description contains spaces it is suggested - but not required
          - to escape them
        explode: true
        in: query
        name: description
        required: false
        schema:
          example: Sample Distribution List
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.distributionlist-v1+json:
              examples:
                Example Dynamic Distribution List:
                  value:
                    distributionLists:
                    - id: 5AFEB61102963D7
                      name: My Distribution List
                      mri: My_Distribution_List.company_name@list.company.whispir.sg
                      description: string
                      memberCount: "4"
                      access: Open
                      visibility: Public
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                      distListIds: string
                      distlistdetails:
                      - id: 123ADAB420493B83
                        name: John Smith
                        type: User
                        link:
                        - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                          rel: self
                          method: GET
                          host: api.au.whispir.com
                          port: -1
                    status: 1 to 1 of 1
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/getDistributionLists_200_response'
          description: List distribution lists response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/DistributionList-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "201":
          content:
            application/vnd.whispir.distributionlist-v1+json:
              examples:
                Example Dynamic Distribution List:
                  value:
                    distributionLists:
                    - id: 5AFEB61102963D7
                      name: My Distribution List
                      mri: My_Distribution_List.company_name@list.company.whispir.sg
                      description: string
                      memberCount: "4"
                      access: Open
                      visibility: Public
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                      distListIds: string
                      distlistdetails:
                      - id: 123ADAB420493B83
                        name: John Smith
                        type: User
                        link:
                        - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                          rel: self
                          method: GET
                          host: api.au.whispir.com
                          port: -1
                    status: 1 to 1 of 1
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/getDistributionLists_200_response'
          description: List distribution lists response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/DistributionList-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List distribution lists
      tags:
      - Distribution Lists
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "Distribution lists can be created within the Default Workspace,\
        \ or within a Specific Workspace. More information on Workspaces will be provided\
        \ later in this documentation.\n\nThe MRI value is important here. It is the\
        \ required unique identifier for any communications that are to be sent out\
        \ to this distribution list.\n"
      operationId: postDistributionLists
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.distributionlist-v1+json
          enum:
          - application/vnd.whispir.distributionlist-v1+json
          - application/vnd.whispir.distributionlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.distributionlist-v1+json
          enum:
          - application/vnd.whispir.distributionlist-v1+json
          - application/vnd.whispir.distributionlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.distributionlist-v1+json:
            examples:
              Example:
                value:
                  id: 5AFEB61102963D7
                  name: My Distribution List
                  mri: My_Distribution_List.company_name@list.company.whispir.sg
                  description: My Distribution list
                  memberCount: "4"
                  access: Open
                  visibility: Public
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
                  distListIds: "3A21DCC420494A48, 07172DC9AC3E97A75B5A41536C132CA0"
                  distlistdetails:
                  - id: 123ADAB420493B83
                    name: John Smith
                    type: User
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
            schema:
              $ref: '#/components/schemas/postDistributionLists_request'
        description: Distribution list object that needs to be create Distribution
          list
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.distributionlist-v1+json:
              examples:
                Example Static DL:
                  value:
                    id: B27ABC9D8E98A9B
                    name: My Distribution List
                    description: string
                    access: Open
                    visibility: Public
                    contactIds: string
                    userIds: string
                    distListIds: string
                    type: static
                Example Dyanmic DL:
                  value:
                    id: B27ABC9D8E98A9B
                    name: My Distribution List
                    description: ""
                    access: Open
                    visibility: Public
                    contactIds: ""
                    userIds: ""
                    distListIds: ""
                    type: static
              schema:
                $ref: '#/components/schemas/postDistributionLists_request'
          description: Example workspace object response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/DistributionList-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a distribution list
      tags:
      - Distribution Lists
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.distributionlist-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/distributionlists/{distributionlistId}:
    delete:
      description: |
        You can only delete the distribution list that you have created or a valid userId associated with the specific distribution list.
      operationId: deleteDistributionListsById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The id of the distributionlists to be deleted
        explode: false
        in: path
        name: distributionlistId
        required: true
        schema:
          example: 5EFBA89462693D7B
          type: string
        style: simple
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a distribution list
      tags:
      - Distribution Lists
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: "A distribution list allows you to associate the following:\n\n\
        *   **ContactIds** (type:String) is a comma separated list of Contact IDs\
        \ that you would like added to the list.\n*   **UserIds** (type:String) specifies\
        \ the Whispir Users that should also be notified when this list is used.\n\
        *   **DistListIds** (type:String) specifies the nested lists that are contained\
        \ within this distribution list.\n\nAny or all three of these can be updated\
        \ via the PUT method along with the DL properties (name, description, location\
        \ etc).\n\nThe steps usually are:\n\n1. Create a Distribution List (DL)\n\
        2. While creating the DL itself, you can put in the ContactIds, UserIds, distListIds\
        \ (nested) so that the DL is created with those values readily placed in.\n\
        3. After the DL is created, if you want to add/update the values, then\n4.\
        \ Do a GET request to retrieve the specific DL.\n   -  This will return you\
        \ the DL object\n5. Modify the DL properties (name, description, contactIds,\
        \ UserIds, dlIds, location etc) as needed\n6. Do a PUT request to update the\
        \ DL details\n   -  Successful update gives you a 204 No Content\n   -  The\
        \ contactIds, userIds, distListIds can be passed all together in a single\
        \ request.\n\nNote:\n1.  If an existing contactId is again added, it does\
        \ neither throws an error, nor create two entries. The contactId is just neglected\
        \ and only 1 record is maintained.\n2.  If the PUT request was successful,\
        \ the expected response code is a 204 No Content\n3.  For Modifying the Location\
        \ Information refer to Location Tags for Distribution Lists\n"
      operationId: getDistributionListsById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.distributionlist-v1+json
          enum:
          - application/vnd.whispir.distributionlist-v1+json
          - application/vnd.whispir.distributionlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Enter Distribution id.
        explode: false
        in: path
        name: distributionlistId
        required: true
        schema:
          example: 5EFBA89462693D7B
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.whispir.distributionlist-v1+json:
              examples:
                Example Static DL:
                  value:
                    id: B27ABC9D8E98A9B
                    name: My Distribution List
                    description: string
                    access: Open
                    visibility: Public
                    contactIds: string
                    userIds: string
                    distListIds: string
                    type: static
                Example Dyanmic DL:
                  value:
                    id: B27ABC9D8E98A9B
                    name: My Distribution List
                    description: ""
                    access: Open
                    visibility: Public
                    contactIds: ""
                    userIds: ""
                    distListIds: ""
                    type: static
              schema:
                $ref: '#/components/schemas/postDistributionLists_request'
          description: Example workspace object response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/DistributionList-Content-Type'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a distribution list
      tags:
      - Distribution Lists
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: "Any or all three of these can be updated via the PUT method along\
        \ with the DL properties (name, description, location etc).\n\nThe steps usually\
        \ are:\n1.  Create a Distribution List (DL)\n2.  While creating the DL itself,\
        \ you can put in the ContactIds, UserIds, distListIds (nested) so that the\
        \ DL is created with those values readily placed in.\n3.  After the DL is\
        \ created, if you want to add/update the values, then\n4.  Do a GET request\
        \ to retrieve the specific DL.\n    - This will return you the DL object\n\
        5.  Modify the DL properties (name, description, contactIds, UserIds, dlIds,\
        \ location etc) as needed\n6.  Do a PUT request to update the DL details\n\
        \    - Successful update gives you a 204 No Content\n    - The contactIds,\
        \ userIds, distListIds can be passed all together in a single request.\n\n\
        Note:\n- If an existing contactId is again added, it does neither throws an\
        \ error, nor create two entries. The contactId is just neglected and only\
        \ 1 record is maintained.\n- If the PUT request was successful, the expected\
        \ response code is a 204 No Content\n- For Modifying the Location Information\
        \ refer to Location Tags for Distribution Lists\n"
      operationId: putDistributionListsById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.distributionlist-v1+json
          enum:
          - application/vnd.whispir.distributionlist-v1+json
          - application/vnd.whispir.distributionlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.distributionlist-v1+json
          enum:
          - application/vnd.whispir.distributionlist-v1+json
          - application/vnd.whispir.distributionlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Enter Distribution id.
        explode: false
        in: path
        name: distributionlistId
        required: true
        schema:
          example: 5EFBA89462693D7B
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.whispir.distributionlist-v1+json:
            examples:
              Example:
                value:
                  id: 5AFEB61102963D7
                  name: My Distribution List
                  mri: My_Distribution_List.company_name@list.company.whispir.sg
                  description: My Distribution list
                  memberCount: "4"
                  access: Open
                  visibility: Public
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
                  distListIds: "3A21DCC420494A48, 07172DC9AC3E97A75B5A41536C132CA0"
                  distlistdetails:
                  - id: 123ADAB420493B83
                    name: John Smith
                    type: User
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
            schema:
              $ref: '#/components/schemas/postDistributionLists_request'
        description: Distribution list object that needs to be update Distribution
          list
        required: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a distribution list
      tags:
      - Distribution Lists
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.distributionlist-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/scenarios:
    get:
      description: Returns a list of your scenarios.
      operationId: getScenarios
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.scenario-v1+json:
              examples:
                example-1:
                  value:
                    scenarios:
                    - name: Fire Evacuation Block A
                      description: Fire evacuation notification for A block residents
                      allowedUsers: SELECTEDUSERS
                      allowedUserIds: 4DC922649AFE370C
                      message:
                        to: "61400400400"
                        subject: Test Message
                        body: This is the body of my test SMS message
                      to: "61400400400"
                      subject: Fire Evacuation
                      label: fire-evacuation
                      email:
                        body: This is the body of my email message.
                        footer: This is the footer of my message.
                        type: text/plain
                      voice:
                        header: "This is the introduction, read out to the recipient\
                          \ prior to any key press."
                        body: "This is the body of the voice call, read out after\
                          \ the key press"
                        type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
                        footer: ""
                        other: ""
                        resources:
                          attachment:
                          - attachmentName: TestIcon.png
                            derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                            attachmentDesc: My photo
                      web:
                        body: This is the content of my web publishing or Rich Push
                          Message
                        type: text/plain
                      social:
                        social:
                        - id: social
                          body: Facebook Content
                          type: text/plain
              schema:
                $ref: '#/components/schemas/getScenarios_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Scenario-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List scenarios
      tags:
      - Scenarios
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "A scenario is a combination of a message and contacts. So, its\
        \ structure contains section for both message as well as contact information.\
        \ API currently only supports creation of scenario with SMS as communication\
        \ mode.\n"
      operationId: postScenarios
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.scenario-v1+json:
            examples:
              example-1:
                value:
                  name: Fire Evacuation Block A
                  description: Fire evacuation notification for A block residents
                  allowedUsers: SELECTEDUSERS
                  allowedUserIds: string
                  message:
                    to: "61400400400"
                    subject: Test Message
                    body: This is the body of my test SMS message
            schema:
              $ref: '#/components/schemas/scenario'
        description: Scenario list object that needs to be create Scenario
        required: true
      responses:
        "201":
          description: Created
          headers:
            Content-Type:
              $ref: '#/components/headers/Scenario-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/scenarios/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a scenario
      tags:
      - Scenarios
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.scenario-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/scenarios/{scenarioId}:
    delete:
      description: Deletes a Scenario object.
      operationId: deleteScenariosById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The id of the Scenarios to be deleted
        explode: false
        in: path
        name: scenarioId
        required: true
        schema:
          example: 41048D9483C8CF2A
          type: string
        style: simple
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a scenario
      tags:
      - Scenarios
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: Retrieves a Scenario object.
      operationId: getScenariosById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Enter Scenarios id.
        explode: false
        in: path
        name: scenarioId
        required: true
        schema:
          example: 41048D9483C8CF2A
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.whispir.scenario-v1+json:
              examples:
                example:
                  value:
                    name: Fire Evacuation Block A
                    description: Fire evacuation notification for A block residents
                    allowedUsers: SELECTEDUSERS
                    allowedUserIds: string
                    message:
                      to: "61400400400"
                      subject: Test Message
                      body: This is the body of my test SMS message
                    to: string
                    subject: string
                    label: string
                    email:
                      body: This is the body of my email message.
                      footer: This is the footer of my message.
                      type: text/plain
                    voice:
                      header: "This is the introduction, read out to the recipient\
                        \ prior to any key press."
                      body: "This is the body of the voice call, read out after the\
                        \ key press"
                      type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
                      footer: ""
                      other: ""
                      resources:
                        attachment:
                        - attachmentName: TestIcon.png
                          derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                          attachmentDesc: My photo
                    web:
                      body: This is the content of my web publishing or Rich Push
                        Message
                      type: text/plain
                    social:
                      social:
                      - id: social
                        body: Facebook Content
                        type: text/plain
              schema:
                $ref: '#/components/schemas/scenario'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Scenario-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a scenario
      tags:
      - Scenarios
      x-sdkOperation: retrieve
      x-accepts: application/json
    post:
      description: |
        Running a scenario triggers the communication to the intended recipients. The message (static or dynamic) will be sent on all the provided channels.

        Running a scenario is very simple to do. The specific scenario has to called via a /POST request.

        Step wise example:
        1. Get all the scenarios
        2. Pick the required scenario’s link attribute
        3. Make a /POST call

        Now invoking this scenario is just making a /POST call.
      operationId: postScenariosById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Enter Scenarios id.
        explode: false
        in: path
        name: scenarioId
        required: true
        schema:
          example: 41048D9483C8CF2A
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the scenario.
              explode: false
              schema:
                type: string
              style: simple
            Content-Type:
              description: Application specific mime-type.
              explode: false
              schema:
                type: string
              style: simple
            Content-Length:
              description: Length of the response content.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Run a scenario
      tags:
      - Scenarios
      x-sdkOperation: run
      x-accepts: application/json
    put:
      description: Updates a Scenario object.
      operationId: putScenariosById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.scenario-v1+json
          enum:
          - application/vnd.whispir.scenario-v1+json
          - application/vnd.whispir.scenario-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Enter Scenarios id.
        explode: false
        in: path
        name: scenarioId
        required: true
        schema:
          example: 41048D9483C8CF2A
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.whispir.scenario-v1+json:
            examples:
              example-1:
                value:
                  name: Fire Evacuation Block A
                  description: Fire evacuation notification for A block residents
                  allowedUsers: SELECTEDUSERS
                  allowedUserIds: 4DC922649AFE370C
                  message:
                    to: "61400400400"
                    subject: Test Message
                    body: This is the body of my test SMS message
                  to: "61400400400"
                  subject: Fire Evacuation
                  label: fire-evacuation
                  email:
                    body: This is the body of my email message.
                    footer: This is the footer of my message.
                    type: text/plain
                  voice:
                    header: "This is the introduction, read out to the recipient prior\
                      \ to any key press."
                    body: "This is the body of the voice call, read out after the\
                      \ key press"
                    type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
                    footer: ""
                    other: ""
                    resources:
                      attachment:
                      - attachmentName: TestIcon.png
                        derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                        attachmentDesc: My photo
                  web:
                    body: This is the content of my web publishing or Rich Push Message
                    type: text/plain
                  social:
                    social:
                    - id: social
                      body: Facebook Content
                      type: text/plain
            schema:
              $ref: '#/components/schemas/scenario'
        description: Modifying a scenario obeys the same requirements seen at the
          moment of their creation
        required: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a scenario
      tags:
      - Scenarios
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.scenario-v1+json
      x-accepts: application/json
  /callbacks:
    get:
      description: List callbacks
      operationId: getCallbacks
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.api-callback-v1+json:
              examples:
                example-1:
                  value:
                    status: 1 to 1 of 1
                    callbacks:
                    - id: D7D2295E2A08388C
                      name: callback1
                      url: https://e05237bf.ngrol.io/
                      retriesEnabled: false
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/getCallbacks_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Callback-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List callbacks
      tags:
      - Callbacks
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "Whispir’s callback service can be configured to send simple notifications\
        \ and some associated metadata via API callbacks to an endpoint of your choice\
        \ when one of the following events occurs:\n\n- A message has been replied\
        \ to\n- A message delivery failure occurred [wrong number or service unavailable]\n\
        \n> **IMPORTANT**: unlike all the other API endpoints seen so far, Callbacks\
        \ are not defined at a Workspace level but at a Company level. In other words,\
        \ they can be referenced from any Workspace of that Company.\n\nCallbacks\
        \ are used widely in web applications to transfer information that may become\
        \ available at some point in the future. These are sometimes referred to as\
        \ ‘webhooks’.\n\nThe benefits of using API callbacks are:\n- Whispir will\
        \ instantly notify your callback server when a change has occurred on Whispir\
        \ platform.\n- You won't need to continuously poll the `/messageresponses`\
        \ or `/messagestatus` endpoints, so you won't be reducing your API daily cap.\n\
        - Callbacks themselves are on us, so they do not count towards the daily quota\
        \ limits.\n- Response-based workflows can be built quickly and effectively.\n\
        \nThe following diagram explains the entire high-level process:\n![API diagram](https://github.com/whispir/openapi/blob/main/assets/images/Whispir_API_diagram.png?raw=true)\n\
        \n## Callback endpoint validation\nDuring callback creation, Whispir makes\
        \ a `GET` request to ensure the callback `url` provided is valid and available.\
        \ The HTTP response code returned by the callback endpoint for this request\
        \ must be `200`. Any other code is considered a failure and the callback creation\
        \ will fail. This is the only time a `GET` request is made. Subsequent requests\
        \ (callbacks) will all be `POST` requests.\n\n## Configuration tips\n\n- Always\
        \ use a domain name for the callback. Do not use an IP.\n- Ensure that your\
        \ callback server is reachable on the internet. It should not be localhost\
        \ or an intranet-only application that can't be reached from the World Wide\
        \ Web.\n- Limit the port to 80 or 443. Do not use any other ports.\n- Depending\
        \ on the type chosen (‘json’ or ‘xml’) for the Content-Type, Whispir would\
        \ make a similar `GET` (and subsequently `POST`) call. Ensure that your web\
        \ server is configured to handle such MIME types.\n- Most importantly, if\
        \ your application infrastructure is behind a firewall, make sure that the\
        \ firewall allows an incoming `POST` request."
      operationId: postCallbacks
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.api-callback-v1+json:
            examples:
              Callback object:
                value:
                  id: A8B8C829A72D92FE
                  name: NEW callback tester 2
                  url: https://www.google.com/
                  auth:
                    type: queryparam
                    key: abcd1234
                  retriesEnabled: false
                  contentType: json
                  email: user002@testmail.whispir.com
                  removeHTML: enabled
                  callbacks:
                    reply: enabled
                    undeliverable: enabled
            schema:
              $ref: '#/components/schemas/callback'
        description: Callbacks list object that needs to be create Callbacks
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.api-callback-v1+json:
              examples:
                Callback object:
                  value:
                    id: 4452AC8359535C46
                    name: Callback Name
                    url: https://example.com/callback
                    auth:
                      type: queryparam
                      key: string
                    contentType: json
                    removeHTML: disabled
                    retriesEnabled: true
                    email: me@example.com
                    callbacks:
                      reply: disabled
                      undeliverable: disabled
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/callback'
          description: The Callback object
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/callbacks/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a callback
      tags:
      - Callbacks
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.api-callback-v1+json
      x-accepts: application/json
  /callbacks/{callbackId}:
    delete:
      description: Delete a callback object
      operationId: deleteCallbackById
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter Callback id.
        explode: false
        in: path
        name: callbackId
        required: true
        schema:
          example: 41048D9483C8CF2A
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Callback-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a callback
      tags:
      - Callbacks
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: Retrieve a callback object
      operationId: getCallbackById
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter Callbacks Id
        explode: false
        in: path
        name: callbackId
        required: true
        schema:
          example: F98A1DD47C3CA1F5
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          content:
            application/vnd.whispir.api-callback-v1+json:
              examples:
                Callback object:
                  value:
                    id: 4452AC8359535C46
                    name: Callback Name
                    url: https://example.com/callback
                    auth:
                      type: queryparam
                      key: string
                    contentType: json
                    removeHTML: disabled
                    retriesEnabled: true
                    email: me@example.com
                    callbacks:
                      reply: disabled
                      undeliverable: disabled
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/callback'
          description: The Callback object
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/callbacks/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a callback
      tags:
      - Callbacks
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: Update a callback object
      operationId: putCallbackById
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter Callback id.
        explode: false
        in: path
        name: callbackId
        required: true
        schema:
          example: 41048D9483C8CF2A
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.api-callback-v1+json
          enum:
          - application/vnd.whispir.api-callback-v1+json
          - application/vnd.whispir.api-callback-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        $ref: '#/components/requestBodies/callback'
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a callback
      tags:
      - Callbacks
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.callback-v1+json
      x-accepts: application/json
  /callbacks/{callbackId}/calls:
    get:
      description: List of calls to the callback
      operationId: getCallbackCalls
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: Enter Callbacks Id
        explode: false
        in: path
        name: callbackId
        required: true
        schema:
          example: F98A1DD47C3CA1F5
          type: string
        style: simple
      - description: "To specifically retrieve the FAILED/SUCCESS calls, one can pass\
          \ a status query param in the URL."
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - SUCCESS
          - FAILED
          type: string
        style: form
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.api-call-v1+json
          enum:
          - application/vnd.whispir.api-call-v1+json
          - application/vnd.whispir.api-call-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          content:
            application/vnd.whispir.api-call-v1+json:
              examples:
                Example:
                  value:
                    calls:
                    - id: C96962B74DC57EF30F00E7097AC81A45
                      messageId: 8D12688BFCC21BD51174C833F9BC9B9D
                      status: SUCCESS
                      messageLocation: string
                      from:
                        name: John Wick
                        mri: support@whispir.com
                        mobile: "6140099499"
                        voice: string
                        email: string
                      responseMessage:
                        channel: sms
                        acknowledged: string
                        undeliverable: string
                        content: string
                      callback:
                        id: string
                        name: string
                        url: string
                        attemptedDate: string
                        statusCode: 200
                        statusMessage: string
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    status: 1 to 8 of 8
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/getCallbackCalls_200_response'
          description: Example response
          headers:
            Content-Type:
              $ref: '#/components/headers/CallbackCall-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List callback calls
      tags:
      - Callbacks
      x-sdkOperation: listCalls
      x-accepts: application/json
    put:
      description: "As every call to a callback endpoint is now stored within the\
        \ calls endpoint, it’s possible that when failed calls are successfully processed\
        \ through a manual exercise, that these calls will then need to be updated\
        \ to reflect the current status.\n\nTake the following example:\n1.  Callback\
        \ server becomes unavailable\n2.  A message is sent via Whispir with callbacks\
        \ enabled.\n3.  The Message gets a response, and this triggers the callback\n\
        4.  The callback server is unavailable, so the response is stored with a status\
        \ of 'FAILED’\n5.  After 24h, the callback server becomes available again.\
        \ Retries have stopped, so this information will not automatically flow into\
        \ the callback server.\n6.  The customer writes a script to GET all of the\
        \ calls stored in the /calls endpoint and process them.\n7.  Once successfully\
        \ processed, the customer’s script should update the contents of the /calls\
        \ endpoint to reflect the current status of 'SUCCESS’.\n\nThis process can\
        \ be facilitated with the use of a PUT request to the /calls endpoint in Whispir.\n\
        \nTo update a list of attempted API calls from the Whispir API you can execute\
        \ an HTTP PUT using the /calls endpoint on a specific callback.\n\nUsers can\
        \ specify multiple IDs to be updated using the following notation:\n\n`/callbacks/:id/calls?id=ID1&id=ID2&id=ID3...`\n\
        \nThis ensures that all callbacks that have been processed can be updated\
        \ in a single API call, rather than having to make a single API call per callback\
        \ attempt.\n\nThe PUT request takes a single API parameter in the body\n"
      operationId: putCallbackCallStatus
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter Callback id.
        explode: false
        in: path
        name: callbackId
        required: true
        schema:
          example: 41048D9483C8CF2A
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.api-call-v1+json
          enum:
          - application/vnd.whispir.api-call-v1+json
          - application/vnd.whispir.api-call-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.api-call-v1+json
          enum:
          - application/vnd.whispir.api-call-v1+json
          - application/vnd.whispir.api-call-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The unique ID of the specific call within Whispir
        explode: true
        in: query
        name: id
        required: true
        schema:
          example: C96962B74DC57EF30F00E7097AC81A45
          maxLength: 32
          type: string
        style: form
      requestBody:
        content:
          application/vnd.whispir.api-call-v1+json:
            examples:
              Example:
                value:
                  status: FAILED
            schema:
              $ref: '#/components/schemas/callbackCall'
        description: "The Status can be either of SUCCESS or FAILED only, and you\
          \ can update the status to a singular value for upto 100 ids in a single\
          \ call by passing the IDs in the URL"
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a callback call status
      tags:
      - Callbacks
      x-sdkOperation: updateCall
      x-content-type: application/vnd.whispir.api-call-v1+json
      x-accepts: application/json
  /workspaces:
    get:
      description: Returns a list of your workspaces.
      operationId: getWorkspaces
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.workspace-v1+json
          enum:
          - application/vnd.whispir.workspace-v1+json
          - application/vnd.whispir.workspace-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.workspace-v1+json:
              examples:
                example-1:
                  value:
                    workspaces:
                    - id: 70F2492146292826
                      projectName: A Space Odessey
                      projectNumber: "2001"
                      status: A
                      billingcostcentre: Hollywood
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    status: "status: 1 to 1 of 1"
              schema:
                $ref: '#/components/schemas/getWorkspaces_200_response'
          description: Example of a list of workspaces response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List workspaces
      tags:
      - Workspaces
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "Note: There is no limit to the amount of workspaces each API user\
        \ can create.\n"
      operationId: postWorkspaces
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.workspace-v1+json
          enum:
          - application/vnd.whispir.workspace-v1+json
          - application/vnd.whispir.workspace-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.workspace-v1+json
          enum:
          - application/vnd.whispir.workspace-v1+json
          - application/vnd.whispir.workspace-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.workspace-v1+json:
            examples:
              example-1:
                value:
                  id: 70F2492146292826
                  projectName: A Space Odessey
                  projectNumber: "2001"
                  status: A
                  billingcostcentre: Hollywood
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
            schema:
              $ref: '#/components/schemas/workspace'
        description: Create a workspace
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.workspace-v1+json:
              examples:
                example-1:
                  value:
                    id: 70F2492146292826
                    projectName: A Space Odessey
                    projectNumber: "2001"
                    status: A
                    billingcostcentre: Hollywood
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/workspace'
          description: Example workspace object response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a workspace
      tags:
      - Workspaces
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.workspace-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}:
    get:
      description: "Use GET on a Workspace Id to verify it is a valid Workspace ID,\
        \ and see a list of all the other endpoint URIs in that workspace"
      operationId: getWorkspacesById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.workspace-v1+json
          enum:
          - application/vnd.whispir.workspace-v1+json
          - application/vnd.whispir.workspace-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          content:
            application/vnd.whispir.workspace-v1+json:
              examples:
                example-1:
                  value:
                    id: 70F2492146292826
                    projectName: A Space Odessey
                    projectNumber: "2001"
                    status: A
                    billingcostcentre: Hollywood
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/workspace'
          description: Example workspace object response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a workspace
      tags:
      - Workspaces
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: Update a workspace endpoint
      operationId: putWorkspaceById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.workspace-v1+json
          enum:
          - application/vnd.whispir.workspace-v1+json
          - application/vnd.whispir.workspace-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.workspace-v1+json
          enum:
          - application/vnd.whispir.workspace-v1+json
          - application/vnd.whispir.workspace-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.workspace-v1+json:
            examples:
              example-1:
                value:
                  id: 70F2492146292826
                  projectName: A Space Odessey
                  projectNumber: "2001"
                  status: A
                  billingcostcentre: Hollywood
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
            schema:
              $ref: '#/components/schemas/workspace'
        description: Update a workspace
      responses:
        "204":
          content:
            application/vnd.whispir.workspace-v1+json:
              examples:
                example-1:
                  value:
                    id: 70F2492146292826
                    projectName: A Space Odessey
                    projectNumber: "2001"
                    status: A
                    billingcostcentre: Hollywood
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/workspace'
          description: Example workspace object response
          headers:
            Content-Type:
              $ref: '#/components/headers/Workspace-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a workspace
      tags:
      - Workspaces
      x-sdkOperation: update
      x-internal: false
      x-content-type: application/vnd.whispir.workspace-v1+json
      x-accepts: application/json
  /activities:
    get:
      description: "### Search or Filter on Activity Logs\nActivity logs can become\
        \ quickly huge owing to the amount of actions performed. In such cases, to\
        \ have a proper filtering of data during a GET /activities, Whispir API provides\
        \ very neat filtering options on the data.\n\nAll filter options are to be\
        \ passed in as URL query parameters.\n\n**Note:** The API currently results\
        \ in a 404 Not Found when there are no activities present in the log for a\
        \ given search criteria. This should not be not confused with a failed response.\
        \ But rather as No Data Found.\n"
      operationId: getActivities
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.activity-v1+json
          enum:
          - application/vnd.whispir.activity-v1+json
          - application/vnd.whispir.activity-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: /activities?action=Map
        explode: true
        in: query
        name: action
        required: false
        schema:
          enum:
          - Create
          - Update
          - Move
          - Copy
          - Draft
          - Send
          - Modified
          - Delete
          - Contact Import File
          - Login
          - Approve
          - Reject
          - Dispatch
          - Register
          - Accept
          - Closed
          - Map
          - Un-map
          type: string
        style: form
      - description: /activities?module=Message
        explode: true
        in: query
        name: module
        required: false
        schema:
          enum:
          - System
          - Message
          - Scheduled Message
          - User
          - Contact
          - DistributionList
          - Template
          - Workspace
          - Event
          - WebService
          - Settings
          - Conversation
          - Gateway
          - Workspace Mapping
          - Folders
          - Team
          - RSS
          - API Mapping
          - Asset
          - Instruction
          type: string
        style: form
      - description: /activities?user=james
        explode: true
        in: query
        name: user
        required: false
        schema:
          example: james
          type: string
        style: form
      - description: /activities?workspace=Whispir.
        explode: true
        in: query
        name: workspace
        required: false
        schema:
          type: string
        style: form
      - description: /activities?status=Successful
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - Successful
          - Failed
          - Rejected
          type: string
        style: form
      - description: /activities?description=Imported
        explode: true
        in: query
        name: description
        required: false
        schema:
          example: Sample Activity
          type: string
        style: form
      - description: The date and time to start searching from in the format:dd/mm/yyyy
          hh:mm. This will search on the `time` field <p>/activities?startTime=01/01/2015%2000:00</p>
        explode: true
        in: query
        name: Start time
        required: false
        schema:
          type: string
        style: form
      - description: The date and time to start searching from in the format:dd/mm/yyyy
          hh:mm <p>/activities?endTime=01/01/2015%2000:00</p>
        explode: true
        in: query
        name: End time
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            examples:
              examples:
                example-1:
                  value:
                    activities:
                    - user: james.cameron
                      time: 17/08/15 13:29
                      action: Send
                      description: Message sent via the Whispir's Java library
                      status: Successful
                      module: Message
                      workspaceName: Whispir
                      link:
                      - uri: https://api.au.whispir.com/activities/9B26BCE6A7C1997D3E3C04D4C0B62165
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    - user: james.cameron
                      time: 17/08/15 12:56
                      action: Create
                      status: Successful
                      module: Workspace
                      workspaceName: Whispir
                      link:
                      - uri: https://api.au.whispir.com/activities/CF8F388F18FDDA7CA40F42E888EC8E67
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    - user: james.cameron
                      time: 17/08/15 12:26
                      action: Draft
                      description: Template for default notification messages
                      status: Successful
                      module: Template
                      workspaceName: Whispir
                      link:
                      - uri: https://api.au.whispir.com/activities/19F603F21E8A7D536D577A6B4DBCFE3F
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    - user: markm
                      time: 22/12/14 11:37
                      action: Logout
                      description: Loged out
                      status: Successful
                      module: System
                      workspaceName: ABC Operations
                      link:
                      - uri: https://api.au.whispir.com/activities/0DEB48AB3D3B6069D7DA1A808F5A5DE4
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    - user: markm
                      time: 22/12/14 11:20
                      action: Login
                      description: "Logged in, IP:8.8.8.8, Country: USA"
                      status: Successful
                      module: System
                      workspaceName: ABC Operations
                      link:
                      - uri: https://api.au.whispir.com/activities/0CEC8009230B3B92F5B548A22B55C407
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    link: []
              schema:
                $ref: '#/components/schemas/getActivities_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Activity-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List activities
      tags:
      - Activities
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "Activities are all the individual changes, tasks, calls, messages\
        \ and so on performed in a given company workspace. Each activity log entry\
        \ contains information about the workspace, the module (message, email, IVR\
        \ ...), the user who performed the activity, time stamps, description of the\
        \ activity, its status (success, fail) and so on.\n\nAll of these help meet\
        \ auditing and standards compliance and also change tracking. For example:\n\
        * As a Whispir API user (Voice module), you want to be able to update the\
        \ Whispir activity log as a call progresses through the IVR to ensure that\
        \ the auditing shows exactly what information a caller heard.\n\n* As a Whispir\
        \ API user (SMS module), you want to able to retrieve information from the\
        \ activity log about all the messages sent by a specific user.\nAs activity\
        \ information is sensitive, stricter permission rules apply to the data served\
        \ by these endpoints.\n\n* If the user is a *Company Administrator* or *Company\
        \ Leader*, retrieving the activity will produce a **_200 OK_** with the valid\
        \ response\n* If the user is a *Company Member* or *Company Guest*, they will\
        \ receive instead a **_403 Forbidden_** response advising that they don’t\
        \ have permission to access this resource\n* A *Company Administrator* or\
        \ *Company Leader* can also create content within the activity stream. They\
        \ do this through a POST of data to either the _/activities_ endpoint or to\
        \ the specific activity ID\n* They must specify a valid _‘Action’_, _‘Description’\
        _ and _‘Status’_ within their request\n* Posting to the _/activities_ endpoint\
        \ will create a new activity\n* Posting to the _/activities/{ID}_ endpoint\
        \ will append the content to the detail of the specified activity"
      operationId: postActivities
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.activity-v1+json
          enum:
          - application/vnd.whispir.activity-v1+json
          - application/vnd.whispir.activity-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.activity-v1+json
          enum:
          - application/vnd.whispir.activity-v1+json
          - application/vnd.whispir.activity-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.activity-v1+json:
            examples:
              example-1:
                value:
                  action: Logout
                  module: System
                  workspace: Company
                  user: string
                  status: Successful
                  description: Logged out
                  time: 04/08/22 11:19
            schema:
              $ref: '#/components/schemas/activity'
        description: ""
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.activity-v1+json:
              examples:
                example-1:
                  value:
                    user: user
                    time: 04/08/22 11:24
                    action: Logout
                    description: Logged out
                    status: Successful
                    module: System
                    workspaceName: Company
                    link:
                    - uri: https://api.au.whispir.com/activities/2652A4034A27E271
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/activity'
          description: Created
          headers:
            Content-Type:
              $ref: '#/components/headers/Activity-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/activities/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create an activity
      tags:
      - Activities
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.activity-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/activities:
    get:
      description: "## Restricting to only a single workspace \nBy default, GET /activities\
        \ returns all the activities at company level. This covers all the workspaces.\
        \ So, if the items has to limited to a specific workspace, one has to use\
        \ the workspace as the endpoint and activities followed by it.\n"
      operationId: getWorkspaceActivities
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.activity-v1+json
          enum:
          - application/vnd.whispir.activity-v1+json
          - application/vnd.whispir.activity-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.activity-v1+json:
              examples:
                Example 1:
                  value:
                    activities:
                    - user: whispir user
                      time: 03/08/22 15:17
                      action: Create
                      description: Logged out
                      status: Successful
                      module: Conversation
                      workspaceName: Company
                      fullname: Whispir User
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    status: "status: 1 to 1 of 1"
              schema:
                $ref: '#/components/schemas/getWorkspaceActivities_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Activity-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List workspace activities
      tags:
      - Activities
      x-sdkOperation: listByWorkspace
      x-accepts: application/json
  /customlists:
    get:
      description: "### High-Level Response Elements\n**id:** Number  \nSpecifies\
        \ the unique id of the List.\n\n**name:** String  \nSpecifies the name of\
        \ the List.\n\n**type:** String  \nSpecifies the type. The type can be one\
        \ of:\n*   INCIDENT\n*   MESSAGE\n*   CONTACT\n*   RSS\n\n**sorttype:** String\
        \  \nSpecifies the sorting order. The order can be one of:\n*   As Displayed\n\
        *   Ascending\n*   Descending\n\n**linked:** String  \nSpecifies the linked\
        \ status. Linked list item values are dependent on other lists. The linked\
        \ can be one of:\n*   disabled\n*   list id to which this is linked with\n\
        \n**link:** Array  \nProvides a list of URLs that can be used to manipulate\
        \ or access the list.\n\n*   uri - the link to access the list\n*   rel -\
        \ the descriptor for what the link will do\n*   method - the HTTP method to\
        \ use with this particular link\n\n### Search or Filter on Custom Lists\n\n\
        API allows you to be able to query the GET /customlists endpoint using the\
        \ following filters.\n\n**Search Criteria**\n- **name:** `/customlists?name=Category`\n\
        \n- **type:** `/customlists?type=Message`\n\n***\n**Note:** The API currently\
        \ results in a 404 Not Found when there are no activities present in the log\
        \ for a given search criteria. This should not be not confused with a failed\
        \ response. But rather as No Data Found.\n"
      operationId: getCustomLists
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.customlist-v1+json
          enum:
          - application/vnd.whispir.customlist-v1+json
          - application/vnd.whispir.customlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: Enter search name Eg.Category
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: Category
          type: string
        style: form
      - description: Enter search type Eg.Message
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - INCIDENT
          - MESSAGE
          - CONTACT
          - RSS
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.customlist-v1+json:
              examples:
                custom lists response example:
                  value:
                    status: string
                    customlabels:
                    - id: 4B4625BAEB7E4D58
                      name: Day of Week
                      type: MESSAGE
                      createdDate: 09/06/15 10:18
                      sortType: As Displayed
                      linked: enabled
                      link:
                      - uri: https://api.au.whispir.com/customlists/4B4625BAEB7E4D58
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
              schema:
                $ref: '#/components/schemas/getCustomLists_200_response'
          description: Example response
          headers:
            Content-Type:
              $ref: '#/components/headers/CustomList-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List custom lists
      tags:
      - Custom Lists
      x-sdkOperation: list
      x-accepts: application/json
  /customlists/{customlistId}:
    get:
      description: "### High-Level Response Elements\n\n**id:** Number  \nSpecifies\
        \ the unique id of the List.\n\n**name:** String  \nSpecifies the name of\
        \ the List.\n\n**type:** String  \nSpecifies the type. The type can be one\
        \ of:\n*   INCIDENT\n*   MESSAGE\n*   CONTACT\n*   RSS\n\n**createdDate:**\
        \ String  \nSpecifies the date of the List creation.\n\n**sorttype:** String\
        \  \nSpecifies the sorting order. The order can be one of:\n*   As Displayed\n\
        *   Ascending\n*   Descending\n\n**linked:** String  \nSpecifies the linked\
        \ status. Linked list item values are dependent on other lists. The linked\
        \ can be one of:\n*   disabled\n*   list id to which this is linked with\n\
        \n**customlabellists:** Object  \nThe `name` is the text that is shown to\
        \ the user, where as the `value` is the internally passed in value.\n\n**link:**\
        \ Array  \nProvides a list of URLs that can be used to manipulate or access\
        \ the list.\n*   uri - the link to access the list\n*   rel - the descriptor\
        \ for what the link will do\n*   method - the HTTP method to use with this\
        \ particular link\n"
      operationId: getCustomListsById
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.customlist-v1+json
          enum:
          - application/vnd.whispir.customlist-v1+json
          - application/vnd.whispir.customlist-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Enter Id
        explode: false
        in: path
        name: customlistId
        required: true
        schema:
          example: 43E9046401B18269
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.whispir.customlist-v1+json:
              examples:
                custom list response example:
                  value:
                    id: 4B4625BAEB7E4D58
                    name: Day of Week
                    type: MESSAGE
                    createdDate: 09/06/15 10:18
                    sortType: As Displayed
                    linked: enabled
                    customlabellists:
                    - name: Internal Systems
                      value: Internal Systems
                    - name: External Systems
                      value: External Systems
                    - name: Infrastructure
                      value: Infrastructure
                    link:
                    - uri: https://api.au.whispir.com/customlists/4B4625BAEB7E4D58
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/customList'
          description: Example responses
          headers:
            Content-Type:
              $ref: '#/components/headers/CustomList-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a custom list
      tags:
      - Custom Lists
      x-sdkOperation: retrieve
      x-accepts: application/json
  /users:
    delete:
      description: "Delete all users in the company.\n\n**Note**: use this endpoint\
        \ with caution!"
      operationId: deleteUsers
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: User accept.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete all users
      tags:
      - Users
      x-sdkOperation: deleteAll
      x-accepts: application/json
    get:
      description: "Retrieve a list of users in the account. The result will only\
        \ be limited to users with ACTIVE status. User’s with other status will not\
        \ be listed in the results.\n\nOnce the request is placed, the response will\
        \ be a list of url’s to each of the users that the API user has access to/or\
        \ has requested for via the search criteria.\n\n**Note:** The sample request\
        \ here shows users from the company the existing API user is associated with.\
        \ You cannot retrieve users list from outside of your company and users with\
        \ status != ACTIVE.\n\n## Retrieving workspace users\nTo retrieve the list\
        \ of users, the request is made to via GET to `/workspaces/{workspaceId}/users`\
        \ endpoint.\n\nBy default there will be a limit of 20 users returned in a\
        \ request.\n\nThe user will use the limit and offset query parameters to determine\
        \ how many users they would like to receive. (default when not provided will\
        \ be limit=20 & offset=0)\n\n### Searching for users\nUsers can be searched\
        \ for in a given company by passing in valid search criteria. The search criteria\
        \ usually can be any of the following user elements (field names) and will\
        \ be sent in as part of the URI as query parameters.\n*   First Name\n*  \
        \ Last Name\n*   Title\n*   Job Title\n*   Country\n*   Timezone\n*   Organization\
        \ Name\n*   Division\n*   Business Unit\n*   Department\n*   Team Name\n*\
        \   Role\n*   Additional Team Name\n*   Additional Role\n*   Work Email Address\
        \ 1\n*   Work Mobile Phone 1\n*   Work Phone Area Code 1\n*   Work Phone 1\n\
        *   Status * (see note below)\n\n**Note:** While searching for users via status,\
        \ use the short code ‘A’ for ACTIVE, similarly, 'I’ for INACTIVE, rather than\
        \ the full words ACTIVE, INACTIVE, etc. so, it is &status=A not &status=ACTIVE.\n"
      operationId: getUsers
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: A filter on the User attributes. Only Users with matching attributes
          will be returned.
        explode: true
        in: query
        name: fieldname
        required: false
        schema:
          example: status=A
          type: string
        style: form
      - description: User accept.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.user-v1+json:
              examples:
                Example:
                  value:
                    users:
                    - id: 4DC922649AFE370C
                      firstName: John
                      lastName: Wick
                      companyName: Whispir
                      workEmailAddress1: testUser@example.com
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    status: 1 to 8 of 8
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/getUsers_200_response'
          description: List users endpoint response
          headers:
            Content-Type:
              $ref: '#/components/headers/User-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List users
      tags:
      - Users
      x-sdkOperation: list
      x-internal: false
      x-accepts: application/json
    post:
      description: "Create a new user. Ensure that the necessary permissions are provided\
        \ to the API account to create or modify user accounts.\n\n### Activating\
        \ a User after the creation\n\nWhen created new users are in the PENDING (P)\
        \ state. To Activate the user, the User must be set to INACTIVE first via\
        \ a PUT request and then finally set to ACTIVE (A) via another PUT. They cannot\
        \ be directly set to (A) from (P).\n\nAn user when created is assigned the\
        \ PENDING status. So, to set the user to ACTIVE, one has to follow the “user\
        \ state machine” rules. Here’s how we do it:\n1.  POST /users for user account\
        \ creation. Capture the Location header value which is the unique link to\
        \ the User record. This is used in Step 2\n2.  GET /users/{userId} for the\
        \ user object\n3.  PUT /users/{userId} with STATUS set to 'INACTIVE’ - using\
        \ the user object retreived in step 2\n4.  PUT /users/{userId} with STATUS\
        \ set to 'ACTIVE’ - using the user object retreived in step 2\n\n**Note:**\
        \ The status text is case sensitive. Lowercase or mixed case text is invalid.\
        \ Always use uppercase.\n\nExample: active != ACTIVE; inActive != INACTIVE"
      operationId: postUsers
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: User accept.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.user-v1+json:
            schema:
              $ref: '#/components/schemas/user'
        description: The User object to create.
        required: true
      responses:
        "201":
          content:
            application/vnd.whispir.user-v1+json:
              examples:
                Example:
                  value:
                    id: 4DC922649AFE370C
                    userName: John.Wick
                    password: string
                    firstName: John
                    middleName: ""
                    lastName: Wick
                    title: ""
                    nickname: string
                    status: P
                    workMobilePhone1: "61400400400"
                    workEmailAddress1: testUser@example.com
                    workCountry: Australia
                    timezone: Australia/Melbourne
                    workMobilePhone2: "61500500500"
                    workEmailAddress2: newUser@example.com
                    workPhoneAreaCode1: "09"
                    workPhone1: "5006000"
                    workPhoneAreaCode2: "09"
                    workPhone2: "5007000"
                    workFaxAreaCode1: "09"
                    workFax1: "5008000"
                    workSatellitePhone: "61600600600"
                    workOtherPhone: "61700700700"
                    workAddress1: Level 15
                    workAddress2: 360 Collins St
                    workSuburb: Melboure
                    workState: Victoria
                    workPostCode: "3000"
                    workPostalAddress1: Level 15
                    workPostalAddress2: 360 Collins St
                    workPostalSuburb: Melboure
                    workPostalState: Victoria
                    workPostalPostCode: "3000"
                    personalEmailAddress1: personalPrimaryUser@example.com
                    personalEmailAddress2: personalSecondaryUser@example.com
                    personalAddress1: Level 15
                    personalAddress2: 360 Collins St
                    personalSuburb: Melboure
                    personalState: Victoria
                    personalPostCode: "3000"
                    personalCountry: Australia
                    personalPhoneAreaCode1: "09"
                    personalPhone1: "5006000"
                    personalPhoneAreaCode2: "09"
                    personalPhone2: "5007000"
                    personalFaxAreaCode1: "09"
                    personalFax1: "5008000"
                    otherPhoneAreaCode1: "09"
                    otherPhone1: "5009000"
                    otherMobile: "61900900900"
                    otherFirstName: Harold
                    otherLastName: Wickman
                    otherTitle: Mr
                    companyName: Whispir
                    jobTitle: Software Engineer
                    division: Technology
                    businessUnit: Core Platform
                    department: Research & Development
                    teamName1: Optimus Prime
                    teamName2: Bumblebee
                    role1: Administrator
                    role2: Analyst
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/user'
          description: User endpoint response
          headers:
            Content-Type:
              $ref: '#/components/headers/User-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/users/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create a user
      tags:
      - Users
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.user-v1+json
      x-accepts: application/json
  /users/{userId}:
    delete:
      description: "After performing this request, the response does not contain any\
        \ information other than the headers as it is not necessary.\n\nThe delete\
        \ a user if successful shall respond with a 204 No Content.\n"
      operationId: deleteUsersById
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter User id
        explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 4821DCC420494A3A
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: User accept.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Delete a user
      tags:
      - Users
      x-sdkOperation: delete
      x-accepts: application/json
    get:
      description: Retrieves a User object.
      operationId: getUsersById
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: The identifier for the User.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 4821DCC420494A3A
          type: string
        style: simple
      - description: User accept.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          content:
            application/vnd.whispir.user-v1+json:
              examples:
                Example:
                  value:
                    id: 4DC922649AFE370C
                    userName: John.Wick
                    password: string
                    firstName: John
                    middleName: ""
                    lastName: Wick
                    title: ""
                    nickname: string
                    status: P
                    workMobilePhone1: "61400400400"
                    workEmailAddress1: testUser@example.com
                    workCountry: Australia
                    timezone: Australia/Melbourne
                    workMobilePhone2: "61500500500"
                    workEmailAddress2: newUser@example.com
                    workPhoneAreaCode1: "09"
                    workPhone1: "5006000"
                    workPhoneAreaCode2: "09"
                    workPhone2: "5007000"
                    workFaxAreaCode1: "09"
                    workFax1: "5008000"
                    workSatellitePhone: "61600600600"
                    workOtherPhone: "61700700700"
                    workAddress1: Level 15
                    workAddress2: 360 Collins St
                    workSuburb: Melboure
                    workState: Victoria
                    workPostCode: "3000"
                    workPostalAddress1: Level 15
                    workPostalAddress2: 360 Collins St
                    workPostalSuburb: Melboure
                    workPostalState: Victoria
                    workPostalPostCode: "3000"
                    personalEmailAddress1: personalPrimaryUser@example.com
                    personalEmailAddress2: personalSecondaryUser@example.com
                    personalAddress1: Level 15
                    personalAddress2: 360 Collins St
                    personalSuburb: Melboure
                    personalState: Victoria
                    personalPostCode: "3000"
                    personalCountry: Australia
                    personalPhoneAreaCode1: "09"
                    personalPhone1: "5006000"
                    personalPhoneAreaCode2: "09"
                    personalPhone2: "5007000"
                    personalFaxAreaCode1: "09"
                    personalFax1: "5008000"
                    otherPhoneAreaCode1: "09"
                    otherPhone1: "5009000"
                    otherMobile: "61900900900"
                    otherFirstName: Harold
                    otherLastName: Wickman
                    otherTitle: Mr
                    companyName: Whispir
                    jobTitle: Software Engineer
                    division: Technology
                    businessUnit: Core Platform
                    department: Research & Development
                    teamName1: Optimus Prime
                    teamName2: Bumblebee
                    role1: Administrator
                    role2: Analyst
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/user'
          description: User endpoint response
          headers:
            Content-Type:
              $ref: '#/components/headers/User-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/users/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve a user
      tags:
      - Users
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: "The application must provide all the fields during the update\
        \ request, even if they are not being updated.\n\n**Any missing fields, except\
        \ for the password field, will be automatically removed from the existing\
        \ record.**\n\n**Note:** You cannot selectively update the user fields needed\
        \ as this is a PUT request.\n\nSo the standard process for updating a user\
        \ record is:\n\n1.  GET `/users/{id of user}`\n2.  Update the user field in\
        \ the object to the required value\n3.  PUT `/users/{id of user}` the new\
        \ object\n\nThe response to the PUT request upon success is usually a 204\
        \ with no content being provided.\n"
      operationId: putUsersById
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Enter Users id.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          example: 4821DCC420494A3A
          type: string
        style: simple
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: User accept.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.user-v1+json:
            schema:
              $ref: '#/components/schemas/user'
        description: Users object that needs to be update Users
        required: true
      responses:
        "204":
          description: No Content
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update a user
      tags:
      - Users
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.user-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/users:
    get:
      description: Returns a list of your Users.
      operationId: getWorkspaceUsers
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: User accept.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.user-v1+json
          enum:
          - application/vnd.whispir.user-v1+json
          - application/vnd.whispir.user-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.user-v1+json:
              examples:
                Example:
                  value:
                    users:
                    - id: 4DC922649AFE370C
                      firstName: John
                      lastName: Wick
                      companyName: Whispir
                      workEmailAddress1: testUser@example.com
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    status: 1 to 8 of 8
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
              schema:
                $ref: '#/components/schemas/getUsers_200_response'
          description: List users endpoint response
          headers:
            Content-Type:
              $ref: '#/components/headers/User-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List workspace users
      tags:
      - Users
      x-sdkOperation: listByWorkspace
      x-accepts: application/json
  /workspaces/{workspaceId}/events:
    get:
      description: List event objects
      operationId: getEvents
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.event-v1+json
          enum:
          - application/vnd.whispir.event-v1+json
          - application/vnd.whispir.event-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      - description: 'The name of the event template used '
        explode: false
        in: header
        name: eventType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.whispir.event-v1+json:
              examples:
                Events response example:
                  value:
                    events:
                    - id: string
                      eventLabel: 2701095 - Outage of Local Systems in Sydney
                      status: Open
                      eventFormList:
                      - formName: Metro Event
                        eventFieldList:
                        - name: string
                          value: string
                      link:
                      - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                        rel: self
                        method: GET
                        host: api.au.whispir.com
                        port: -1
                    status: 1 to 2 of 2
              schema:
                $ref: '#/components/schemas/getEvents_200_response'
          description: List of events response example
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Expires:
              $ref: '#/components/headers/Expires'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: List events
      tags:
      - Events
      x-sdkOperation: list
      x-accepts: application/json
    post:
      description: "The bulk of the `Event` metadata is from fields that are generic,\
        \ and only applicable to the customer that is using the module.\n\nThe owner\
        \ or responsible person for the event could be a `/contacts` in the system.\
        \ This ensures that proper communication is sent to the individual based on\
        \ their preferred channel (`message`, `email`, `voice`) automatically without\
        \ having to key in the phone, email, and other communication information again.\n\
        \nMost importantly, to create an event, one must have the create access for\
        \ `Incident` row in the `Roles & Permission` section of the account settings.\n\
        \nWhen an `Event` occurs/is triggered, the related actions are to be performed.\
        \ Each action has an owner (`actionOwner`), a set time (`actionDate`), and\
        \ details associated with it (`actionDetails`). \n\n`Events` have sub sections\
        \ under them called as ‘actions’ (maximum of 10). So the action values are\
        \ numbered:\n<li> actionDate1, actionOwner1, actionDetails1 </li>\n<li> actionDate2,\
        \ actionOwner2, actionDetails2 </li>\n<li> … </li>\n<li> actionDate10, actionOwner10,\
        \ actionDetails10 </li>\n\n<!-- theme: warning -->\n> #### Things to note\n\
        > The fields described below are defined through `name/value` pairs and to\
        \ be added as part of `eventFieldList` array\n\n```generic_attributes json_schema\n\
        {\n  \"title\": \"Event Fields\",\n  \"type\": \"object\",\n  \"properties\"\
        : {\n    \"actionDate\": {\n      \"type\": \"string\"\n      \"description:\
        \ \"The start date of this action in dd/mm/yyyy HH:MI:SS 24 hour format\"\
        ,\n      \"example\": \"11/09/2019 17:41:00\"\n    },\n    \"actionOwner\"\
        : {\n      \"type\": \"string\",\n      \"description\": \"The individual\
        \ (contact) responsible for this action’s execution\",\n      \"example\"\
        : \"John Wick\",\n    },\n    \"actionDetails\": {\n      \"type\": \"string\"\
        ,\n      \"description\": \"The detail description of this action\",\n   \
        \   \"example\":\"investigation to take place asap.\"\n    },\n    \"summary\"\
        : {\n      \"type\": \"string\",\n      \"description\": \"Specifies the summary\
        \ of the event. A single line that can be the equivalent of the subject of\
        \ an email\",\n      \"example\":\"investigation to take place asap\"\n  \
        \  },\n    \"status\": {\n      \"type\": \"string\",\n      \"description\"\
        : \"Specifies the status of the event. The status can be one of the following\"\
        ,\n      \"enum\": [\"Active\", \"Resolved\", \"Open\"],\n      \"default\"\
        :\"Open\",\n      \"example\":\"Open\"\n    },    \n   \"description\": {\n\
        \      \"type\": \"string\",\n      \"description\": \"Specifies the detailed\
        \ description of the event\",\n      \"example\":\"investigation to take place\
        \ asap\"\n    },\n   \"location\": {\n      \"type\": \"string\",\n      \"\
        description\": \"Specifies the latitude and longitude values of the event\
        \ location. This helps to show the event location on Whispir’s geo-map feature\
        \ set and coordinated communication based on the geo-location of the event\"\
        ,\n      \"example\":\"0.0,0.0\"\n    },\n   \"startDate\": {\n      \"type\"\
        : \"string\",\n      \"description\": \"Specifies the start date of the event.\
        \ The date and time should be in the format `DD/MM/YYYY HH:MI:SS` (24 hour\
        \ format)\",\n      \"example\":\"23/09/2019 17:21:00\"\n    },\n   \"endDate\"\
        : {\n      \"type\": \"string\",\n      \"description\": \"Specifies the end\
        \ date of the event. The date and time should be in the format `DD/MM/YYYY\
        \ HH:MI:SS` (24 hour format)\",\n      \"example\":\"23/09/2019 17:21:00\"\
        \n    },\n    \"severity\" :{\n      \"type\": \"string\",\n      \"description\"\
        : \"Specifies the severity of the event. While this can change from company\
        \ to company, the standard value set to be chosen from is   \n        <li><b>Severity\
        \ 5</b> – Routine Maintenance Tasks</li> \n        <li><b>Severity 4</b> –\
        \ Scheduled System Changes</li> \n        <li><b>Severity SL3</b> – Minor\
        \ Outage (some service degradation)</li> \n        <li><b>Severity SL2</b>\
        \ – Moderate Outage (service degradation)</li> \n        <li><b>Severity SL1</b>\
        \ – Major Outage (significant service unavailability)</li>\n      \",\n  \
        \    \"example\": \"Severity 5\"\n    },\n    \"priority\" :{\n      \"type\"\
        : \"string\",\n      \"description\": \"Specifies the priority of the event.\
        \ While this can change from company to company, the standard value set to\
        \ choose from is\n        <li><b>Priority 5</b> – No Set Resolution Period</li>\n\
        \        <li><b>Priority 4</b> – < 1 week Resolution</li>\n        <li><b>Priority\
        \ 3</b> – < 3 day Resolution</li>\n        <li><b>Priority 2</b> – < 1 day\
        \ Resolution</li>\n        <li><b>Priority 1</b> – < 2 hour Resolution</li>\n\
        \      \",\n      \"enum\": [\"Priority 5\", \"Priority 4\", \"Priority 3\"\
        , \"Priority 2\", \"Priority 1\"],\n      \"example\": \"Severity 5\"\n  \
        \  },\n   \"duration\": {\n      \"type\": \"string\",\n      \"description\"\
        : \"The duration of the event in `HH:MI:SS`. For example, `02:05:00`. This\
        \ can be substituted in the place of end date if required. Or a subset of\
        \ the time between the start and end dates.\",\n      \"example\":\"02:05:00\"\
        \n    }     \n  },\n  required: [\"actionDate\", \"actionOwner\", \"actionDetails\"\
        , \"startDate\"]\n}\n```\n``` categorisation json_schema\n{\n  \"title\":\
        \ \"Event Fields\",\n  \"type\": \"object\",\n  \"description: \"\",\n  \"\
        properties\": {\n    \"category\" :{\n      \"type\": \"string\",\n      \"\
        description\": \"Specifies the category of event. The default values to choose\
        \ from are (`Internal Systems`, `External Systems`, `Infrastructure`)\",\n\
        \      \"example\": \"Internal Systems\"\n    },\n    \"subcategory\" :{\n\
        \      \"type\": \"string\",\n      \"description\": \"Specifies the subcategory\
        \ in the category. The default values to choose from are (`Customer Impact`,\
        \ `Cust & Staff Impact`,`Staff Impact`, `Impact Unknown`)\",\n      \"example\"\
        : \"Customer Impact\"\n    },\n    \"type\" :{\n      \"type\": \"string\"\
        ,\n      \"description\": \"Specifies the type of event. The default values\
        \ to choose from are (`Multiple Issues`, `NIL`,`Network`, `Applications`,\
        \ `Mobile Apps`)\",\n      \"example\": \"Customer Impact\"\n    },\n    \"\
        externalVendor\" :{\n      \"type\": \"string\",\n      \"description\": \"\
        Specifies the name/contact who is the external vendor related to this event\"\
        ,\n      \"example\": \"ABC\"\n    }, \n    \"lineNumber\" :{\n      \"type\"\
        : \"string\",\n      \"description\": \"Specifies the line number (production\
        \ lines)\",\n      \"example\": \"ABC\"\n    },\n    \"externalCaseNumber\"\
        \ :{\n      \"type\": \"string\",\n      \"description\": \"Specifies the\
        \ number as tracked by an external party related to this event\",\n      \"\
        example\": \"ABC\"\n    },\n  }\n}\n```\n``` affected_services json_schema\n\
        {\n  \"title\": \"Event Fields\",\n  \"type\": \"object\",\n  \"description:\
        \ \"\",\n  \"properties\": {\n    \"platform\" :{\n      \"type\": \"string\"\
        ,\n      \"description\": \"Specifies the platform in the company that this\
        \ event is associated with\",\n      \"example\": \"ABC\"\n    },\n    \"\
        services\" :{\n      \"type\": \"string\",\n      \"description\": \"Specifies\
        \ the service in the company that this event is associated with\",\n     \
        \ \"example\": \"ABC\"\n    },\n  }\n}\n```\n``` impact json_schema\n{\n \
        \ \"title\": \"Event Fields\",\n  \"type\": \"object\",\n  \"description:\
        \ \"\",\n  \"properties\": {\n    \"impactCondition\" :{\n      \"type\":\
        \ \"string\",\n      \"description\": \"Specifies the impact condition of\
        \ this event to the company. These values can be configured via custom lists\
        \ as these can be very specific to the company. The default values to choose\
        \ from are (`All services not available`, `All services degraded`, `Some services\
        \ not available`, `Some services degraded`, `No Impact`, `Unknown`)\",\n \
        \     \"example\": \"Unknown\"\n    },\n    \"impactToOrg\" :{\n      \"type\"\
        : \"string\",\n      \"description\": \"Specifies the impact condition of\
        \ this event to the company. These values can be configured via custom lists\
        \ as these can be very specific to the company. The default values to choose\
        \ from are (`All services not available`, `All services degraded`, `Some services\
        \ not available`, `Some services degraded`, `No Impact`, `Unknown`)\",\n \
        \     \"example\": \"Unknown\"\n    },\n    \"locations\" :{\n      \"type\"\
        : \"string\",\n      \"description\": \"Specifies the impact location of this\
        \ event to a company’s operational geographies. These values can be configured\
        \ via custom lists as these can be very specific to the company\",\n     \
        \ \"example\": \"0.0,0.0\"\n    },\n  }\n}\n```\n``` example\n{\n    ...,\n\
        \    eventFieldList: [{\n        \"name\": \"actionDate1\",\n        \"value\"\
        : \"11/09/2019 17:41:00\"\n      },\n      {\n        \"name\": \"actionOwner1\"\
        ,\n        \"value\": \"John Wick\"\n      },\n      {  \n        \"name\"\
        : \"actionDetails1\",\n        \"value\": \"investigation to take place asap.\"\
        \n      },\n      {\n        \"name\": \"summary\",\n        \"value\": \"\
        Outage of systems in Sydney\"\n      },\n      {\n        \"name\": \"status\"\
        ,\n        \"value\": \"Open\"\n      },\n      {\n        \"name\": \"description\"\
        ,\n        \"value\": \"ATMs are non responsive, teams to be sent to investigate.\"\
        \n      },\n      {\n        \"name\": \"category\",\n        \"value\": \"\
        Internal\"\n      },\n      {\n       \"name\": \"startDate\",\n       \"\
        value\": \"11/09/2019 17:41:00\"\n      },\n      {\n       \"name\": \"severity\"\
        ,\n       \"value\": \"Severity 3 - Minor Outage (Some Service Degradation)\"\
        \n      },\n      ... and so on,\n  }]\n}                  \n```\n<!-- theme:\
        \ info -->\n\n> #### A thing to know\n> On top of the list of event attributes\
        \ listed above, you may introduce other (alias) name and title fields <li>\
        \ e.g (`otherFirstName`, `otherLastName`, `otherTitle`) </li>\n\n<h2>Sending\
        \ messages using event data</h2>\n\nOnce you’ve finished creating your event\
        \ data in the Whispir platform, the next logical step is to deliver a notification\
        \ about the event. This action can be performed using the existing `/messages`\
        \ endpoint, with the `eventId` as an attribute of the message.\n\n* Including\
        \ this `eventId` links the message to the event, and allow you to use any\
        \ attribute of the event within your message payload.\n* Any event fields\
        \ populated on the event are automatically populated within the message.\n\
        * Any attributes that are supplied within the message take priority over any\
        \ attributes that are from the event.\n* The user should not be required to\
        \ enter any `attributes` as these will be retrieved from the linked event.\n\
        * The event fields automatically populate the attributes in the message body\
        \ (based on the relationships set in the <b> Admin > Settings > Attributes\
        \ > Message Event Attribute Map</b>).\n\n<!-- theme: warning -->\n> #### Things\
        \ to note\n> * If the `Event` doesn't contain an event field, and there is\
        \ no relevant attribute field supplied > in the message payload, the `@@`\
        \ tag will not be resolved.\n> * If you don't supply an attribute in the message\
        \ payload, and this has also not been supplied from the event, the field simply\
        \ will not be resolved within the message."
      operationId: createEvent
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.event-v1+json
          enum:
          - application/vnd.whispir.event-v1+json
          - application/vnd.whispir.event-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.event-v1+json
          enum:
          - application/vnd.whispir.event-v1+json
          - application/vnd.whispir.event-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        $ref: '#/components/requestBodies/event'
      responses:
        "201":
          content:
            application/vnd.whispir.event-v1+json:
              examples:
                example-1:
                  value:
                    id: 421FEEBA93GF53A2
                    eventLabel: 2701095 - Outage of Local Systems in Sydney
                    status: Active
                    eventFormList:
                    - formName: MetroEvent
                      eventFieldList:
                      - name: summary
                        value: Outage of systems in Sydney
                      - name: location
                        value: "0.0,0.0"
                      - name: description
                        value: "ATMs are non responsive, teams to be sent to investigate."
                      - name: status
                        value: Open
                      - name: category
                        value: Internal
                      - name: startDate
                        value: 11/09/2019 00:00:00
                      - name: actionOwner1
                        value: John Wick
                      - name: actionDetails1
                        value: investigation to take place asap.
                      - name: actionDate1
                        value: 11/09/2019 00:00:00
                      - name: severity
                        value: Severity 3 - Minor Outage (Some Service Degradation)
                    link:
                    - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
                      host: https://api.au.whispir.com
                      port: -1
                      rel: self
                      method: GET
                    - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
                      host: https://api.au.whispir.com
                      port: -1
                      rel: self
                      method: PUT
                      type: "application/vnd.whispir.event-v1+xml,application/vnd.whispir.event-v1+json"
                    - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/messages?label=2701095%20-%20Outage%20of%20Local%20Systems%20in%20Sydney
                      host: https://api.au.whispir.com
                      port: -1
                      rel: retrieveEventMessages
                      method: GET
              schema:
                $ref: '#/components/schemas/event'
          description: Example Event response
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Expires:
              $ref: '#/components/headers/Expires'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create an event
      tags:
      - Events
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.event-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/events/{eventId}:
    get:
      description: Retrieve an event object
      operationId: getEventById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The identifier for the event.
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.event-v1+json
          enum:
          - application/vnd.whispir.event-v1+json
          - application/vnd.whispir.event-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: The number of records to be returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 20
          type: number
        style: form
      - description: The record number to start returning from.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
        style: form
      - description: The order in which you require the results to be returned. Either
          ‘asc’ or ‘desc’
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "The fields that you require the ordering to be performed on.\
          \ Multiple fields can be provided, separated by a comma."
        explode: true
        in: query
        name: sortFields
        required: false
        schema:
          example: "lastName,jobTitle"
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.whispir.event-v1+json:
              examples:
                example-1:
                  value:
                    id: 421FEEBA93GF53A2
                    eventLabel: 2701095 - Outage of Local Systems in Sydney
                    status: Active
                    eventFormList:
                    - formName: MetroEvent
                      eventFieldList:
                      - name: summary
                        value: Outage of systems in Sydney
                      - name: location
                        value: "0.0,0.0"
                      - name: description
                        value: "ATMs are non responsive, teams to be sent to investigate."
                      - name: status
                        value: Open
                      - name: category
                        value: Internal
                      - name: startDate
                        value: 11/09/2019 00:00:00
                      - name: actionOwner1
                        value: John Wick
                      - name: actionDetails1
                        value: investigation to take place asap.
                      - name: actionDate1
                        value: 11/09/2019 00:00:00
                      - name: severity
                        value: Severity 3 - Minor Outage (Some Service Degradation)
                    link:
                    - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
                      host: https://api.au.whispir.com
                      port: -1
                      rel: self
                      method: GET
                    - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
                      host: https://api.au.whispir.com
                      port: -1
                      rel: self
                      method: PUT
                      type: "application/vnd.whispir.event-v1+xml,application/vnd.whispir.event-v1+json"
                    - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/messages?label=2701095%20-%20Outage%20of%20Local%20Systems%20in%20Sydney
                      host: https://api.au.whispir.com
                      port: -1
                      rel: retrieveEventMessages
                      method: GET
              schema:
                $ref: '#/components/schemas/event'
          description: Example Event response
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Expires:
              $ref: '#/components/headers/Expires'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Retrieve an event
      tags:
      - Events
      x-sdkOperation: retrieve
      x-accepts: application/json
    put:
      description: Update an event object
      operationId: putEventById
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The identifier for the event.
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.event-v1+json
          enum:
          - application/vnd.whispir.event-v1+json
          - application/vnd.whispir.event-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.event-v1+json
          enum:
          - application/vnd.whispir.event-v1+json
          - application/vnd.whispir.event-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        $ref: '#/components/requestBodies/event'
      responses:
        "204":
          description: No Content
          headers:
            Content-Type:
              $ref: '#/components/headers/Event-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Expires:
              $ref: '#/components/headers/Expires'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Update an event
      tags:
      - Events
      x-sdkOperation: update
      x-content-type: application/vnd.whispir.event-v1+json
      x-accepts: application/json
  /workspaces/{workspaceId}/imports:
    post:
      description: "## Bulk contact import\nThe Whispir API will expose this functionality\
        \ as a two stage process:\n1. Submit contact data within a CSV, JSON, XML\
        \ payload using the /resource endpoint – which will return a resource ID\n\
        2. Create a new import resource by submitting a POST to the /imports endpoint\
        \ referencing the resource ID created in step 1.\n\nThese two stages are further\
        \ explained below.\n\nCreate a resource specifying the contact information\n\
        \nApplications can upload a valid CSV, XML or JSON resource containing the\
        \ contact information that will be imported into the Whispir Platform. Whispir\
        \ will return the resource ID which can be used to import or update contacts\
        \ within a workspace through the imports endpoint as described below.\n\n\
        ### Request Structure\nFirstly, the application needs to upload a resource\
        \ using the Creating Resources.\n\nThe resource that needs to be provided\
        \ for contact importing should be in one the following format:\n*   XML\n\
        *   JSON\n*   CSV\n\nOnce this resource has been imported with the appropriate\
        \ mime type, the application can reference this resource within the import\
        \ request.\n\nImport a resource using the imports endpoint  \n\nAfter receiving\
        \ a valid resource ID, applications can make a request to the imports endpoint\
        \ within a workspace and reference the appropriate resource ID. Whispir will\
        \ then create an import process that will import the specified data into the\
        \ workspace.  \n\nOnce the application has an appropriate resource ID to use\
        \ within the import endpoint, the following request can be used to begin the\
        \ import process.  \n\n**Note:** Import processes take place asynchronously.\
        \ Any contacts will be created once the import process starts, and users will\
        \ be able to utilise imported contacts as soon as each is completed.\n"
      operationId: postImports
      parameters:
      - description: The identifier for the workspace.
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          example: 9A4C5521FFC7B15B
          pattern: "^[A-F0-9]+"
          type: string
        style: simple
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.importcontact-v1+json
          enum:
          - application/vnd.whispir.importcontact-v1+json
          - application/vnd.whispir.importcontact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type.
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.importcontact-v1+json
          enum:
          - application/vnd.whispir.importcontact-v1+json
          - application/vnd.whispir.importcontact-v1+xml
          type: string
        style: simple
        x-isContentType: true
      requestBody:
        content:
          application/vnd.whispir.importcontact-v1+json:
            examples:
              example-1:
                value:
                  resourceId: 4FBBC384BCE3DAABFE3
                  importType: contact
                  importOptions:
                    firstName: firstName
                    lastName: lastName
                    workMobilePhone1: workMobilePhone1
                    workCountry: workCountry
                    timezone: timeZone
                  importMode: replace
            schema:
              $ref: '#/components/schemas/import'
        description: import object that needs to be create import
      responses:
        "202":
          description: Accepted
          headers:
            Content-Type:
              $ref: '#/components/headers/Import-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/imports/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create an import
      tags:
      - Imports
      x-sdkOperation: create
      x-isPost: true
      x-content-type: application/vnd.whispir.importcontact-v1+json
      x-accepts: application/json
  /auth:
    post:
      description: Create a JWT authentication token
      operationId: postAuth
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          default: application/vnd.whispir.auth-v1+json
          enum:
          - application/vnd.whispir.auth-v1+json
          - application/vnd.whispir.auth-v1+xml
          type: string
        style: simple
        x-isContentType: true
      - description: Application specific mime-type
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.auth-v1+json
          enum:
          - application/vnd.whispir.auth-v1+json
          - application/vnd.whispir.auth-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          content:
            application/vnd.whispir.auth-v1+json:
              examples:
                Example:
                  value:
                    token: your-generated-token-string
                    link: []
              schema:
                $ref: '#/components/schemas/postAuth_200_response'
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Auth-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
            Location:
              description: The URI to fetch details of the resource.
              example: https://api.au.whispir.com/auth/747AB7E716C1802B6476784AEB5C9BB8
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Create an auth token
      tags:
      - Auth
      x-sdkOperation: create
      x-isPost: true
      x-accepts: application/json
  /auth/verify:
    get:
      description: Verify a JWT authentication token
      operationId: getAuthVerification
      parameters:
      - description: The API key for authentication.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
        x-isApiKey: true
      - description: Application specific mime-type
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          default: application/vnd.whispir.auth-v1+json
          enum:
          - application/vnd.whispir.auth-v1+json
          - application/vnd.whispir.auth-v1+xml
          type: string
        style: simple
        x-isContentType: true
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              $ref: '#/components/headers/Auth-Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: Your request was malformed and could not be processed
                      by the server. Please try again
                    errorText: Bad Request
                    errorDetail: "java.io.EOFException: No content to map to Object\
                      \ due to end of input"
              schema:
                $ref: '#/components/schemas/getMessages_400_response'
          description: |-
            Invalid or missing request parameters.

            Inspect the request parameters and ensure that all required parameters are supplied.

            Note the error text in the response and update the request accordingly.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "401":
          content:
            application/json:
              examples:
                Example:
                  value:
                    links: []
                    errorSummary: Your username and password combination was incorrect.
                      Please check your authentication details and try again
                    errorText: Unauthorized
                    errorDetail: ""
              schema:
                $ref: '#/components/schemas/getMessages_401_response'
          description: |-
            Invalid or no credentials passed in the request.

            Inspect the authorisation header and ensure that a valid authentication has been provided.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "403":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Forbidden
              schema:
                $ref: '#/components/schemas/getMessages_403_response'
          description: |-
            Authorisation credentials passed and accepted but the account doesn't have permission.

            * Inspect the authorisation header and ensure that a valid authentication has been provided.
            * Returned when HTTP is used instead of HTTPS.
            * Returned when invalid API key is used.
            * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "404":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The resource that you have requested does not exist.
                      Please check the identifier and try again
                    errorText: Not Found
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_404_response'
          description: "The requested URL doesn't exist.\n\nThe requested resource\
            \ was not found. Inspect the ID in the URL that was used and ensure that\
            \ it's valid.\n\nAlso, inspect the Accept and Content-Type headers that\
            \ are being used to make sure they’re correct for the URL that is being\
            \ requested."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "405":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: The method that you have tried to use is not allowed
                      for this resource
                    errorText: Method Not Allowed
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_405_response'
          description: |-
            The requested resource doesn't support the supplied verb.

            Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "413":
          content:
            application/json:
              examples:
                Example:
                  value: HTTP content length exceeded 10485760 bytes.
              schema:
                description: The request length error message.
                enum:
                - HTTP content length exceeded 10485760 bytes.
                type: string
          description: |-
            The request payload was too large.

            The maximum allowable request size is 10MB (10485760 bytes).
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "415":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The media type you have supplied in the request\
                      \ does not match any of the available on the server. Please\
                      \ check the documentation for the correct media-type definitions,\
                      \ or contact support@whispir.com to determine what media-type\
                      \ you should be using"
                    errorText: Unsupported Media Type
                    errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume\
                      \ content type"
              schema:
                $ref: '#/components/schemas/getMessages_415_response'
          description: "The request was unsuccessful because the requested content\
            \ type is not supported by the API.\n\nThe application client can use\
            \ this response to determine if it's asking for a supported version of\
            \ a resource. On receiving this response, the client can query the developer\
            \ documentation to determine the appropriate version for the requested\
            \ resource.\n\nIn most cases, this is due to the user not supplying the\
            \ correct Accept or Content-Type header for the requested URL."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "422":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "Your request did not contain all of the information\
                      \ required to perform this method. Please check your request\
                      \ for the required fields to be passed in and try again. Alternatively,\
                      \ contact your administrator or support@whispir.com for more\
                      \ information"
                    errorText: "A Template name already exists in the current Workspace,\
                      \ please select another name and try again.\n"
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_422_response'
          description: "The request is formed correctly but due to some condition\
            \ it can’t be processed. For example, email is required and it's not provided\
            \ in the request.\n\nThe request did not contain all the information required\
            \ to perform this method. Check your request for the required fields to\
            \ be passed in and try again. The offending fields will be specified in\
            \ the error text of the response."
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    message: Internal Server Error
              schema:
                $ref: '#/components/schemas/getMessages_500_response'
          description: |-
            An internal error occurred when processing the request.

            Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
        "501":
          content:
            application/json:
              examples:
                Example:
                  value:
                    errorSummary: "The method that you have tried to use is not implemented\
                      \ for this resource. Please check the documentation, or contact\
                      \ your administrator. Alternatively you can get further information\
                      \ by contacting support@whispir.com"
                    errorText: Not Implemented
                    errorDetail: ""
                    link: []
              schema:
                $ref: '#/components/schemas/getMessages_501_response'
          description: |-
            The HTTP method being used has not yet been implemented for the requested resource.

            The method being used is not implemented for this resource. Check the documentation for the specific resource type.
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
            Expires:
              $ref: '#/components/headers/Expires'
      summary: Verify an auth token
      tags:
      - Auth
      x-sdkOperation: verify
      x-accepts: application/json
components:
  headers:
    Location:
      description: The URI to fetch details of the resource.
      example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8
      explode: false
      required: true
      schema:
        type: string
      style: simple
    Access-Control-Allow-Origin:
      description: Origins allowed to perform cross-origin requests.
      explode: false
      required: true
      schema:
        enum:
        - '*'
        type: string
      style: simple
    Content-Length:
      description: Length of the response content.
      example: 4111
      explode: false
      required: true
      schema:
        type: number
      style: simple
    Content-Type:
      description: The content type of the request header.
      example: application/vnd.whispir.message-v1+json
      explode: false
      required: true
      schema:
        type: string
      style: simple
    Cache-Control:
      description: "The directives that control caching in browsers and shared caches\
        \ (e.g. Proxies, CDNs)."
      example: max-age=0
      explode: false
      required: true
      schema:
        type: string
      style: simple
    Expires:
      description: The date/time after which the response is considered expired.
      example: "Mon, 21 Mar 2022 03:18:32 GMT"
      explode: false
      required: true
      schema:
        type: string
      style: simple
    Message-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.message-v1+json
        - application/vnd.whispir.message-v1+xml
        type: string
      style: simple
    MessageStatus-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.messagestatus-v1+json
        - application/vnd.whispir.messagestatus-v1+xml
        type: string
      style: simple
    MessageResponse-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.messageresponse-v1+json
        - application/vnd.whispir.messageresponse-v1+xml
        type: string
      style: simple
    Template-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.template-v1+json
        - application/vnd.whispir.template-v1+xml
        type: string
      style: simple
    User-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.user-v1+json
        - application/vnd.whispir.user-v1+xml
        type: string
      style: simple
    Callback-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.api-callback-v1+json
        - application/vnd.whispir.api-callback-v1+xml
        type: string
      style: simple
    CallbackCall-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.api-call-v1+json
        - application/vnd.whispir.api-call-v1+xml
        type: string
      style: simple
    Resource-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.resource-v1+json
        - application/vnd.whispir.resource-v1+xml
        type: string
      style: simple
    Contact-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.contact-v1+json
        - application/vnd.whispir.contact-v1+xml
        type: string
      style: simple
    Event-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.event-v1+json
        - application/vnd.whispir.event-v1+xml
        type: string
      style: simple
    Activity-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.activity-v1+json
        - application/vnd.whispir.activity-v1+xml
        type: string
      style: simple
    ResponseRule-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.responserule-v1+json
        - application/vnd.whispir.responserule-v1+xml
        type: string
      style: simple
    Scenario-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.scenario-v1+json
        - application/vnd.whispir.scenario-v1+xml
        type: string
      style: simple
    DistributionList-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.distributionlist-v1+json
        - application/vnd.whispir.distributionlist-v1+xml
        type: string
      style: simple
    Workspace-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.workspace-v1+json
        - application/vnd.whispir.workspace-v1+xml
        type: string
      style: simple
    CustomList-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.customlist-v1+json
        - application/vnd.whispir.customlist-v1+xml
        type: string
      style: simple
    Import-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.importcontact-v1+json
        - application/vnd.whispir.importcontact-v1+xml
        type: string
      style: simple
    Auth-Content-Type:
      description: Application specific mime-type.
      explode: false
      required: true
      schema:
        enum:
        - application/vnd.whispir.auth-v1+json
        - application/vnd.whispir.auth-v1+xml
        type: string
      style: simple
  parameters:
    X-Api-Key:
      description: The API key for authentication.
      explode: false
      in: header
      name: X-Api-Key
      required: true
      schema:
        type: string
      style: simple
      x-isApiKey: true
    workspaceId:
      description: The identifier for the workspace.
      explode: false
      in: path
      name: workspaceId
      required: true
      schema:
        example: 9A4C5521FFC7B15B
        pattern: "^[A-F0-9]+"
        type: string
      style: simple
    limit:
      description: The number of records to be returned.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        maximum: 20
        type: number
      style: form
    offset:
      description: The record number to start returning from.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        type: number
      style: form
    Template-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.template-v1+json
        enum:
        - application/vnd.whispir.template-v1+json
        - application/vnd.whispir.template-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Template-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.template-v1+json
        enum:
        - application/vnd.whispir.template-v1+json
        - application/vnd.whispir.template-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Callback-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.api-callback-v1+json
        enum:
        - application/vnd.whispir.api-callback-v1+json
        - application/vnd.whispir.api-callback-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Callback-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.api-callback-v1+json
        enum:
        - application/vnd.whispir.api-callback-v1+json
        - application/vnd.whispir.api-callback-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Contact-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.contact-v1+json
        enum:
        - application/vnd.whispir.contact-v1+json
        - application/vnd.whispir.contact-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Contact-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.contact-v1+json
        enum:
        - application/vnd.whispir.contact-v1+json
        - application/vnd.whispir.contact-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Resource-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.resource-v1+json
        enum:
        - application/vnd.whispir.resource-v1+json
        - application/vnd.whispir.resource-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Resource-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.resource-v1+json
        enum:
        - application/vnd.whispir.resource-v1+json
        - application/vnd.whispir.resource-v1+xml
        type: string
      style: simple
      x-isContentType: true
    ResponseRule-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.responserule-v1+json
        enum:
        - application/vnd.whispir.responserule-v1+json
        - application/vnd.whispir.responserule-v1+xml
        type: string
      style: simple
      x-isContentType: true
    ResponseRule-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.responserule-v1+json
        enum:
        - application/vnd.whispir.responserule-v1+json
        - application/vnd.whispir.responserule-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Workspace-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.workspace-v1+json
        enum:
        - application/vnd.whispir.workspace-v1+json
        - application/vnd.whispir.workspace-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Workspace-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.workspace-v1+json
        enum:
        - application/vnd.whispir.workspace-v1+json
        - application/vnd.whispir.workspace-v1+xml
        type: string
      style: simple
      x-isContentType: true
    DistributionList-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.distributionlist-v1+json
        enum:
        - application/vnd.whispir.distributionlist-v1+json
        - application/vnd.whispir.distributionlist-v1+xml
        type: string
      style: simple
      x-isContentType: true
    DistributionList-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.distributionlist-v1+json
        enum:
        - application/vnd.whispir.distributionlist-v1+json
        - application/vnd.whispir.distributionlist-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Scenario-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.scenario-v1+json
        enum:
        - application/vnd.whispir.scenario-v1+json
        - application/vnd.whispir.scenario-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Scenario-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.scenario-v1+json
        enum:
        - application/vnd.whispir.scenario-v1+json
        - application/vnd.whispir.scenario-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Event-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.event-v1+json
        enum:
        - application/vnd.whispir.event-v1+json
        - application/vnd.whispir.event-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Event-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.event-v1+json
        enum:
        - application/vnd.whispir.event-v1+json
        - application/vnd.whispir.event-v1+xml
        type: string
      style: simple
      x-isContentType: true
    CustomList-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.customlist-v1+json
        enum:
        - application/vnd.whispir.customlist-v1+json
        - application/vnd.whispir.customlist-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Import-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.importcontact-v1+json
        enum:
        - application/vnd.whispir.importcontact-v1+json
        - application/vnd.whispir.importcontact-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Import-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.importcontact-v1+json
        enum:
        - application/vnd.whispir.importcontact-v1+json
        - application/vnd.whispir.importcontact-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Message-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.message-v1+json
        enum:
        - application/vnd.whispir.message-v1+json
        - application/vnd.whispir.bulkmessage-v1+json
        - application/vnd.whispir.message-v1+xml
        - application/vnd.whispir.bulkmessage-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Message-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.message-v1+json
        enum:
        - application/vnd.whispir.message-v1+json
        - application/vnd.whispir.bulkmessage-v1+json
        - application/vnd.whispir.message-v1+xml
        - application/vnd.whispir.bulkmessage-v1+xml
        type: string
      style: simple
      x-isContentType: true
    MessageStatus-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.messagestatus-v1+json
        enum:
        - application/vnd.whispir.messagestatus-v1+json
        - application/vnd.whispir.messagestatus-v1+xml
        type: string
      style: simple
      x-isContentType: true
    MessageResponse-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.messageresponse-v1+json
        enum:
        - application/vnd.whispir.messageresponse-v1+json
        - application/vnd.whispir.messageresponse-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Auth-Accept:
      description: Application specific mime-type
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.auth-v1+json
        enum:
        - application/vnd.whispir.auth-v1+json
        - application/vnd.whispir.auth-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Auth-Content-Type:
      description: Application specific mime-type
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.auth-v1+json
        enum:
        - application/vnd.whispir.auth-v1+json
        - application/vnd.whispir.auth-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Activity-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.activity-v1+json
        enum:
        - application/vnd.whispir.activity-v1+json
        - application/vnd.whispir.activity-v1+xml
        type: string
      style: simple
      x-isContentType: true
    Activity-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.activity-v1+json
        enum:
        - application/vnd.whispir.activity-v1+json
        - application/vnd.whispir.activity-v1+xml
        type: string
      style: simple
      x-isContentType: true
    sortOrder:
      description: The order in which you require the results to be returned. Either
        ‘asc’ or ‘desc’
      explode: true
      in: query
      name: sortOrder
      required: false
      schema:
        enum:
        - asc
        - desc
        type: string
      style: form
    sortFields:
      description: "The fields that you require the ordering to be performed on. Multiple\
        \ fields can be provided, separated by a comma."
      explode: true
      in: query
      name: sortFields
      required: false
      schema:
        example: "lastName,jobTitle"
        type: string
      style: form
    User-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.user-v1+json
        enum:
        - application/vnd.whispir.user-v1+json
        - application/vnd.whispir.user-v1+xml
        type: string
      style: simple
      x-isContentType: true
    User-Accept:
      description: User accept.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.user-v1+json
        enum:
        - application/vnd.whispir.user-v1+json
        - application/vnd.whispir.user-v1+xml
        type: string
      style: simple
      x-isContentType: true
    CallbackCall-Content-Type:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        default: application/vnd.whispir.api-call-v1+json
        enum:
        - application/vnd.whispir.api-call-v1+json
        - application/vnd.whispir.api-call-v1+xml
        type: string
      style: simple
      x-isContentType: true
    CallbackCall-Accept:
      description: Application specific mime-type.
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        default: application/vnd.whispir.api-call-v1+json
        enum:
        - application/vnd.whispir.api-call-v1+json
        - application/vnd.whispir.api-call-v1+xml
        type: string
      style: simple
      x-isContentType: true
  requestBodies:
    event:
      content:
        application/vnd.whispir.event-v1+json:
          examples:
            Event request body example:
              value:
                id: B27ABC9D8E98A9B
                eventLabel: 2701095 - Outage of Local Systems in Sydney
                status: Active
                eventFormList:
                - formName: MetroEvent
                  eventFieldList:
                  - name: summary
                    value: Outage of systems in Sydney
                  - name: location
                    value: "0.0,0.0"
                  - name: endDate
                  - name: type
                    value: ""
                  - name: actionDetails2
                    value: ""
                  - name: actionDetails3
                    value: ""
                  - name: actionDetails1
                    value: investigation to take place asap.
                  - name: priority
                    value: ""
                  - name: description
                    value: "ATMs are non responsive, teams to be sent to investigate."
                  - name: actionDetails8
                    value: ""
                  - name: actionDetails9
                    value: ""
                  - name: actionDetails6
                    value: ""
                  - name: actionDetails7
                    value: ""
                  - name: actionDetails4
                    value: ""
                  - name: actionOwner10
                    value: ""
                  - name: actionDetails5
                    value: ""
                  - name: platform
                    value: ""
                  - name: services
                    value: ""
                  - name: status
                    value: Open
                  - name: openedBy
                    value: ""
                  - name: category
                    value: Internal
                  - name: externalVendor
                    value: ""
                  - name: externalCaseNumber
                    value: ""
                  - name: actionOwner6
                    value: ""
                  - name: startDate
                    value: 11/09/2019 00:00:00
                  - name: actionOwner5
                    value: ""
                  - name: actionOwner8
                    value: ""
                  - name: actionOwner7
                    value: ""
                  - name: actionOwner9
                    value: ""
                  - name: actionDate8
                  - name: actionDate9
                  - name: actionDetails10
                    value: ""
                  - name: actionDate4
                  - name: actionOwner2
                    value: ""
                  - name: actionDate5
                  - name: actionOwner1
                    value: John Wick
                  - name: actionDate6
                  - name: actionOwner4
                    value: ""
                  - name: actionDate7
                  - name: actionOwner3
                    value: ""
                  - name: actionDate1
                    value: 11/09/2019 00:00:00
                  - name: actionDate3
                  - name: actionDate2
                  - name: locations
                    value: ""
                  - name: impactToOrg
                    value: ""
                  - name: actionDate10
                  - name: locationDisplay
                    value: ""
                  - name: subCategory
                    value: ""
                  - name: severity
                    value: Severity 3 - Minor Outage (Some Service Degradation)
                  - name: duration
                    value: ""
                  - name: lineNumber
                    value: ""
                  - name: impactCondition
                    value: ""
          schema:
            $ref: '#/components/schemas/event'
      description: events object that needs to be create events
    callback:
      content:
        application/vnd.whispir.callback-v1+json:
          examples:
            Callback Object:
              value:
                id: 4452AC8359535C46
                name: Callback Name
                url: https://example.com/callback
                auth:
                  type: queryparam
                  key: string
                contentType: json
                removeHTML: disabled
                retriesEnabled: true
                email: me@example.com
                callbacks:
                  reply: disabled
                  undeliverable: disabled
          schema:
            $ref: '#/components/schemas/callback'
      description: The Callback Object
  responses:
    User:
      content:
        application/vnd.whispir.user-v1+json:
          examples:
            Example:
              value:
                id: 4DC922649AFE370C
                userName: John.Wick
                password: string
                firstName: John
                middleName: ""
                lastName: Wick
                title: ""
                nickname: string
                status: P
                workMobilePhone1: "61400400400"
                workEmailAddress1: testUser@example.com
                workCountry: Australia
                timezone: Australia/Melbourne
                workMobilePhone2: "61500500500"
                workEmailAddress2: newUser@example.com
                workPhoneAreaCode1: "09"
                workPhone1: "5006000"
                workPhoneAreaCode2: "09"
                workPhone2: "5007000"
                workFaxAreaCode1: "09"
                workFax1: "5008000"
                workSatellitePhone: "61600600600"
                workOtherPhone: "61700700700"
                workAddress1: Level 15
                workAddress2: 360 Collins St
                workSuburb: Melboure
                workState: Victoria
                workPostCode: "3000"
                workPostalAddress1: Level 15
                workPostalAddress2: 360 Collins St
                workPostalSuburb: Melboure
                workPostalState: Victoria
                workPostalPostCode: "3000"
                personalEmailAddress1: personalPrimaryUser@example.com
                personalEmailAddress2: personalSecondaryUser@example.com
                personalAddress1: Level 15
                personalAddress2: 360 Collins St
                personalSuburb: Melboure
                personalState: Victoria
                personalPostCode: "3000"
                personalCountry: Australia
                personalPhoneAreaCode1: "09"
                personalPhone1: "5006000"
                personalPhoneAreaCode2: "09"
                personalPhone2: "5007000"
                personalFaxAreaCode1: "09"
                personalFax1: "5008000"
                otherPhoneAreaCode1: "09"
                otherPhone1: "5009000"
                otherMobile: "61900900900"
                otherFirstName: Harold
                otherLastName: Wickman
                otherTitle: Mr
                companyName: Whispir
                jobTitle: Software Engineer
                division: Technology
                businessUnit: Core Platform
                department: Research & Development
                teamName1: Optimus Prime
                teamName2: Bumblebee
                role1: Administrator
                role2: Analyst
                link:
                - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/user'
      description: User endpoint response
      headers:
        Content-Type:
          $ref: '#/components/headers/User-Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          description: The URI to fetch details of the resource.
          example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/users/747AB7E716C1802B6476784AEB5C9BB8
          explode: false
          schema:
            type: string
          style: simple
    Users:
      content:
        application/vnd.whispir.user-v1+json:
          examples:
            Example:
              value:
                users:
                - id: 4DC922649AFE370C
                  firstName: John
                  lastName: Wick
                  companyName: Whispir
                  workEmailAddress1: testUser@example.com
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
                status: 1 to 8 of 8
                link:
                - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/getUsers_200_response'
      description: List users endpoint response
      headers:
        Content-Type:
          $ref: '#/components/headers/User-Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    Template:
      content:
        application/vnd.whispir.template-v1+json:
          examples:
            Example:
              value:
                id: ABD927D9E0F9A92
                messageTemplateName: Sample SMS Template
                messageTemplateDescription: Template to provide an example on whispir.io
                responseTemplateId: responseTemplateId
                subject: Test SMS Message
                body: This is the body of my test SMS message
                email:
                  body: This is the body of my email message.
                  footer: This is the footer of my message.
                  type: text/plain
                  resources:
                    attachments:
                    - attachmentName: TestIcon.png
                      attachmentDesc: MyPhoto
                      derefUri: iVBORw0KGgoAAAANSUhEUgAAABQAAAASCAIAAADUsmlHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMvSURBVDhPTVT5S1RhFD3fezOOOePTXHKriWgjsogWC1TSMuuHIFqoX0KsIIgSWwiq/6FFU8MKK6KyXYSKpkUKR4QMSSpCLQpyxHHUZpztzdu63xub5vKWj/fu+c6599z3mMfjSU9P13UdZoiCaLfZYQWiUGKq1WrBLEBDOBpWNTWeQyEIwvT0NAsEAgROPKXFxceNbQOtv4ShkKCkaZZ5kYU1Sw6dqT0NMTkLBIbf7zf+xaOuJzgG4RmyPyP/Kwq/oWAYeT+R6gYOofnmlUQmLQjI6JQkifasu368KdCQWwFEwBiYQOIgiDBETDFIORh/iZ0De55cehgXQJIphce9d/ebJhuyV0P3QY9Cj/HDUKhseIPomP/CW2QYB42nSx+db76YUM9IusPhYHVM2g5Bpo5xNuIkZibCF8On0oGVjhWabmR8EBx5GDuHaItsy0zhzA6bo/H5ZSyDMQ1d4YQa0Sqc1hdAe3E7IYkqp9tiUcHGkXIQZ8+fm+k5uXK3/46YAV3mMMLEt/BHUJ1Vua9oH+WV9ayLyLpVhRYFkT8d4mUzRuI0DAcHmQngSLrGoBJ/GC/L31JSy/cm91ifXTcboYDJGLX+1kI6WS3AQFSRCUDvwhGEwubiD1yVLkLKWuxoT50kzGwab6Ru6HIsahpiwTybkwTLU9iUU1Ezf394CmuyV20p2kLg8mcbRHLLxGimLlWFFMpMc6TRFlx29aJqePBgx4M3u7tubb1dMXfjw6rHhOwb+/jhV3+qNtMFKspQEZnA+oxSPr9UdjgUllV59pHZhSUFI/We5AnMv5o7bvhsFu5f3DlmR7ATr/a+rtq2mVulqEqmlFlbUuv5MbqudW0C7PrhGpvwidRhIoyXqiHoRam/tGrT5n9Wmfcb9TfmBOf0DXy80H0h/uKU6yQRcqlmk+mji0RhbbN2XOpAygzF/9nmfp4oc4+4y6vLqRnuUTdsfNqYFRop/4JFw4t723qz52YlZpvPd/K30vm+03nAie1ADXAYOADsgHOXs/laix7RkzMJyJJ/BjQ09lQ7me8f9/cP9nsnvemzpOIFy3PzclkK0wyNgvDEHP8Z/AXQ58rAz69IBAAAAABJRU5ErkJggg==
                voice:
                  header: "This is the introduction, read out to the recipient prior\
                    \ to any key press."
                  body: "This is the body of the voice call, read out after the key\
                    \ press"
                  type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
                web:
                  body: This is the content of my web publishing or Rich Push Message
                  type: text/plain
                social:
                  social:
                  - id: social
                    body: Facebook Content
                    type: text/plain
                type: defaultNoReply
                features:
                  pushOptions:
                    notifications: enabled
                    escalationMins: "3"
                    appId: appId
                dlr:
                  period: ""
                  rule: ""
                  type: ""
                  publishToWeb: false
                  expiryDay: 0
                  expiryHour: 0
                  expiryMin: 0
                  feedIds: ""
                  bool: false
                link:
                - uri: https://api.au.whispir.com/workspaces/618CAD33669AD31A/templates/3148356543415EE7
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
                tags: internal
          schema:
            $ref: '#/components/schemas/template'
      description: Template endpoint response.
      headers:
        Content-Type:
          $ref: '#/components/headers/Template-Content-Type'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          description: The URI to fetch details of the resource.
          example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/templates/747AB7E716C1802B6476784AEB5C9BB8
          explode: false
          schema:
            type: string
          style: simple
    "400BadRequest":
      content:
        application/json:
          examples:
            Example:
              value:
                errorSummary: Your request was malformed and could not be processed
                  by the server. Please try again
                errorText: Bad Request
                errorDetail: "java.io.EOFException: No content to map to Object due\
                  \ to end of input"
          schema:
            $ref: '#/components/schemas/getMessages_400_response'
      description: |-
        Invalid or missing request parameters.

        Inspect the request parameters and ensure that all required parameters are supplied.

        Note the error text in the response and update the request accordingly.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "401Unauthorized":
      content:
        application/json:
          examples:
            Example:
              value:
                links: []
                errorSummary: Your username and password combination was incorrect.
                  Please check your authentication details and try again
                errorText: Unauthorized
                errorDetail: ""
          schema:
            $ref: '#/components/schemas/getMessages_401_response'
      description: |-
        Invalid or no credentials passed in the request.

        Inspect the authorisation header and ensure that a valid authentication has been provided.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "403Forbidden":
      content:
        application/json:
          examples:
            Example:
              value:
                message: Forbidden
          schema:
            $ref: '#/components/schemas/getMessages_403_response'
      description: |-
        Authorisation credentials passed and accepted but the account doesn't have permission.

        * Inspect the authorisation header and ensure that a valid authentication has been provided.
        * Returned when HTTP is used instead of HTTPS.
        * Returned when invalid API key is used.
        * Returned when you have tried to make more API calls than your allowed quota (QPS). Refer to API rate limits.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "404NotFound":
      content:
        application/json:
          examples:
            Example:
              value:
                errorSummary: The resource that you have requested does not exist.
                  Please check the identifier and try again
                errorText: Not Found
                errorDetail: ""
                link: []
          schema:
            $ref: '#/components/schemas/getMessages_404_response'
      description: "The requested URL doesn't exist.\n\nThe requested resource was\
        \ not found. Inspect the ID in the URL that was used and ensure that it's\
        \ valid.\n\nAlso, inspect the Accept and Content-Type headers that are being\
        \ used to make sure they’re correct for the URL that is being requested."
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "415UnsupportedMediaType":
      content:
        application/json:
          examples:
            Example:
              value:
                errorSummary: "The media type you have supplied in the request does\
                  \ not match any of the available on the server. Please check the\
                  \ documentation for the correct media-type definitions, or contact\
                  \ support@whispir.com to determine what media-type you should be\
                  \ using"
                errorText: Unsupported Media Type
                errorDetail: "javax.ws.rs.NotSupportedException: Cannot consume content\
                  \ type"
          schema:
            $ref: '#/components/schemas/getMessages_415_response'
      description: "The request was unsuccessful because the requested content type\
        \ is not supported by the API.\n\nThe application client can use this response\
        \ to determine if it's asking for a supported version of a resource. On receiving\
        \ this response, the client can query the developer documentation to determine\
        \ the appropriate version for the requested resource.\n\nIn most cases, this\
        \ is due to the user not supplying the correct Accept or Content-Type header\
        \ for the requested URL."
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "422UnprocessibleEntity":
      content:
        application/json:
          examples:
            Example:
              value:
                errorSummary: "Your request did not contain all of the information\
                  \ required to perform this method. Please check your request for\
                  \ the required fields to be passed in and try again. Alternatively,\
                  \ contact your administrator or support@whispir.com for more information"
                errorText: "A Template name already exists in the current Workspace,\
                  \ please select another name and try again.\n"
                errorDetail: ""
                link: []
          schema:
            $ref: '#/components/schemas/getMessages_422_response'
      description: "The request is formed correctly but due to some condition it can’\
        t be processed. For example, email is required and it's not provided in the\
        \ request.\n\nThe request did not contain all the information required to\
        \ perform this method. Check your request for the required fields to be passed\
        \ in and try again. The offending fields will be specified in the error text\
        \ of the response."
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "500InternalServerError":
      content:
        application/json:
          examples:
            Example:
              value:
                message: Internal Server Error
          schema:
            $ref: '#/components/schemas/getMessages_500_response'
      description: |-
        An internal error occurred when processing the request.

        Attempt the request again and if the HTTP 500 error re-occurs contact the Whispir Support Team.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    Callback:
      content:
        application/vnd.whispir.api-callback-v1+json:
          examples:
            Callback object:
              value:
                id: 4452AC8359535C46
                name: Callback Name
                url: https://example.com/callback
                auth:
                  type: queryparam
                  key: string
                contentType: json
                removeHTML: disabled
                retriesEnabled: true
                email: me@example.com
                callbacks:
                  reply: disabled
                  undeliverable: disabled
                link:
                - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/callback'
      description: The Callback object
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          description: The URI to fetch details of the resource.
          example: https://api.au.whispir.com/callbacks/747AB7E716C1802B6476784AEB5C9BB8
          explode: false
          schema:
            type: string
          style: simple
    "501MethodNotImplemented":
      content:
        application/json:
          examples:
            Example:
              value:
                errorSummary: "The method that you have tried to use is not implemented\
                  \ for this resource. Please check the documentation, or contact\
                  \ your administrator. Alternatively you can get further information\
                  \ by contacting support@whispir.com"
                errorText: Not Implemented
                errorDetail: ""
                link: []
          schema:
            $ref: '#/components/schemas/getMessages_501_response'
      description: |-
        The HTTP method being used has not yet been implemented for the requested resource.

        The method being used is not implemented for this resource. Check the documentation for the specific resource type.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "405MethodNotAllowed":
      content:
        application/json:
          examples:
            Example:
              value:
                errorSummary: The method that you have tried to use is not allowed
                  for this resource
                errorText: Method Not Allowed
                errorDetail: ""
                link: []
          schema:
            $ref: '#/components/schemas/getMessages_405_response'
      description: |-
        The requested resource doesn't support the supplied verb.

        Inspect the HTTP method that was used in the request and ensure that it's valid for the resource being requested.
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    "413EntityTooLarge":
      content:
        application/json:
          examples:
            Example:
              value: HTTP content length exceeded 10485760 bytes.
          schema:
            description: The request length error message.
            enum:
            - HTTP content length exceeded 10485760 bytes.
            type: string
      description: |-
        The request payload was too large.

        The maximum allowable request size is 10MB (10485760 bytes).
      headers:
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    CallbackCalls:
      content:
        application/vnd.whispir.api-call-v1+json:
          examples:
            Example:
              value:
                calls:
                - id: C96962B74DC57EF30F00E7097AC81A45
                  messageId: 8D12688BFCC21BD51174C833F9BC9B9D
                  status: SUCCESS
                  messageLocation: string
                  from:
                    name: John Wick
                    mri: support@whispir.com
                    mobile: "6140099499"
                    voice: string
                    email: string
                  responseMessage:
                    channel: sms
                    acknowledged: string
                    undeliverable: string
                    content: string
                  callback:
                    id: string
                    name: string
                    url: string
                    attemptedDate: string
                    statusCode: 200
                    statusMessage: string
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
                status: 1 to 8 of 8
                link:
                - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/getCallbackCalls_200_response'
      description: Example response
      headers:
        Content-Type:
          $ref: '#/components/headers/CallbackCall-Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    Contact:
      content:
        application/vnd.whispir.contact-v1+json:
          examples:
            Example:
              value:
                firstName: John
                lastName: Wick
                workMobilePhone1: "61400400400"
                workEmailAddress1: testUser@example.com
                workCountry: Australia
                timezone: Australia/Melbourne
                title: Dr
                workMobilePhone2: "61500500500"
                workEmailAddress2: newUser@example.com
                workPhoneAreaCode1: "09"
                workPhone1: "5006000"
                workPhoneAreaCode2: "09"
                workPhone2: "5007000"
                workFaxAreaCode1: "09"
                workFax1: "5008000"
                workSatellitePhone: "61600600600"
                workOtherPhone: "61700700700"
                workAddress1: Level 15
                workAddress2: 360 Collins St
                workSuburb: Melboure
                workState: Victoria
                workPostCode: "3000"
                workPostalAddress1: Level 15
                workPostalAddress2: 360 Collins St
                workPostalSuburb: Melboure
                workPostalState: Victoria
                workPostalPostCode: "3000"
                personalEmailAddress1: personalPrimaryUser@example.com
                personalEmailAddress2: personalSecondaryUser@example.com
                personalAddress1: Level 15
                personalAddress2: 360 Collins St
                personalSuburb: Melboure
                personalState: Victoria
                personalPostCode: "3000"
                personalCountry: Australia
                personalPhoneAreaCode1: "09"
                personalPhone1: "5006000"
                personalPhoneAreaCode2: "09"
                personalPhone2: "5007000"
                personalFaxAreaCode1: "09"
                personalFax1: "5008000"
                otherPhoneAreaCode1: "09"
                otherPhone1: "5009000"
                otherMobile: "61900900900"
                otherFirstName: Harold
                otherLastName: Wickman
                otherTitle: Mr
                status: A
                companyName: Whispir
                jobTitle: Software Engineer
                division: Technology
                businessUnit: Core Platform
                department: Research & Development
                teamName1: Optimus Prime
                teamName2: Bumblebee
                role1: Administrator
                role2: Analyst
                locations:
                - latitude: 41.9028
                  longitude: -12.4964
                  type: CurrentLocation
                messagingoptions:
                - channel: sms
                  enabled: true
                  primary: WorkMobilePhone1
                  secondary: WorkMobilePhone1
                  tertiary: WorkMobilePhone1
                type: PROJECT
                mri: "61400400400"
                devices: []
                link:
                - uri: https://api.au.whispir.com/workspaces/673A8E38D34BBF0C/contacts/47F08A08482A5AA40F5A99CE69FB0C16
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
                lastModifiedTime: 2022-03-29T16:30:18+11:00
          schema:
            $ref: '#/components/schemas/contact'
      description: Example response
      headers:
        Content-Type:
          $ref: '#/components/headers/Contact-Content-Type'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          description: The URI to fetch details of the resource.
          example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/contacts/747AB7E716C1802B6476784AEB5C9BB8
          explode: false
          schema:
            type: string
          style: simple
    Contacts:
      content:
        application/vnd.whispir.contact-v1+json:
          examples:
            Example:
              value:
                status: 1 to 8 of 8
                contacts:
                - firstName: John
                  lastName: Wick
                  workMobilePhone1: "61400400400"
                  workEmailAddress1: testUser@example.com
                  workCountry: Australia
                  timezone: Australia/Melbourne
                  title: Dr
                  workMobilePhone2: "61500500500"
                  workEmailAddress2: newUser@example.com
                  workPhoneAreaCode1: "09"
                  workPhone1: "5006000"
                  workPhoneAreaCode2: "09"
                  workPhone2: "5007000"
                  workFaxAreaCode1: "09"
                  workFax1: "5008000"
                  workSatellitePhone: "61600600600"
                  workOtherPhone: "61700700700"
                  workAddress1: Level 15
                  workAddress2: 360 Collins St
                  workSuburb: Melboure
                  workState: Victoria
                  workPostCode: "3000"
                  workPostalAddress1: Level 15
                  workPostalAddress2: 360 Collins St
                  workPostalSuburb: Melboure
                  workPostalState: Victoria
                  workPostalPostCode: "3000"
                  personalEmailAddress1: personalPrimaryUser@example.com
                  personalEmailAddress2: personalSecondaryUser@example.com
                  personalAddress1: Level 15
                  personalAddress2: 360 Collins St
                  personalSuburb: Melboure
                  personalState: Victoria
                  personalPostCode: "3000"
                  personalCountry: Australia
                  personalPhoneAreaCode1: "09"
                  personalPhone1: "5006000"
                  personalPhoneAreaCode2: "09"
                  personalPhone2: "5007000"
                  personalFaxAreaCode1: "09"
                  personalFax1: "5008000"
                  otherPhoneAreaCode1: "09"
                  otherPhone1: "5009000"
                  otherMobile: "61900900900"
                  otherFirstName: Harold
                  otherLastName: Wickman
                  otherTitle: Mr
                  status: A
                  companyName: Whispir
                  jobTitle: Software Engineer
                  division: Technology
                  businessUnit: Core Platform
                  department: Research & Development
                  teamName1: Optimus Prime
                  teamName2: Bumblebee
                  role1: Administrator
                  role2: Analyst
                  locations:
                  - latitude: 41.9028
                    longitude: -12.4964
                    type: CurrentLocation
                  messagingoptions:
                  - channel: sms
                    enabled: true
                    primary: WorkMobilePhone1
                    secondary: WorkMobilePhone1
                    tertiary: WorkMobilePhone1
                  type: PROJECT
                  mri: "61400400400"
                  devices: []
                  link:
                  - uri: https://api.au.whispir.com/workspaces/673A8E38D34BBF0C/contacts/47F08A08482A5AA40F5A99CE69FB0C16
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
          schema:
            $ref: '#/components/schemas/getContacts_200_response'
      description: Example response
      headers:
        Content-Type:
          $ref: '#/components/headers/Contact-Content-Type'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    Workspace:
      content:
        application/vnd.whispir.workspace-v1+json:
          examples:
            example-1:
              value:
                id: 70F2492146292826
                projectName: A Space Odessey
                projectNumber: "2001"
                status: A
                billingcostcentre: Hollywood
                link:
                - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/workspace'
      description: Example workspace object response
      headers:
        Content-Type:
          $ref: '#/components/headers/Workspace-Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          $ref: '#/components/headers/Location'
    Workspaces:
      content:
        application/vnd.whispir.workspace-v1+json:
          examples:
            example-1:
              value:
                workspaces:
                - id: 70F2492146292826
                  projectName: A Space Odessey
                  projectNumber: "2001"
                  status: A
                  billingcostcentre: Hollywood
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
                status: "status: 1 to 1 of 1"
          schema:
            $ref: '#/components/schemas/getWorkspaces_200_response'
      description: Example of a list of workspaces response
      headers:
        Content-Type:
          $ref: '#/components/headers/Workspace-Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    Resource:
      content:
        application/vnd.whispir.resource-v1+json:
          examples:
            example-1:
              value:
                id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
                name: sample.json
                scope: private
                mimeType: application/json
                derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
                link:
                - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/resource'
      description: Resource endpoint response
      headers:
        Content-Type:
          $ref: '#/components/headers/Resource-Content-Type'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          $ref: '#/components/headers/Location'
    Resources:
      content:
        application/vnd.whispir.resource-v1+json:
          examples:
            example-1:
              value:
                status: 1 to 2 of 2
                resources:
                - id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
                  name: sample.json
                  scope: private
                  mimeType: application/json
                  derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
          schema:
            $ref: '#/components/schemas/getResources_200_response'
      description: List of resources
      headers:
        Content-Type:
          $ref: '#/components/headers/Resource-Content-Type'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
    DistributionList:
      content:
        application/vnd.whispir.distributionlist-v1+json:
          examples:
            Example Static DL:
              value:
                id: B27ABC9D8E98A9B
                name: My Distribution List
                description: string
                access: Open
                visibility: Public
                contactIds: string
                userIds: string
                distListIds: string
                type: static
            Example Dyanmic DL:
              value:
                id: B27ABC9D8E98A9B
                name: My Distribution List
                description: ""
                access: Open
                visibility: Public
                contactIds: ""
                userIds: ""
                distListIds: ""
                type: static
          schema:
            $ref: '#/components/schemas/postDistributionLists_request'
      description: Example workspace object response
      headers:
        Content-Type:
          $ref: '#/components/headers/Workspace-Content-Type'
        Content-Length:
          $ref: '#/components/headers/DistributionList-Content-Type'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          $ref: '#/components/headers/Location'
    DistributionLists:
      content:
        application/vnd.whispir.distributionlist-v1+json:
          examples:
            Example Dynamic Distribution List:
              value:
                distributionLists:
                - id: 5AFEB61102963D7
                  name: My Distribution List
                  mri: My_Distribution_List.company_name@list.company.whispir.sg
                  description: string
                  memberCount: "4"
                  access: Open
                  visibility: Public
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
                  distListIds: string
                  distlistdetails:
                  - id: 123ADAB420493B83
                    name: John Smith
                    type: User
                    link:
                    - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                      rel: self
                      method: GET
                      host: api.au.whispir.com
                      port: -1
                status: 1 to 1 of 1
                link:
                - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/getDistributionLists_200_response'
      description: List distribution lists response
      headers:
        Content-Type:
          $ref: '#/components/headers/Workspace-Content-Type'
        Content-Length:
          $ref: '#/components/headers/DistributionList-Content-Type'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          $ref: '#/components/headers/Location'
    CustomLists:
      content:
        application/vnd.whispir.customlist-v1+json:
          examples:
            custom lists response example:
              value:
                status: string
                customlabels:
                - id: 4B4625BAEB7E4D58
                  name: Day of Week
                  type: MESSAGE
                  createdDate: 09/06/15 10:18
                  sortType: As Displayed
                  linked: enabled
                  link:
                  - uri: https://api.au.whispir.com/customlists/4B4625BAEB7E4D58
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
          schema:
            $ref: '#/components/schemas/getCustomLists_200_response'
      description: Example response
      headers:
        Content-Type:
          $ref: '#/components/headers/CustomList-Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          $ref: '#/components/headers/Location'
    CustomList:
      content:
        application/vnd.whispir.customlist-v1+json:
          examples:
            custom list response example:
              value:
                id: 4B4625BAEB7E4D58
                name: Day of Week
                type: MESSAGE
                createdDate: 09/06/15 10:18
                sortType: As Displayed
                linked: enabled
                customlabellists:
                - name: Internal Systems
                  value: Internal Systems
                - name: External Systems
                  value: External Systems
                - name: Infrastructure
                  value: Infrastructure
                link:
                - uri: https://api.au.whispir.com/customlists/4B4625BAEB7E4D58
                  rel: self
                  method: GET
                  host: api.au.whispir.com
                  port: -1
          schema:
            $ref: '#/components/schemas/customList'
      description: Example responses
      headers:
        Content-Type:
          $ref: '#/components/headers/CustomList-Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Expires:
          $ref: '#/components/headers/Expires'
        Location:
          $ref: '#/components/headers/Location'
    Events:
      content:
        application/vnd.whispir.event-v1+json:
          examples:
            Events response example:
              value:
                events:
                - id: string
                  eventLabel: 2701095 - Outage of Local Systems in Sydney
                  status: Open
                  eventFormList:
                  - formName: Metro Event
                    eventFieldList:
                    - name: string
                      value: string
                  link:
                  - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
                    rel: self
                    method: GET
                    host: api.au.whispir.com
                    port: -1
                status: 1 to 2 of 2
          schema:
            $ref: '#/components/schemas/getEvents_200_response'
      description: List of events response example
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Expires:
          $ref: '#/components/headers/Expires'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
    Event:
      content:
        application/vnd.whispir.event-v1+json:
          examples:
            example-1:
              value:
                id: 421FEEBA93GF53A2
                eventLabel: 2701095 - Outage of Local Systems in Sydney
                status: Active
                eventFormList:
                - formName: MetroEvent
                  eventFieldList:
                  - name: summary
                    value: Outage of systems in Sydney
                  - name: location
                    value: "0.0,0.0"
                  - name: description
                    value: "ATMs are non responsive, teams to be sent to investigate."
                  - name: status
                    value: Open
                  - name: category
                    value: Internal
                  - name: startDate
                    value: 11/09/2019 00:00:00
                  - name: actionOwner1
                    value: John Wick
                  - name: actionDetails1
                    value: investigation to take place asap.
                  - name: actionDate1
                    value: 11/09/2019 00:00:00
                  - name: severity
                    value: Severity 3 - Minor Outage (Some Service Degradation)
                link:
                - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
                  host: https://api.au.whispir.com
                  port: -1
                  rel: self
                  method: GET
                - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
                  host: https://api.au.whispir.com
                  port: -1
                  rel: self
                  method: PUT
                  type: "application/vnd.whispir.event-v1+xml,application/vnd.whispir.event-v1+json"
                - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/messages?label=2701095%20-%20Outage%20of%20Local%20Systems%20in%20Sydney
                  host: https://api.au.whispir.com
                  port: -1
                  rel: retrieveEventMessages
                  method: GET
          schema:
            $ref: '#/components/schemas/event'
      description: Example Event response
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Expires:
          $ref: '#/components/headers/Expires'
        Cache-Control:
          $ref: '#/components/headers/Cache-Control'
        Content-Length:
          $ref: '#/components/headers/Content-Length'
        Content-Type:
          $ref: '#/components/headers/Content-Type'
        Location:
          $ref: '#/components/headers/Location'
  schemas:
    message:
      additionalProperties: false
      description: |
        Whispir has a maximum API request payload size of 10MB. Whispir will reject the request if the payload is any bigger. This payload size limit should be adhered to when creatin the message payload.
      example:
        to: "61400400400"
        subject: Test Message
        body: This is the body of my test SMS message
      properties:
        to:
          description: "Allows a combination of phone numbers, email address, Whispir\
            \ Contact MRIs, User MRI, Distribution List MRI, separated by `,`.\n\n\
            Whispir will pick the relevant recipients based on the channels provided\
            \ in the request payload \n(including template information).\n\nThe maximum\
            \ payload size rule applies.\n\nWhen used for bulk messages, this field\
            \ is optional, as bulk messages has another model to specify the `to`\
            \ field recipients.\n"
          example: "61400400400"
          maxLength: 10000
          type: string
        subject:
          description: "The message subject. This is common for both SMS and Email\
            \ channels.\n\nRead `body` notes on limits.\n\nThe maximum payload size\
            \ rule applies.\n\nWhen used for templates, this field is optional."
          example: Test Message
          maxLength: 1570
          type: string
        body:
          description: "The SMS body.\n\nThe maximum payload size rule applies.\n\n\
            IMPORTANT: The total SMS length is 1570 characters for english text and\
            \ 800 when UTF-8 characters are used (primarily non-english)\n\nThe 1570\
            \ length is a combination of subject and body."
          example: This is the body of my SMS message
          maxLength: 1570
          type: string
        email:
          $ref: '#/components/schemas/email'
        voice:
          $ref: '#/components/schemas/voice'
        web:
          $ref: '#/components/schemas/web'
        social:
          $ref: '#/components/schemas/social'
        type:
          default: default
          description: "Allows the user to modify the message behaviour for replies\
            \ and DLRs (delivery receipts).\n\n- `defaultNoReply`: Used to reject\
            \ any replies to this message.\n- `noDlr`: Used to specify that DLRs should\
            \ not be enabled for this message."
          enum:
          - default
          - defaultNoReply
          - noDlr
          type: string
        features:
          $ref: '#/components/schemas/features'
        resource:
          $ref: '#/components/schemas/resource'
        messageTemplateId:
          description: "The identifier for the Message Template. Specification of\
            \ this attribute is preferred over the `messageTemplateName`, to provide\
            \ an absolute and non-changing reference to the Message Template."
          example: BACEB8D46BEF5315
          type: string
        messageTemplateName:
          description: A human-readable name for the Message Template.
          example: Sample SMS Template
          minLength: 1
          type: string
        callbackId:
          description: The identifier for the Callback to be invoked on Message delivery
            events.
          example: myCallbackName
          type: string
        callbackParameters:
          description: Set of key-value pairs that you can attach to a callback. This
            can be useful for returning additional information about the object in
            a structured format.
          type: object
        label:
          description: "A label to tag the message, useful for grouped viewing and\
            \ filtering in the UI and via API `GET /messages?label=example`.\n\n**IMPORTANT**:\
            \ When this label is used, Whispir Reporting ignores the “Category” labels\
            \ tied to the messages. Please ensure you are using this as per your business\
            \ needs and such usage does not affect the reports generated via the \"\
            Category\" grouping."
          example: sample
          maxLength: 48
          type: string
        eventId:
          description: The identifier for the Event to trigger.
          example: 2EE7FEA3343662BE
          maxLength: 48
          type: string
        messageType:
          description: "The type of message, used to enable message scheduling."
          enum:
          - SCHEDULED
          type: string
        scheduleType:
          description: "The schedule type, used to enable single or repeated message\
            \ scheduling."
          enum:
          - ONCE
          - REPEAT
          type: string
        scheduleDate:
          description: "For `ONCE` scheduled messages, specifies the date to trigger\
            \ the single delivery. For `REPEATED` scheduled messages, the time at\
            \ which the first of them will be sent."
          example: 14/02/2019 15:55
          pattern: "\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}"
          type: string
        repetitionCount:
          default: 1
          description: Specifies how many times the scheduled message will be sent
            to the recipient.
          example: 10
          type: number
        repeatDays:
          description: The interval in days between each scheduled message repetition.
          example: 1
          type: number
        repeatHrs:
          description: The interval in hours between each scheduled message repetition.
          example: 2
          type: number
        repeatMin:
          description: The interval in minutes between each scheduled message repetition.
          example: 20
          type: number
        from:
          description: The message sender's Whispir User MRI.
          example: testUser@User.whispir.com
          readOnly: true
          type: string
        direction:
          description: The direction of the sent message.
          enum:
          - OUTGOING
          readOnly: true
          type: string
        responseCount:
          description: Details the responses received for the sent message across
            all channels. Refer to `/messageresponses` to get the detailed response
            data.
          example: "0"
          readOnly: true
          type: string
        createdTime:
          description: "Epoch time (refers to Unix TimeStamp format starting Jan 1,\
            \ 1970) denoting the time the message was sent. For bulk messages and\
            \ messages with multiple recipients this value is tied to the timestamp\
            \ when the message was received and processed by Whispir."
          example: 1647467664000
          readOnly: true
          type: number
        whatsappValidMessage:
          description: The validity of the WhatsApp channel message.
          readOnly: true
          type: boolean
        validBody:
          description: The validity of the message body.
          readOnly: true
          type: boolean
        validSubject:
          description: The validity of the message subject.
          readOnly: true
          type: boolean
        dlr:
          $ref: '#/components/schemas/dlr'
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - subject
      - to
      title: Message
      type: object
      xml:
        name: message
        prefix: ns2
      x-examples:
        SMS:
          to: "61400400400"
          subject: Test Message
          body: This is the body of my test SMS message
        Email:
          to: test@test.com
          subject: Test Message
          email:
            body: This is the body of my test Email message
            footer: This is the footer of my message
            type: text/plain
      x-tags:
      - Messages
    email:
      description: "The email channel payload, used when sending an email Message.\n\
        \nNot required when a template is provided."
      example:
        footer: This is the footer of my message.
        resources:
          attachments:
          - attachmentDesc: My photo
            derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
            attachmentName: TestIcon.png
          - attachmentDesc: My photo
            derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
            attachmentName: TestIcon.png
        body: This is the body of my email message.
        type: text/plain
      properties:
        body:
          description: The email message body.
          example: This is the body of my email message.
          type: string
        footer:
          description: Plain text or html displayed at the bottom of your email message.
          example: This is the footer of my message.
          type: string
        type:
          default: text/plain
          description: The email Message content type.
          enum:
          - text/plain
          - text/html
          type: string
        resources:
          $ref: '#/components/schemas/email_resources'
      required:
      - body
      title: Email
      type: object
      xml:
        name: email
      x-examples:
        Email:
          body: This is the body of my test Email message
          footer: This is the footer of my message
          type: text/plain
        Email with attachment:
          body: This is the body of my test Email message
          footer: This is the footer of my message
          type: text/html
          resources:
            attachments:
            - attachmentName: sample.json
              attachmentDesc: Sample
              derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
      x-tags:
      - Messages
    voice:
      description: "The voice channel payload, used when sending a Message.\n\nCalls\
        \ are charged in 30 seconds intervals (rounded up).\n\nText max length is\
        \ 5000 characters.\n\nThe maximum payload size rule applies for the body,\
        \ header and type usage.\n\n<!-- theme: info -->\n\n> #### Requirements\n\
        >\n> In order to use this functionality your account must be enabled to use\
        \ the Voice module. If you're unsure whether you can use Voice, please contact\
        \ the Whispir Support Team.\n\n---\n\n### Overview\n\nWhispir’s API provides\
        \ you with the ability to send a voice message to any landline phone or mobile\
        \ phone around the world, both via text-to-speech and custom WAV files to\
        \ be played over the phone\n\nWhispir’s Voice module can easily connect all\
        \ recipients to a single bridged call, simplifying your teleconferences and\
        \ ensuring your message gets through\n\nEach voice call is made up of three\
        \ parts:\n\n- Message introduction: Either Text-To-Speech (TTS) or a WAV file\n\
        - Message acceptance: Asks the recipient to press a button or insert a PIN\
        \ to hear the message\n- Message content: The concatenation of the message\
        \ subject and message body. The latter can be either TTS or a WAV file. At\
        \ the end the recipient will be given the possibility to acknowledge the message.\n\
        <!-- theme: info -->\n\n> #### Adding pauses\n>\n> Pauses can be added to\
        \ conference call details using the `+` character. Each `+` represents 1 second.\
        \ Pauses allow some wait time to ensure the conference call service is ready\
        \ to accept the account number and PIN.\n\n### WAV files requirements\n\n\
        WAV files can be used in place of Text-To-Speech to provide a custom `header`\
        \ and `body`.\n\nBefore a WAV file can be used for the Voice module, it needs\
        \ to conform to certain criteria:\n\n- All the WAV files combined must not\
        \ exceed 10 MB in total file size\n- All the WAV files must be a maximum of\
        \ 8 bit, 8000 Hz, 1ch, 64 kbps\n- If a WAV file is outside these criteria\
        \ please use TTS instead"
      example:
        other: ""
        footer: ""
        header: "This is the introduction, read out to the recipient prior to any\
          \ key press."
        resources:
          attachment:
          - attachmentDesc: My photo
            derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
            attachmentName: TestIcon.png
          - attachmentDesc: My photo
            derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
            attachmentName: TestIcon.png
        body: "This is the body of the voice call, read out after the key press"
        type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
      properties:
        header:
          description: Introduction text played with the subject.
          example: "This is the introduction, read out to the recipient prior to any\
            \ key press."
          type: string
        body:
          description: "Body text, read out to the recipient after the subject and\
            \ header."
          example: "This is the body of the voice call, read out after the key press"
          type: string
        type:
          default: "Pin:,ConfCall:,ConfAccountNo:,ConfPinNo:,ConfModPinNo:"
          description: "The conference call details of the voice message. Required\
            \ when no conference call is being used. The minimum string to be used\
            \ is specified in the example. Read the following section for information\
            \ on each field.\n\nThe following parameters can be set by specifying\
            \ the value after the `:` in the `type` string:\n\n| Field         | Description\
            \ |\n| ------------- |------------ |\n| Pin           | The access code\
            \ required to be inserted from the recipient to hear the Voice message\
            \ after the \"header\" is over. It can be left blank and then the user\
            \ will be asked to proceed dialling \"1\". <br><br> For example, `7171`.\
            \ <br><br> If the right code is inserted then \"subject\" and \"body\"\
            \ of the Voice Message will be reproduced. The user will be able to dial\
            \ \"1\" to replay the message, \"2\" to join the conference call or \"\
            3\" to receive the details to dial in later. <br><br> In this last case\
            \ the details - a Dial-In number and a PIN - will be repeated 3 times.\
            \ |\n| ConfCall      | The teleconference line that will be used in the\
            \ voice call. <br><br> For example, `1800123123`. <br><br> It is possible\
            \ to reference this value in other channels using the **@@teleconf_number@@**\
            \ custom variable. |\n| ConfAccountNo | The teleconference account or\
            \ room number that is used in the voice call. <br><br> For example, `098711234`.\
            \ <br><br> It is possible to reference this value in other channels using\
            \ the **@@teleconf_account@@** custom variable. |\n| ConfPinNo     | The\
            \ teleconference room PIN that is used in the voice call. <br><br> For\
            \ example, `8181`. <br><br> It is possible to reference this value in\
            \ other channels using the **@@teleconf_pin@@** custom variable. |\n|\
            \ ConfModPinNo  | The teleconference moderator PIN that is used in the\
            \ voice call. <br><br> For example, `4242`. <br><br> It is possible to\
            \ reference this value in other channels using the **@@teleconf_mod_pin@@**\
            \ custom variable. |"
          example: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
          type: string
        footer:
          description: Read-only property returned from the Whispir Platform. This
            property has no meaning to the API consumer.
          enum:
          - ""
          readOnly: true
          type: string
        other:
          description: Read-only property returned from the Whispir Platform. This
            property has no meaning to the API consumer.
          enum:
          - ""
          readOnly: true
          type: string
        resources:
          $ref: '#/components/schemas/voice_resources'
      required:
      - body
      - type
      title: Voice
      type: object
      xml:
        name: voice
      x-examples:
        Text-To-Speech (TTS):
          header: "This is the introduction, read out to the recipient prior to any\
            \ key press."
          body: "This is the body of the voice call, read out after the key press"
          type: "Pin:,ConfCall:,ConfAccountNo:,ConfPinNo:,ConfModPinNo:"
        TTS with conference:
          header: "This is the introduction, read out to the recipient prior to any\
            \ key press."
          body: "This is the body of the voice call, read out after the key press"
          type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
        WAV:
          header: ""
          body: ""
          type: "Pin:,ConfCall:,ConfAccountNo:,ConfPinNo:,ConfModPinNo:"
          resources:
            attachment:
            - attachmentName: MessageHeader.wav
              attachmentDesc: voiceintro.wav
              derefUri: base64_uri_data
            - attachmentName: MessageBody.wav
              attachmentDesc: voicebody.wav
              derefUri: base64_uri_data
      x-tags:
      - Messages
    web:
      description: "The web channel payload, used when attaching web content to a\
        \ Message.\n\nNot required when a template is provided."
      example:
        body: This is the content of my web publishing or Rich Push Message
        type: text/plain
      properties:
        body:
          description: The linked web content body.
          example: This is the content of my web publishing or Rich Push Message
          type: string
        type:
          default: text/plain
          description: The web Message content type.
          enum:
          - text/plain
          - text/html
          type: string
      title: Web
      type: object
      xml:
        name: web
      x-tags:
      - Messages
      x-examples:
        Web:
          body: This is the content of my web publishing or Rich Push Message
          type: text/plain
    social:
      description: Whispir can publish content to your Twitter and Facebook walls.
        Other socials can be made available upon request.
      example:
        social:
        - id: social
          body: Facebook Content
          type: text/plain
        - id: social
          body: Facebook Content
          type: text/plain
      properties:
        social:
          description: The list of social channel content.
          items:
            $ref: '#/components/schemas/social_social_inner'
          type: array
      title: Social
      type: object
      xml:
        name: social
      x-tags:
      - Messages
      x-examples:
        Twitter:
          social:
          - id: social
            body: Twitter Content
            type: text/plain
        Facebook:
          social:
          - id: social_long
            body: Facebook Content
            type: text/plain
    features:
      description: "### Push Messaging\n\nWhispir allows you to send push notifications\
        \ to any iOS and Android-based apps\n\nSetting up the platform to handle push\
        \ notifications involves some one-time steps and some periodically repeated\
        \ steps (updating push tokens). See Apps to get a clear understanding of the\
        \ related steps and endpoints. Whispir doesn't support sending push notifications\
        \ to device tokens directly. Read more in Contact devices about how to register\
        \ the device tokens under contacts.\n\n### Message Aliasing\n\nThe Whispir\
        \ UI allows you to configure a sender alias from which messages are sent.\
        \ Instructions for alias creation can be found in [Configure message aliases](https://au.whispir.com/onlinehelp/Content/Topics-whispir-ua/administration/alias-manager/config-message-aliases.htm)\
        \ within Whispir documentation.\n\nThe message alias can be attached to a\
        \ message to template, to configure the the sender for the following channels:\n\
        * SMS - a custom mobile number, e.g. +61 123 456 789\n* Email - a custom email\
        \ address, e.g. marketing@example.com\n* Voice - a custom mobile number, e.g.\
        \ +61 123 456 789"
      example:
        pushOptions:
          fcm:
            androidChannelId: my_app_notification_channel_id
            image: https://mycompany.com/sales/campaign.png
            sound: /res/raw/notification_sound.wav
            action: campaign_action
          escalationMins: "3"
          data: "{}"
          appId: app342983
          apns:
            sound: Library/Sounds/alert_sound.wav
            action: campaign_action
          priority: NORMAL
          notifications: enabled
        aliasOption:
          aliasName: Marketing
      properties:
        pushOptions:
          $ref: '#/components/schemas/features_pushOptions'
        aliasOption:
          $ref: '#/components/schemas/features_aliasOption'
      title: Features
      type: object
      xml:
        name: features
      x-tags:
      - Messages
      x-examples:
        Escalation:
          pushOptions:
            escalationMins: 3
        Notifications:
          pushOptions:
            notifications: enabled
        Message Alias:
          aliasOption:
            aliasName: Marketing
        Push Message:
          pushOptions:
            notifications: enabled
            escalationMins: "3"
            appId: "2342345"
            priority: NORMAL
            fcm:
              androidChannelId: campaign-app-push-notification-channel-1
              sound: /res/raw/alert_sound.wav
              action: campaign_intent
              image: https://mycompany.com/sales/campaign.png
            apns:
              sound: Library/Sounds/alert_sound.wav
              action: campaign_action
            data:
              custom-image: https://mycompany.com/sales/ad.png
              custom-video: https://mycompany.com/sales/ad.mp4
              custom-link: https://ad-campaign-feedback/id
              custom-gif: https://ad-campaign-resources/2022/campaign.gif
              updated-title: New Campaign Title
    resource:
      description: "When you’re creating a resource, the following conditions apply:\n\
        \n- Maximum of 10 MB per file being uploaded\n- Transactions have an enforced\
        \ timeout\n- Resources are available in the Whispir platform for a limited\
        \ time [90 days]. After this time they are automatically cleaned. This is\
        \ a configurable setting for Whispir Administrators"
      example:
        scope: private
        name: sample.json
        derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
        mimeType: application/json
      properties:
        id:
          description: The identifier for the resource.
          example: 9B9E2425AAFEEE49E9D9112B6BAC22A9
          readOnly: true
          type: string
        name:
          description: Specifies the name of the file being uploaded. The extension
            of the file too is allowed to be present in the name.
          example: sample.json
          type: string
        scope:
          description: "Specifies the permission scope of the file being uploaded.\
            \ The scope defines the access restriction of the resource. It can only\
            \ be one of the following:\n\n- **public**: Public files have an addressable\
            \ URL and are available publicly\n- **private**: Private files have no\
            \ URL and are only available for bulk messaging purposes and for importing\
            \ contacts"
          enum:
          - private
          - public
          type: string
        mimeType:
          description: "The mime type of the file that is being uploaded. The type\
            \ is dependent on the scope of the resource.\n\n- **public**: Public files\
            \ can be any mimetype, e.g. text/HTML or text/CSV\n- **private**: Private\
            \ files are restricted to CSV, JSON and XML. The respective mimetypes\
            \ to be used are text/csv, application/json, application/xml"
          example: application/json
          type: string
        derefUri:
          description: The base64 representation of the file being submitted.
          example: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
          type: string
          writeOnly: true
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - derefUri
      - mimeType
      - name
      - scope
      title: Resource
      type: object
      xml:
        name: resource
        prefix: ns3
      x-tags:
      - Resources
      x-examples:
        JSON:
          name: sample.json
          scope: private
          mimeType: application/json
          derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
    template:
      description: The template object.
      example:
        voice:
          other: ""
          footer: ""
          header: "This is the introduction, read out to the recipient prior to any\
            \ key press."
          resources:
            attachment:
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
          body: "This is the body of the voice call, read out after the key press"
          type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
        social:
          social:
          - id: social
            body: Facebook Content
            type: text/plain
          - id: social
            body: Facebook Content
            type: text/plain
        subject: Test SMS Message
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        dlr:
          period: ""
          expiryHour: 0
          bool: true
          publishToWeb: true
          feedIds: ""
          rule: ""
          expiryDay: 0
          type: ""
          expiryMin: 0
        body: This is the body of my test SMS message
        type: defaultNoReply
        tags: campaign
        messageTemplateName: Sample SMS Template
        messageTemplateDescription: Template to provide an example on whispir.io
        features:
          pushOptions:
            fcm:
              androidChannelId: my_app_notification_channel_id
              image: https://mycompany.com/sales/campaign.png
              sound: /res/raw/notification_sound.wav
              action: campaign_action
            escalationMins: "3"
            data: "{}"
            appId: app342983
            apns:
              sound: Library/Sounds/alert_sound.wav
              action: campaign_action
            priority: NORMAL
            notifications: enabled
          aliasOption:
            aliasName: Marketing
        web:
          body: This is the content of my web publishing or Rich Push Message
          type: text/plain
        id: 7DB65E1D8853D1C8
        responseTemplateId: responseTemplateId
        email:
          footer: This is the footer of my message.
          resources:
            attachments:
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
          body: This is the body of my email message.
          type: text/plain
      properties:
        messageTemplateName:
          description: Specifies the name of the message template to be used within
            message requests.
          example: Sample SMS Template
          readOnly: true
          type: string
        messageTemplateDescription:
          description: Specifies the description of the message template for others
            to understand its purpose.
          example: Template to provide an example on whispir.io
          type: string
        responseTemplateId:
          description: Specifies the ID of the Response Rule that should be associated
            with this Message Template.
          example: responseTemplateId
          type: string
        subject:
          description: "Specifies the first line of the SMS message or Voice call,\
            \ and the subject of the Email message."
          example: Test SMS Message
          type: string
        body:
          description: Specifies the content of the SMS message.
          example: This is the body of my test SMS message
          type: string
        email:
          $ref: '#/components/schemas/email'
        voice:
          $ref: '#/components/schemas/voice'
        web:
          $ref: '#/components/schemas/web'
        social:
          $ref: '#/components/schemas/social'
        type:
          description: Allows the user to modify the message behaviour for replies
            and DLRs (delivery receipts)
          example: defaultNoReply
          type: string
        features:
          $ref: '#/components/schemas/features'
        dlr:
          $ref: '#/components/schemas/dlr'
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        tags:
          description: Information which helps to label related message templates
            together
          example: campaign
          readOnly: true
          type: string
        id:
          default: 7DB65E1D8853D1C8
          description: specifies the id of the message template
          example: 7DB65E1D8853D1C8
          readOnly: true
          type: string
      required:
      - body
      - messageTemplateName
      - subject
      title: Template
      type: object
      xml:
        name: template
        prefix: ns3
      x-tags:
      - Templates
      x-examples:
        Template:
          messageTemplateName: Sample SMS Template
          messageTemplateDescription: Template to provide an example on whispir.io
          responseTemplateId: responseTemplateId
          subject: Test SMS Message
          body: This is the body of my test SMS message
          email:
            body: This is the body of my email message.
            footer: This is the footer of my message.
            type: text/plain
            resources:
              attachments:
              - attachmentName: TestIcon.png
                attachmentDesc: MyPhoto
                derefUri: iVBORw0KGgoAAAANSUhEUgAAABQAAAASCAIAAADUsmlHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMvSURBVDhPTVT5S1RhFD3fezOOOePTXHKriWgjsogWC1TSMuuHIFqoX0KsIIgSWwiq/6FFU8MKK6KyXYSKpkUKR4QMSSpCLQpyxHHUZpztzdu63xub5vKWj/fu+c6599z3mMfjSU9P13UdZoiCaLfZYQWiUGKq1WrBLEBDOBpWNTWeQyEIwvT0NAsEAgROPKXFxceNbQOtv4ShkKCkaZZ5kYU1Sw6dqT0NMTkLBIbf7zf+xaOuJzgG4RmyPyP/Kwq/oWAYeT+R6gYOofnmlUQmLQjI6JQkifasu368KdCQWwFEwBiYQOIgiDBETDFIORh/iZ0De55cehgXQJIphce9d/ebJhuyV0P3QY9Cj/HDUKhseIPomP/CW2QYB42nSx+db76YUM9IusPhYHVM2g5Bpo5xNuIkZibCF8On0oGVjhWabmR8EBx5GDuHaItsy0zhzA6bo/H5ZSyDMQ1d4YQa0Sqc1hdAe3E7IYkqp9tiUcHGkXIQZ8+fm+k5uXK3/46YAV3mMMLEt/BHUJ1Vua9oH+WV9ayLyLpVhRYFkT8d4mUzRuI0DAcHmQngSLrGoBJ/GC/L31JSy/cm91ifXTcboYDJGLX+1kI6WS3AQFSRCUDvwhGEwubiD1yVLkLKWuxoT50kzGwab6Ru6HIsahpiwTybkwTLU9iUU1Ezf394CmuyV20p2kLg8mcbRHLLxGimLlWFFMpMc6TRFlx29aJqePBgx4M3u7tubb1dMXfjw6rHhOwb+/jhV3+qNtMFKspQEZnA+oxSPr9UdjgUllV59pHZhSUFI/We5AnMv5o7bvhsFu5f3DlmR7ATr/a+rtq2mVulqEqmlFlbUuv5MbqudW0C7PrhGpvwidRhIoyXqiHoRam/tGrT5n9Wmfcb9TfmBOf0DXy80H0h/uKU6yQRcqlmk+mji0RhbbN2XOpAygzF/9nmfp4oc4+4y6vLqRnuUTdsfNqYFRop/4JFw4t723qz52YlZpvPd/K30vm+03nAie1ADXAYOADsgHOXs/laix7RkzMJyJJ/BjQ09lQ7me8f9/cP9nsnvemzpOIFy3PzclkK0wyNgvDEHP8Z/AXQ58rAz69IBAAAAABJRU5ErkJggg==
          voice:
            header: "This is the introduction, read out to the recipient prior to\
              \ any key press."
            body: "This is the body of the voice call, read out after the key press"
            type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
          web:
            body: This is the content of my web publishing or Rich Push Message
            type: text/plain
          social:
            social:
            - id: social
              body: Facebook Content
              type: text/plain
          type: defaultNoReply
          features:
            pushOptions:
              notifications: enabled
              escalationMins: "3"
              appId: appId
          dlr:
            period: string
            publishToWeb: false
            rule: string
            expiryDay: 0
            expiryHour: 0
            expiryMin: 0
            feedIds: string
            bool: false
            type: string
          link:
          - uri: https://api.au.whispir.com/workspaces/618CAD33669AD31A/templates/3148356543415EE7
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
          tags: string
        Example-Email-only:
          messageTemplateName: Sample SMS Template
          messageTemplateDescription: Template to provide an example on whispir.io
          responseTemplateId: responseTemplateId
          subject: Test SMS Message
          body: This is the body of my test SMS message
          email:
            body: This is the body of my email message.
            footer: This is the footer of my message.
            type: text/plain
            resources:
              attachments:
              - attachmentName: TestIcon.png
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentDesc: My photo
          type: defaultNoReply
          dlr:
            period: ""
            rule: ""
            type: ""
            publishToWeb: true
            expiryDay: 0
            expiryHour: 0
            expiryMin: 0
            feedIds: ""
            bool: true
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
          tags: campaign
          id: 7DB65E1D8853D1C8
    responseTemplatePattern:
      description: "This object contains the responseTemplatePattern array, which\
        \ contains each of the response rule elements. More details on the configuration\
        \ of this object can be found below"
      example:
        colour: '#00947d'
        textPrompt: "YES"
        spokenVoicePrompt: to select YES
        name: Yes Rule
        pattern: startswith
        voicePrompt: "1"
      properties:
        name:
          description: The name of the response category. The same key is called `matchedCategory`
            when placed inside the `customParameters` of Callbacks payload
          example: Yes Rule
          type: string
        pattern:
          description: "Specifies the mechanism for matching the textPrompt\n\nThe\
            \ following options are available:\n- startsWith\n- contains\n- exactmatch\n\
            \nNOTE: none of them is case sensitive, so in the example above replying\
            \ \"YES\" or \"yes\" or \"Yes\" makes no difference"
          example: startswith
          type: string
        textPrompt:
          description: "Specifies the textual string that should be matched using\
            \ the pattern (specified above) within the email, SMS or web response"
          example: "YES"
          type: string
        voicePrompt:
          description: "The character (2–9, * or #) that the recipient of the voice\
            \ call should enter to select a response option\n\n**IMPORTANT**: please\
            \ do NOT use the key \"1\" because this is already reserved to repeat\
            \ the message"
          example: "1"
          type: string
        spokenVoicePrompt:
          description: The text-to-speech content that is dynamically read out when
            describing to the user what a particular response option is
          example: to select YES
          type: string
        colour:
          description: The hexadecimal colour code that is used in the Message Response
            Report to differentiate the groups of responses
          example: '#00947d'
          type: string
      required:
      - colour
      - name
      - pattern
      - spokenVoicePrompt
      - textPrompt
      - voicePrompt
      title: Response Template Pattern
      type: object
      xml:
        name: responseTemplatePattern
      x-tags:
      - Response Rules
      x-examples:
        Example:
          name: Yes Rule
          pattern: startswith
          textPrompt: "YES"
          voicePrompt: "1"
          spokenVoicePrompt: to select YES
          colour: '#00947d'
    responseRule:
      description: "Response Rules are useful when your Templates require the end-users\
        \ to select among known responses [for example, Yes/No, Accept/Decline or\
        \ ranking something from 1 to 5]\n\nUsing Response Rules in combination with\
        \ Templates allows you to automatically categorise any response to these messages\
        \ into different response groups for reporting purposes"
      example:
        responseTemplatePatterns:
          colour: '#00947d'
          textPrompt: "YES"
          spokenVoicePrompt: to select YES
          name: Yes Rule
          pattern: startswith
          voicePrompt: "1"
        name: Response Rule 1
        description: My Response Rule
      properties:
        name:
          description: Specifies the name of the response rule
          example: Response Rule 1
          type: string
        description:
          description: Specifies the description of the response rule for others to
            understand its purpose
          example: My Response Rule
          type: string
        responseTemplatePatterns:
          $ref: '#/components/schemas/responseTemplatePattern'
      required:
      - name
      - responseTemplatePatterns
      title: Response Rule
      type: object
      xml:
        name: responserule
        prefix: ns3
      x-tags:
      - Response Rules
      x-examples:
        Example:
          name: Response Rule 1
          description: My Response Rule
          responseTemplatePatterns:
            name: Yes Rule
            pattern: startswith
            textPrompt: "YES"
            voicePrompt: "1"
            spokenVoicePrompt: to select YES
            colour: '#00947d'
    contact:
      description: The contact object.
      example:
        personalSuburb: Melboure
        role1: Administrator
        businessUnit: Core Platform
        workEmailAddress1: testUser@example.com
        role2: Analyst
        workEmailAddress2: newUser@example.com
        workSatellitePhone: "61600600600"
        workSuburb: Melboure
        companyName: Whispir
        jobTitle: Software Engineer
        type: PROJECT
        workPostalAddress2: 360 Collins St
        workPostalAddress1: Level 15
        division: Technology
        workPostalState: Victoria
        workOtherPhone: "61700700700"
        otherMobile: "61900900900"
        personalFax1: "5008000"
        personalEmailAddress2: personalSecondaryUser@example.com
        personalEmailAddress1: personalPrimaryUser@example.com
        workPostCode: "3000"
        teamName2: Bumblebee
        devices:
        - ""
        - ""
        teamName1: Optimus Prime
        personalAddress2: 360 Collins St
        personalFaxAreaCode1: "09"
        personalAddress1: Level 15
        otherFirstName: Harold
        otherTitle: Mr
        workPhoneAreaCode1: "09"
        workAddress1: Level 15
        personalCountry: Australia
        workPhoneAreaCode2: "09"
        workAddress2: 360 Collins St
        firstName: John
        workPhone2: "5007000"
        workPhone1: "5006000"
        messagingoptions:
        - secondary: WorkMobilePhone1
          channel: sms
          tertiary: WorkMobilePhone1
          enabled: true
          primary: WorkMobilePhone1
        - secondary: WorkMobilePhone1
          channel: sms
          tertiary: WorkMobilePhone1
          enabled: true
          primary: WorkMobilePhone1
        otherPhone1: "5009000"
        status: A
        lastName: Wick
        lastModifiedTime: 2022-03-29T16:30:18+11:00
        timezone: Australia/Melbourne
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        personalState: Victoria
        otherPhoneAreaCode1: "09"
        workCountry: Australia
        title: Dr
        personalPhone2: "5007000"
        personalPhoneAreaCode2: "09"
        workState: Victoria
        personalPhone1: "5006000"
        personalPhoneAreaCode1: "09"
        workPostalPostCode: "3000"
        workPostalSuburb: Melboure
        department: Research & Development
        mri: "61400400400"
        workFax1: "5008000"
        workFaxAreaCode1: "09"
        workMobilePhone2: "61500500500"
        workMobilePhone1: "61400400400"
        otherLastName: Wickman
        locations:
        - latitude: 41.9028
          type: CurrentLocation
          longitude: -12.4964
        - latitude: 41.9028
          type: CurrentLocation
          longitude: -12.4964
        personalPostCode: "3000"
      properties:
        firstName:
          description: The first name of the contact.
          example: John
          type: string
        lastName:
          description: The last name of the contact.
          example: Wick
          type: string
        workMobilePhone1:
          description: The primary work mobile number of the contact.
          example: "61400400400"
          type: string
        workEmailAddress1:
          description: The primary work email address of the contact.
          example: testUser@example.com
          type: string
        workCountry:
          description: The work country of the contact.
          example: Australia
          type: string
        timezone:
          description: "The time zone in which the contact lives in. Values are relative\
            \ to GMT.\n\nSupported values are:\n\n* Offset from GMT in the format\
            \ `+/-NN`. For example, `+10`.\n* Worldwide time zone in the format `Country/City`.\
            \ For example, `Australia/Melbourne`\n\nSee the list of [worldwide time\
            \ zones](https://en.wikipedia.org/wiki/List_of_time_zones_by_country)."
          example: Australia/Melbourne
          type: string
        title:
          description: The title to address the contact with.
          example: Dr
          type: string
        workMobilePhone2:
          description: The secondary work mobile number of the contact.
          example: "61500500500"
          type: string
        workEmailAddress2:
          description: The secondary work email address of the contact.
          example: newUser@example.com
          type: string
        workPhoneAreaCode1:
          description: The primary work phone number area code of the contact.
          example: "09"
          type: string
        workPhone1:
          description: The primary work phone number of the contact.
          example: "5006000"
          type: string
        workPhoneAreaCode2:
          description: The secondary work phone number area code of the contact.
          example: "09"
          type: string
        workPhone2:
          description: The secondary work phone number of the contact.
          example: "5007000"
          type: string
        workFaxAreaCode1:
          description: The work fax number area code of the contact.
          example: "09"
          type: string
        workFax1:
          description: The work fax number of the contact.
          example: "5008000"
          type: string
        workSatellitePhone:
          description: The work satellite phone number of the contact.
          example: "61600600600"
          type: string
        workOtherPhone:
          description: The work other phone number of the contact.
          example: "61700700700"
          type: string
        workAddress1:
          description: The first work address line of the contact.
          example: Level 15
          type: string
        workAddress2:
          description: The second work address line of the contact.
          example: 360 Collins St
          type: string
        workSuburb:
          description: The work address suburb of the contact.
          example: Melboure
          type: string
        workState:
          description: The work address state of the contact.
          example: Victoria
          type: string
        workPostCode:
          description: The work address post code of the contact.
          example: "3000"
          type: string
        workPostalAddress1:
          description: The first work postal address line of the contact.
          example: Level 15
          type: string
        workPostalAddress2:
          description: The second work postal address line of the contact.
          example: 360 Collins St
          type: string
        workPostalSuburb:
          description: The work postal address suburb of the contact.
          example: Melboure
          type: string
        workPostalState:
          description: The work postal address state of the contact.
          example: Victoria
          type: string
        workPostalPostCode:
          description: The work postal address post code of the contact.
          example: "3000"
          type: string
        personalEmailAddress1:
          description: The primary personal email address of the contact.
          example: personalPrimaryUser@example.com
          type: string
        personalEmailAddress2:
          description: The secondary personal email address of the contact.
          example: personalSecondaryUser@example.com
          type: string
        personalAddress1:
          description: The first personal address line of the contact.
          example: Level 15
          type: string
        personalAddress2:
          description: The second personal address line of the contact.
          example: 360 Collins St
          type: string
        personalSuburb:
          description: The personal address suburb of the contact.
          example: Melboure
          type: string
        personalState:
          description: The personal address state of the contact.
          example: Victoria
          type: string
        personalPostCode:
          description: The personal address post code of the contact.
          example: "3000"
          type: string
        personalCountry:
          description: The personal address country of the contact.
          example: Australia
          type: string
        personalPhoneAreaCode1:
          description: The primary personal phone number area code of the contact.
          example: "09"
          type: string
        personalPhone1:
          description: The primary personal phone number of the contact.
          example: "5006000"
          type: string
        personalPhoneAreaCode2:
          description: The secondary personal phone number area code of the contact.
          example: "09"
          type: string
        personalPhone2:
          description: The secondary personal phone number of the contact.
          example: "5007000"
          type: string
        personalFaxAreaCode1:
          description: The personal fax number area code of the contact.
          example: "09"
          type: string
        personalFax1:
          description: The personal fax number of the contact.
          example: "5008000"
          type: string
        otherPhoneAreaCode1:
          description: The other phone number area code of the contact.
          example: "09"
          type: string
        otherPhone1:
          description: The other phone number of the contact.
          example: "5009000"
          type: string
        otherMobile:
          description: The other mobile number of the contact.
          example: "61900900900"
          type: string
        otherFirstName:
          description: The other first name of the contact.
          example: Harold
          type: string
        otherLastName:
          description: The other last name of the contact.
          example: Wickman
          type: string
        otherTitle:
          description: The other title to address the contact with.
          example: Mr
          type: string
        status:
          description: "The validity status of the contact, either `A`ctive or `D`isabled."
          enum:
          - A
          - D
          type: string
        companyName:
          description: The company name of the contact.
          example: Whispir
          type: string
        jobTitle:
          description: The job title of the contact.
          example: Software Engineer
          type: string
        division:
          description: The division in the company to which the contact is associated.
          example: Technology
          type: string
        businessUnit:
          description: The business unit in the company to which the contact is associated.
          example: Core Platform
          type: string
        department:
          description: The department in the company to which the contact is associated.
          example: Research & Development
          type: string
        teamName1:
          description: The primary team name of the contact.
          example: Optimus Prime
          type: string
        teamName2:
          description: The secondary team name of the contact.
          example: Bumblebee
          type: string
        role1:
          description: The primary role of the contact.
          example: Administrator
          type: string
        role2:
          description: The secondary role of the contact.
          example: Analyst
          type: string
        locations:
          description: The locations for the contact.
          items:
            $ref: '#/components/schemas/locations_inner'
          title: Locations
          type: array
          xml:
            name: locations
          x-examples:
            One Location:
            - location:
                latitude: 41.9028
                longitude: -12.4964
                type: CurrentLocation
            Multiple Locations:
            - location:
                latitude: 41.9028
                longitude: -12.4964
                type: CurrentLocation
            - location:
                latitude: 41.5825
                longitude: -12.3842
                type: Work
            - location:
                latitude: 41.7262
                longitude: -12.4726
                type: Home
          x-tags:
          - Contacts
        messagingoptions:
          description: The message channel options for the contact.
          items:
            $ref: '#/components/schemas/messagingoptions_inner'
          title: Messaging Options
          type: array
          x-tags:
          - Contacts
        type:
          description: |-
            - PROJECT - for Contacts stored in a User-defined workspace
            - COMPANY - for Contacts stored in the default workspace
          enum:
          - PROJECT
          - COMPANY
          readOnly: true
          type: string
        mri:
          description: Specifies the Message Resource Identifier of the Contact in
            Whispir
          example: "61400400400"
          readOnly: true
          type: string
        devices:
          description: Specifies the devices associated to this contact. See Contact
            Devices for more details about it
          items: {}
          readOnly: true
          type: array
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        lastModifiedTime:
          description: Last Modified data and time
          example: 2022-03-29T16:30:18+11:00
          readOnly: true
          type: string
      required:
      - firstName
      - lastName
      - timezone
      - workCountry
      - workEmailAddress1
      - workMobilePhone1
      title: Contact
      type: object
      xml:
        name: contact
        prefix: ns2
      x-tags:
      - Contacts
      x-examples:
        Basic:
          firstName: John
          lastName: Wick
          workMobilePhone1: "61400400400"
          workEmailAddress1: testUser@example.com
          workCountry: Australia
          timezone: Australia/Melbourne
        Comprehensive:
          firstName: John
          lastName: Wick
          workMobilePhone1: "61400400400"
          workEmailAddress1: testUser@example.com
          workCountry: Australia
          timezone: Australia/Melbourne
          title: Dr
          workMobilePhone2: "61500500500"
          workEmailAddress2: newUser@example.com
          workPhoneAreaCode1: "09"
          workPhone1: "5006000"
          workPhoneAreaCode2: "09"
          workPhone2: "5007000"
          workFaxAreaCode1: "09"
          workFax1: "5008000"
          workSatellitePhone: "61600600600"
          workOtherPhone: "61700700700"
          workAddress1: Level 15
          workAddress2: 360 Collins St
          workSuburb: Melboure
          workState: Victoria
          workPostCode: "3000"
          workPostalAddress1: Level 15
          workPostalAddress2: 360 Collins St
          workPostalSuburb: Melboure
          workPostalState: Victoria
          workPostalPostCode: "3000"
          personalEmailAddress1: personalPrimaryUser@example.com
          personalEmailAddress2: personalSecondaryUser@example.com
          personalAddress1: Level 15
          personalAddress2: 360 Collins St
          personalSuburb: Melboure
          personalState: Victoria
          personalPostCode: "3000"
          personalCountry: Australia
          personalPhoneAreaCode1: "09"
          personalPhone1: "5006000"
          personalPhoneAreaCode2: "09"
          personalPhone2: "5007000"
          personalFaxAreaCode1: "09"
          personalFax1: "5008000"
          otherPhoneAreaCode1: "09"
          otherPhone1: "5009000"
          otherMobile: "61900900900"
          otherFirstName: Harold
          otherLastName: Wickman
          otherTitle: Mr
          status: A
          companyName: Whispir
          jobTitle: Software Engineer
          division: Technology
          businessUnit: Core Platform
          department: Research & Development
          teamName1: Optimus Prime
          teamName2: Bumblebee
          role1: Administrator
          role2: Analyst
          locations:
          - latitude: 41.9028
            longitude: -12.4964
            type: CurrentLocation
          messagingoptions:
          - channel: sms
            enabled: true
            primary: WorkMobilePhone1
            secondary: WorkMobilePhone1
            tertiary: WorkMobilePhone1
    distributionlist:
      description: "Static Distribution Lists are manually managed and maintained.\
        \ They can include Contacts, Users and other Distribution Lists"
      properties:
        id:
          description: |
            ID of the distribution list
          example: 5AFEB61102963D7
          readOnly: true
          type: string
        name:
          description: "Specifies the name of the distribution list. This has to be\
            \ unique, and should not contain any special characters (except spaces)\
            \ in it"
          example: My Distribution List
          type: string
        mri:
          description: Specifies the Message Resource Identifier of the Distribution
            List in Whispir
          example: My_Distribution_List.company_name@list.company.whispir.sg
          readOnly: true
          type: string
        description:
          description: Specifies a description for other users to see what this distribution
            list should be used for.
          example: My Distribution list
          type: string
        memberCount:
          description: Total number of contacts in a Distribution List
          example: "4"
          type: string
        access:
          description: "Allows you to specify the access type for this DL\n\n- Open:\
            \ anyone can subscribe to this distribution list via the Whispir Contact\
            \ Portal\n- ByApproval: anyone can subscribe using the Whispir Contact\
            \ Portal. However, they are not officially on the list until their access\
            \ is approved\n- Restricted: the distribution list is not visible in the\
            \ Whispir Contact Portal"
          example: Open
          type: string
        visibility:
          description: "Allows you to specify the visibility for this DL\n\n- Public:\
            \ Any user or active contact in any workspace can map themselves to this\
            \ DL in the Whispir Contact Portal\n- Private: Only users or active contacts\
            \ in the current workspace can map themselves to this DL"
          example: Public
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        contactIds:
          description: Comma separated list of Contacts to be associated to this DL.
            This information can be provided at the time of the DL creation or updated
            later via a PUT request
          example: 3A21DCC420494A48
          type: string
          writeOnly: true
        userIds:
          description: Comma separated list of userIds who can manage this DL. This
            information can be provided at the time of the DL creation or also later
            updated via a PUT request
          example: 3A21DCC420494A48
          type: string
          writeOnly: true
        distListIds:
          description: Comma separated list of Distribution List IDs that can be nested
            under this DL. This information can be provided at the time of the DL
            creation or later updated via a PUT request
          example: "3A21DCC420494A48, 07172DC9AC3E97A75B5A41536C132CA0"
          type: string
        type:
          default: static
          description: "Allows you to specify the type for this DL\n\n- Static: The\
            \ contacts on the list don’t change unless you manually add or remove\
            \ them (unlike a dynamic DL)\n\nNOTE: \"static\" is also the default value\
            \ for this parameter when this field is omitted"
          example: static
          type: string
          writeOnly: true
        distlistdetails:
          description: Details of Contacts included in the Distribution List
          items:
            $ref: '#/components/schemas/distributionlist_distlistdetails_inner'
          readOnly: true
          type: array
      required:
      - name
      title: Static Distribution List
      type: object
      xml:
        name: distributionlists
        prefix: ns1
      x-tags:
      - Distribution Lists
      x-examples:
        Example Request:
          name: My Distribution List
          description: string
          access: Open
          visibility: Public
          contactIds: string
          userIds: string
          distListIds: string
          type: static
        Example Response:
          id: 5AFEB61102963D7
          name: My Distribution List
          mri: My_Distribution_List.company_name@list.company.whispir.sg
          description: string
          memberCount: "4"
          access: Open
          visibility: Public
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
    dynamicdistributionlist:
      description: "Dynamic Distribution Lists are lists that are updated based on\
        \ rules to automatically determine and update the members. For this reason\
        \ - unlike the Static Distribution Lists - we don't need to specify any members\
        \ because only the rule[s] will determine the members of a Dynamic Distribution\
        \ List"
      properties:
        name:
          description: "Specifies the name of the distribution list. This has to be\
            \ unique, and should not contain any special characters (except spaces)\
            \ in it"
          example: My Distribution List
          type: string
        description:
          description: Specifies a description for other users to see what this distribution
            list should be used for.
          example: My Distribution list
          type: string
        access:
          description: "Allows you to specify the access type for this DL\n\n- Open:\
            \ anyone can subscribe to this distribution list via the Whispir Contact\
            \ Portal\n- ByApproval: anyone can subscribe using the Whispir Contact\
            \ Portal. However, they are not officially on the list until their access\
            \ is approved\n- Restricted: the distribution list is not visible in the\
            \ Whispir Contact Portal"
          example: Open
          type: string
        type:
          default: static
          description: "Allows you to specify the type for this DL\n\n- Static: The\
            \ contacts on the list don’t change unless you manually add or remove\
            \ them (unlike a dynamic DL)\n\nNOTE: \"static\" is also the default value\
            \ for this parameter when this field is omitted"
          example: static
          type: string
          writeOnly: true
        entityType:
          description: The value is currently strictly limited to "contact"
          example: Contact
          type: string
        visibility:
          description: "Allows you to specify the visibility for this DL\n\n- Public:\
            \ Any user or active contact in any workspace can map themselves to this\
            \ DL in the Whispir Contact Portal\n- Private: Only users or active contacts\
            \ in the current workspace can map themselves to this DL"
          example: Public
          type: string
        rules:
          description: "The array that specify the rules that should be applied on\
            \ the entityType values to pick the appropriate contacts at the moment\
            \ of usage [not creation]\n\nEach rule is an object with 3 keys in it.\
            \ At least one rule must be specified when creating a Dynamic Distribution\
            \ List\n\n- ruleFilter: contains any of the contact profile elements that\
            \ are available for searching. For example, division, department, role.\
            \ More details on the values for this field can be found below [required]\n\
            - ruleFilterActualName: Contains the matching string to be compared for\
            \ the DL. More details on the the values for this field can be found below\
            \ [required]\n- ruleContent: Contains the matching string to be compared\
            \ with the contact element for being a part of the DL [required]"
          example: "[{\"ruleFilter\" : \"division\", \"ruleFilterActualName\" : \"\
            Division\", \"ruleContent\" : \"sales\"}]"
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - access
      - entityType
      - name
      - rules
      - type
      - visibility
      title: Dynamic Distribution List
      type: object
      xml:
        name: dynamicdistributionlist
        prefix: ns1
      x-tags:
      - Distribution Lists
      x-examples:
        Example Request:
          name: My Distribution List
          description: My Distribution list
          access: Open
          entityType: Contact
          visibility: Public
          rules: "[{\"ruleFilter\" : \"division\", \"ruleFilterActualName\" : \"Division\"\
            , \"ruleContent\" : \"sales\"}]"
        Example Response:
          name: My Dynamic DistributionList
          description: My Distribution list
          access: Open
          type: dynamic
          entityType: Contact
          visibility: Public
          rules:
          - ruleFilter: role1
            ruleFilterActualName: Role
            ruleContent: Product
          link:
          - uri: https://api.au.whispir.com/workspaces/5E89F4525738D415/distributionlists/CFEC689151534251
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
    scenario:
      description: "Scenarios allows you to simplify the message delivery process\
        \ through automated, one-click communications."
      example:
        voice:
          other: ""
          footer: ""
          header: "This is the introduction, read out to the recipient prior to any\
            \ key press."
          resources:
            attachment:
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
          body: "This is the body of the voice call, read out after the key press"
          type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
        allowedUserIds: 4DC922649AFE370C
        web:
          body: This is the content of my web publishing or Rich Push Message
          type: text/plain
        social:
          social:
          - id: social
            body: Facebook Content
            type: text/plain
          - id: social
            body: Facebook Content
            type: text/plain
        subject: Fire Evacuation
        name: Fire Evacuation Block A
        description: Fire evacuation notification for A block residents
        to: "61400400400"
        label: fire-evacuation
        allowedUsers: SELECTEDUSERS
        message:
          to: "61400400400"
          subject: Test Message
          body: This is the body of my test SMS message
        email:
          footer: This is the footer of my message.
          resources:
            attachments:
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
            - attachmentDesc: My photo
              derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
              attachmentName: TestIcon.png
          body: This is the body of my email message.
          type: text/plain
      properties:
        name:
          description: Specifies the name of the scenario
          example: Fire Evacuation Block A
          type: string
        description:
          description: Specifies the description of the scenario
          example: Fire evacuation notification for A block residents
          type: string
        allowedUsers:
          description: "Specifies the usage permission - 1)EVERYONE 2)SELECTEDUSERS\
            \ When SELECTEDUSERS is provided, then `allowedUserIds` shall contain\
            \ the userID of the allowed users."
          enum:
          - EVERYONE
          - SELECTEDUSERS
          example: SELECTEDUSERS
          type: string
        allowedUserIds:
          description: Specifies the comma separated list of users who can run this
            scenario.Only contains value when the allowedUsers is set to `SELECTEDUSERS`
          example: 4DC922649AFE370C
          type: string
        message:
          $ref: '#/components/schemas/message'
        to:
          description: Specifies the phone number or MRI or distribution list to which
            the message has to be sent
          example: "61400400400"
          type: string
        subject:
          description: Specifies the subject of the message
          example: Fire Evacuation
          type: string
        label:
          description: Specifies the label for the message (to view during reporting)
          example: fire-evacuation
          type: string
        email:
          $ref: '#/components/schemas/email'
        voice:
          $ref: '#/components/schemas/voice'
        web:
          $ref: '#/components/schemas/web'
        social:
          $ref: '#/components/schemas/social'
      required:
      - description
      - message
      - name
      title: Scenario
      type: object
      xml:
        name: scenario
        prefix: ns2
      x-tags:
      - Scenarios
      x-examples:
        example-1:
          name: Fire Evacuation Block A
          description: Fire evacuation notification for A block residents
          allowedUsers: EVERYONE
          allowedUserIds: 4DC922649AFE370C
          message:
            to: "61400400400"
            subject: Test Message
            body: This is the body of my test SMS message
          to: "61400400400"
          subject: Fire Evacuation
          label: fire-evacuation
          email:
            body: This is the body of my email message.
            footer: This is the footer of my message.
            type: text/plain
          voice:
            header: "This is the introduction, read out to the recipient prior to\
              \ any key press."
            body: "This is the body of the voice call, read out after the key press"
            type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
            footer: ""
            other: ""
            resources:
              attachment:
              - attachmentName: TestIcon.png
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentDesc: My photo
          web:
            body: This is the content of my web publishing or Rich Push Message
            type: text/plain
          social:
            social:
            - id: social
              body: Facebook Content
              type: text/plain
    callback:
      description: "The callback object, used to configure the callback (also known\
        \ as webhook)."
      example:
        retriesEnabled: true
        auth:
          type: basicauth
          key: test34
        name: Callback Name
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        callbacks:
          undeliverable: disabled
          reply: disabled
        removeHTML: disabled
        id: 4452AC8359535C46
        contentType: json
        url: https://example.com/callback
        email: me@example.com
      properties:
        id:
          description: "The id of the callback. \n\nThis is the value that should\
            \ be passed when referring to the callback using the API endpoints"
          example: 4452AC8359535C46
          maxLength: 32
          readOnly: true
          type: string
        name:
          description: "The name of the callback. \n\nThis is the value that should\
            \ be passed in the message payload for triggering the callbacks"
          example: Callback Name
          maxLength: 50
          type: string
        url:
          description: Specifies the service URL that API Callbacks should be forwarded
            to.
          example: https://example.com/callback
          format: uri
          type: string
        auth:
          $ref: '#/components/schemas/callbackAuth'
        contentType:
          description: Specifies the content type that should be sent to this endpoint.
          enum:
          - json
          - xml
          type: string
        removeHTML:
          default: disabled
          description: Specifies whether HTML should be stripped from responses.
          enum:
          - enabled
          - disabled
          type: string
        retriesEnabled:
          default: false
          description: Specifies whether Whispir should perform retries in the event
            there is a failure accessing the callback service.
          example: true
          type: boolean
        email:
          description: "Whispir notify this email address that a callback has failed\
            \ (only when retries are disabled). \n\nThe email will contain the details\
            \ of the callback content."
          example: me@example.com
          format: email
          maxLength: 64
          type: string
        callbacks:
          $ref: '#/components/schemas/callback_callbacks'
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - auth
      - callbacks
      - contentType
      - email
      - name
      - removeHTML
      - retriesEnabled
      - url
      title: Callback
      type: object
      xml:
        name: companyapicallback
        prefix: ns2
      x-tags:
      - Callbacks
      x-examples:
        Callback object example:
          id: 4452AC8359535C46
          name: Callback Name
          url: https://example.com/callback
          auth:
            type: basicauth
            key: test34
          contentType: json
          removeHTML: disabled
          retriesEnabled: false
          email: me@example.com
          callbacks:
            reply: disabled
            undeliverable: disabled
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
    workspace:
      description: "Workspaces allow application developers to create new work areas\
        \ for the varying use cases of their application. For example they can be\
        \ associated to the different business units of a company, so to silo the\
        \ data of the different departments. In fact, the information, assets, contacts\
        \ and actions performed in a workspace can’t be accessed from another one.\
        \ This allows the applications to be independent and audited effectively with\
        \ proper permissions and keys.\n\nEach of these work areas provides different\
        \ functionalities - such as creating messages, executing scenarios or viewing\
        \ distribution lists - and can be governed by user permissions. Users can\
        \ be assigned access to these workspaces to restrict the control of information\
        \ as needed.\n\nEvery account on creation is given a default workspace called\
        \ \"My Company\" but it is possible to create multiple workspaces suited for\
        \ each application need. There is no limit on the number of workspaces."
      example:
        billingcostcentre: Hollywood
        projectNumber: "2001"
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        id: 70F2492146292826
        projectName: A Space Odessey
        status: A
      properties:
        id:
          description: Specifies the ID for the workspace that has been created
          example: 70F2492146292826
          readOnly: true
          type: string
        projectName:
          description: Specifies the name of the Workspace to be created.
          example: A Space Odessey
          type: string
        projectNumber:
          description: Specifies the reference ID for the workspace from the User
            Side. Generally not used. Note:This is not the actual workspace ID. It
            is just a custom reference ID given by you for your own purposes.
          example: "2001"
          type: string
        status:
          description: Specifies the status of the Workspace being created. The status
            can be one of - 1) Active (A) 2)Disabled (D)
          example: A
          type: string
        billingcostcentre:
          description: Only applicable to customers with the Billing Cost Centre Module
            enabled. Allows the user to set a billing cost centre for the Workspace.
          example: Hollywood
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - projectName
      - status
      title: Workspace
      type: object
      xml:
        name: workspace
        prefix: ns3
      x-tags:
      - Workspaces
      x-examples:
        example-1:
          id: 70F2492146292826
          projectName: A Space Odessey
          projectNumber: "2001"
          status: A
          billingcostcentre: Hollywood
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
    callbackAuth:
      description: "The authentication model details. You will receive - \n\nFor `queryparam`\n\
        - `?Auth={{KeyValue}}`\n\nFor `httpheader`\n- `X-Whispir-Callback-Key: {{KeyValue}}`\n\
        \nFor `basicauth`\n- `Authorization: Basic {{KeyValue}}`\n\nFor `bearertoken`\n\
        - `Authorization: Bearer {{KeyValue}}`"
      example:
        type: basicauth
        key: test34
      properties:
        type:
          default: queryparam
          description: The type of authentication allowed by Whispir at the Destination
            URL
          enum:
          - queryparam
          - httpheader
          - basicauth
          - bearertoken
          example: basicauth
          type: string
        key:
          description: The value that will be passed with the authentication key
          example: test34
          maxLength: 128
          type: string
      required:
      - key
      - type
      title: Callback Auth
      type: object
      x-examples:
        example-1:
          type: queryparam
          key: test34
      x-tags:
      - Callbacks
    locations:
      description: The locations for the contact.
      items:
        $ref: '#/components/schemas/locations_inner'
      title: Locations
      type: array
      xml:
        name: locations
      x-examples:
        One Location:
        - location:
            latitude: 41.9028
            longitude: -12.4964
            type: CurrentLocation
        Multiple Locations:
        - location:
            latitude: 41.9028
            longitude: -12.4964
            type: CurrentLocation
        - location:
            latitude: 41.5825
            longitude: -12.3842
            type: Work
        - location:
            latitude: 41.7262
            longitude: -12.4726
            type: Home
      x-tags:
      - Contacts
    messagingoptions:
      description: The message channel options for the contact.
      items:
        $ref: '#/components/schemas/messagingoptions_inner'
      title: Messaging Options
      type: array
      x-tags:
      - Contacts
    activity:
      description: "Activities are all the individual changes, tasks, calls, messages\
        \ and so on performed in a given company workspace."
      example:
        module: Conversation
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        action: Create
        description: Logged out
        workspaceName: Company
        time: 03/08/22 15:17
        fullname: Whispir User
        user: whispir user
        status: Successful
      properties:
        user:
          description: ' The username of the person who performed this activity. This
            will usually be the API user invoking the creation.'
          example: whispir user
          type: string
        time:
          description: The date and time of the activity in the format:dd/mm/yy hh:mm.
            This will be defaulted to the time at which this activity is created.
          example: 03/08/22 15:17
          type: string
        action:
          description: Specifies the action performed during this activity.
          enum:
          - Create
          - Update
          - Move
          - Copy
          - Draft
          - Send
          - Modified
          - Delete
          - Contact Import File
          - Login
          - Approve
          - Reject
          - Dispatch
          - Register
          - Accept
          - Closed
          - Map
          - Un-map
          - Logout
          example: Create
          type: string
        description:
          description: The description of the activity. This is a free text that details
            about the activity.
          example: Logged out
          type: string
        status:
          description: Specifies the status of the activity.
          example: Successful
          type: string
        module:
          description: Specifies the module to which this activity belongs to.
          enum:
          - System
          - Message
          - Scheduled Message
          - User
          - Contact
          - Distribution List
          - Template
          - Workspace
          - Event
          - WebService
          - Settings
          - Conversation
          - Gateway
          - Workspace Mapping
          - Folders
          - Team
          - RSS
          - API Mapping
          - Asset
          - Instruction
          example: Conversation
          type: string
        workspaceName:
          description: The workspace in which this activity is performed. This will
            usually be the API user’s default workspace
          example: Company
          type: string
        fullname:
          description: Fullname of the user
          example: Whispir User
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      title: Activity
      type: object
      x-examples:
        example-1:
          user: user
          time: 03/08/22 23:04
          action: Logout
          description: Logged out
          status: Successful
          module: System
          workspaceName: Company
          fullname: Whispir Admin
          link:
          - uri: https://api.au.whispir.com/activities/0A398CFDB9DAB7FC
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
          - uri: https://api.au.whispir.com/activities/0A398CFDB9DAB7FC
            rel: addActivityDetail
            method: POST
            type: "application/vnd.whispir.activity-v1+json,application/vnd.whispir.activity-v1+xml"
            host: api.au.whispir.com
            port: -1
      x-tags:
      - Activities
    user:
      description: The user object.
      example:
        personalSuburb: Melboure
        role1: Administrator
        businessUnit: Core Platform
        workEmailAddress1: testUser@example.com
        role2: Analyst
        workEmailAddress2: newUser@example.com
        workSatellitePhone: "61600600600"
        workSuburb: Melboure
        companyName: Whispir
        jobTitle: Software Engineer
        workPostalAddress2: 360 Collins St
        workPostalAddress1: Level 15
        division: Technology
        password: string
        workPostalState: Victoria
        workOtherPhone: "61700700700"
        otherMobile: "61900900900"
        personalFax1: "5008000"
        id: 4DC922649AFE370C
        personalEmailAddress2: personalSecondaryUser@example.com
        personalEmailAddress1: personalPrimaryUser@example.com
        workPostCode: "3000"
        teamName2: Bumblebee
        teamName1: Optimus Prime
        personalAddress2: 360 Collins St
        personalFaxAreaCode1: "09"
        personalAddress1: Level 15
        otherFirstName: Harold
        otherTitle: Mr
        workPhoneAreaCode1: "09"
        workAddress1: Level 15
        personalCountry: Australia
        workPhoneAreaCode2: "09"
        workAddress2: 360 Collins St
        firstName: John
        workPhone2: "5007000"
        workPhone1: "5006000"
        status: PENDING
        otherPhone1: "5009000"
        lastName: Wick
        timezone: Australia/Melbourne
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        personalState: Victoria
        otherPhoneAreaCode1: "09"
        workCountry: Australia
        title: Dr
        personalPhone2: "5007000"
        personalPhoneAreaCode2: "09"
        workState: Victoria
        personalPhone1: "5006000"
        personalPhoneAreaCode1: "09"
        nickname: Babayaga
        workPostalPostCode: "3000"
        workPostalSuburb: Melboure
        department: Research & Development
        workFax1: "5008000"
        userName: John.Wick
        workFaxAreaCode1: "09"
        workMobilePhone2: "61500500500"
        workMobilePhone1: "61400400400"
        otherLastName: Wickman
        middleName: Bjork
        personalPostCode: "3000"
      properties:
        id:
          description: The ID of the user.
          example: 4DC922649AFE370C
          readOnly: true
          type: string
        userName:
          description: Specifies the username for the account
          example: John.Wick
          type: string
          writeOnly: true
        password:
          description: "Specifies the password for the account <p><b>Note:</b>The\
            \ following are the rules for the password:</p><p><ul><li>Alpha Numeric\
            \ [a-zA-Z0-9_]</li><li>Must have at least one uppercase and one lowercase\
            \ character</li></ul></p>"
          example: string
          type: string
          writeOnly: true
        firstName:
          description: The first name of the user.
          example: John
          type: string
        middleName:
          description: The middle name of the user.
          example: Bjork
          type: string
        lastName:
          description: The last name of the user.
          example: Wick
          type: string
        title:
          description: The title to address the user with.
          example: Dr
          type: string
        nickname:
          description: Preferred name to be shown in the platfom interface
          example: Babayaga
          type: string
        status:
          default: PENDING
          description: Specifies the validity status of the user. The default status
            is PENDING. One cannot set the status while creation of account. Read
            `User State Machine` again mentioned above.</p>
          enum:
          - ACTIVE
          - A
          - INACTIVE
          - I
          - PENDING
          - P
          - SUSPENDED
          - B
          - DELETED
          - D
          example: PENDING
          type: string
        workMobilePhone1:
          description: The primary work mobile number of the user.
          example: "61400400400"
          type: string
        workEmailAddress1:
          description: The primary work email address of the user.
          example: testUser@example.com
          type: string
        workCountry:
          description: The work country of the user.
          example: Australia
          type: string
        timezone:
          description: "The time zone in which the user lives in. Values are relative\
            \ to GMT.\n\nSupported values are:\n\n* Offset from GMT in the format\
            \ `+/-NN`. For example, `+10`.\n* Worldwide time zone in the format `Country/City`.\
            \ For example, `Australia/Melbourne`\n\nSee the list of [worldwide time\
            \ zones](https://en.wikipedia.org/wiki/List_of_time_zones_by_country)."
          example: Australia/Melbourne
          type: string
        workMobilePhone2:
          description: The secondary work mobile number of the user.
          example: "61500500500"
          type: string
        workEmailAddress2:
          description: The secondary work email address of the user.
          example: newUser@example.com
          type: string
        workPhoneAreaCode1:
          description: The primary work phone number area code of the user.
          example: "09"
          type: string
        workPhone1:
          description: The primary work phone number of the user.
          example: "5006000"
          type: string
        workPhoneAreaCode2:
          description: The secondary work phone number area code of the user.
          example: "09"
          type: string
        workPhone2:
          description: The secondary work phone number of the user.
          example: "5007000"
          type: string
        workFaxAreaCode1:
          description: The work fax number area code of the user.
          example: "09"
          type: string
        workFax1:
          description: The work fax number of the user.
          example: "5008000"
          type: string
        workSatellitePhone:
          description: The work satellite phone number of the user.
          example: "61600600600"
          type: string
        workOtherPhone:
          description: The work other phone number of the user.
          example: "61700700700"
          type: string
        workAddress1:
          description: The first work address line of the user.
          example: Level 15
          type: string
        workAddress2:
          description: The second work address line of the user.
          example: 360 Collins St
          type: string
        workSuburb:
          description: The work address suburb of the user.
          example: Melboure
          type: string
        workState:
          description: The work address state of the user.
          example: Victoria
          type: string
        workPostCode:
          description: The work address post code of the user.
          example: "3000"
          type: string
        workPostalAddress1:
          description: The first work postal address line of the user.
          example: Level 15
          type: string
        workPostalAddress2:
          description: The second work postal address line of the user.
          example: 360 Collins St
          type: string
        workPostalSuburb:
          description: The work postal address suburb of the user.
          example: Melboure
          type: string
        workPostalState:
          description: The work postal address state of the user.
          example: Victoria
          type: string
        workPostalPostCode:
          description: The work postal address post code of the user.
          example: "3000"
          type: string
        personalEmailAddress1:
          description: The primary personal email address of the user.
          example: personalPrimaryUser@example.com
          type: string
        personalEmailAddress2:
          description: The secondary personal email address of the user.
          example: personalSecondaryUser@example.com
          type: string
        personalAddress1:
          description: The first personal address line of the user.
          example: Level 15
          type: string
        personalAddress2:
          description: The second personal address line of the user.
          example: 360 Collins St
          type: string
        personalSuburb:
          description: The personal address suburb of the user.
          example: Melboure
          type: string
        personalState:
          description: The personal address state of the user.
          example: Victoria
          type: string
        personalPostCode:
          description: The personal address post code of the user.
          example: "3000"
          type: string
        personalCountry:
          description: The personal address country of the user.
          example: Australia
          type: string
        personalPhoneAreaCode1:
          description: The primary personal phone number area code of the user.
          example: "09"
          type: string
        personalPhone1:
          description: The primary personal phone number of the user.
          example: "5006000"
          type: string
        personalPhoneAreaCode2:
          description: The secondary personal phone number area code of the user.
          example: "09"
          type: string
        personalPhone2:
          description: The secondary personal phone number of the user.
          example: "5007000"
          type: string
        personalFaxAreaCode1:
          description: The personal fax number area code of the user.
          example: "09"
          type: string
        personalFax1:
          description: The personal fax number of the user.
          example: "5008000"
          type: string
        otherPhoneAreaCode1:
          description: The other phone number area code of the user.
          example: "09"
          type: string
        otherPhone1:
          description: The other phone number of the user.
          example: "5009000"
          type: string
        otherMobile:
          description: The other mobile number of the user.
          example: "61900900900"
          type: string
        otherFirstName:
          description: The other first name of the user.
          example: Harold
          type: string
        otherLastName:
          description: The other last name of the user.
          example: Wickman
          type: string
        otherTitle:
          description: The other title to address the user with.
          example: Mr
          type: string
        companyName:
          description: The company name of the user.
          example: Whispir
          type: string
        jobTitle:
          description: The job title of the user.
          example: Software Engineer
          type: string
        division:
          description: The division in the company to which the user is associated.
          example: Technology
          type: string
        businessUnit:
          description: The business unit in the company to which the user is associated.
          example: Core Platform
          type: string
        department:
          description: The department in the company to which the user is associated.
          example: Research & Development
          type: string
        teamName1:
          description: The primary team name of the user.
          example: Optimus Prime
          type: string
        teamName2:
          description: The secondary team name of the user.
          example: Bumblebee
          type: string
        role1:
          description: The primary role of the user.
          example: Administrator
          type: string
        role2:
          description: The secondary role of the user.
          example: Analyst
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - firstName
      - lastName
      - password
      - timezone
      - userName
      - workCountry
      title: User
      type: object
      xml:
        name: user
        prefix: ns2
      x-tags:
      - Users
      x-examples:
        Example:
          id: 4DC922649AFE370C
          firstName: John
          middleName: ""
          lastName: Wick
          title: ""
          nickname: Babayaga
          status: PENDING
          workMobilePhone1: "61400400400"
          workEmailAddress1: testUser@example.com
          workCountry: Australia
          timezone: Australia/Melbourne
          workMobilePhone2: "61500500500"
          workEmailAddress2: newUser@example.com
          workPhoneAreaCode1: "09"
          workPhone1: "5006000"
          workPhoneAreaCode2: "09"
          workPhone2: "5007000"
          workFaxAreaCode1: "09"
          workFax1: "5008000"
          workSatellitePhone: "61600600600"
          workOtherPhone: "61700700700"
          workAddress1: Level 15
          workAddress2: 360 Collins St
          workSuburb: Melboure
          workState: Victoria
          workPostCode: "3000"
          workPostalAddress1: Level 15
          workPostalAddress2: 360 Collins St
          workPostalSuburb: Melboure
          workPostalState: Victoria
          workPostalPostCode: "3000"
          personalEmailAddress1: personalPrimaryUser@example.com
          personalEmailAddress2: personalSecondaryUser@example.com
          personalAddress1: Level 15
          personalAddress2: 360 Collins St
          personalSuburb: Melboure
          personalState: Victoria
          personalPostCode: "3000"
          personalCountry: Australia
          personalPhoneAreaCode1: "09"
          personalPhone1: "5006000"
          personalPhoneAreaCode2: "09"
          personalPhone2: "5007000"
          personalFaxAreaCode1: "09"
          personalFax1: "5008000"
          otherPhoneAreaCode1: "09"
          otherPhone1: "5009000"
          otherMobile: "61900900900"
          otherFirstName: Harold
          otherLastName: Wickman
          otherTitle: Mr
          companyName: Whispir
          jobTitle: Software Engineer
          division: Technology
          businessUnit: Core Platform
          department: Research & Development
          teamName1: Optimus Prime
          teamName2: Bumblebee
          role1: Administrator
          role2: Analyst
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
    listUsers:
      description: List users response object
      example:
        firstName: John
        lastName: Wick
        workEmailAddress1: testUser@example.com
        companyName: Whispir
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        id: 4DC922649AFE370C
      properties:
        id:
          description: The ID of the user.
          example: 4DC922649AFE370C
          readOnly: true
          type: string
        firstName:
          description: The first name of the user.
          example: John
          readOnly: true
          type: string
        lastName:
          description: The last name of the user.
          example: Wick
          readOnly: true
          type: string
        companyName:
          description: The company name of the user.
          example: Whispir
          readOnly: true
          type: string
        workEmailAddress1:
          description: The primary work email address of the user.
          example: testUser@example.com
          readOnly: true
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      title: List Users
      type: object
      xml:
        name: user
        prefix: ns2
      x-tags:
      - Users
      x-examples:
        Example:
          id: 4DC922649AFE370C
          firstName: John
          lastName: Wick
          companyName: Whispir
          workEmailAddress1: testUser@example.com
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
    event:
      description: The event object.
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        id: 888E0A343770A7D1
        eventLabel: 2701095 - Outage of Local Systems in Sydney
        eventFormList:
        - eventFieldList:
          - name: actionOwner1
            value: John Wick
          - name: actionOwner1
            value: John Wick
          formName: Metro Event
        - eventFieldList:
          - name: actionOwner1
            value: John Wick
          - name: actionOwner1
            value: John Wick
          formName: Metro Event
        status: Open
      properties:
        id:
          description: Id of the event
          example: 888E0A343770A7D1
          readOnly: true
          type: string
        eventLabel:
          description: Specifies the name of the label used for the messages sent
            under this event. This needs to match with the name of the event templates
            available
          example: 2701095 - Outage of Local Systems in Sydney
          type: string
        status:
          default: Open
          description: Specifies the status of the event. The status can be one of
            <ul><li>Active</li><li>Resolved<l></ul>Note:The default status is Open.
          enum:
          - Open
          - Active
          - Resolved
          example: Open
          type: string
        eventFormList:
          description: Event form list
          items:
            $ref: '#/components/schemas/event_eventFormList_inner'
          type: array
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - eventLabel
      - status
      title: Event
      type: object
      xml:
        name: event
        prefix: ns3
      x-tags:
      - Events
      x-examples:
        Event object example:
          id: 421FEEBA93GF53A2
          eventLabel: 2701095 - Outage of Local Systems in Sydney
          status: Active
          eventFormList:
          - formName: MetroEvent
            eventFieldList:
            - name: summary
              value: Outage of systems in Sydney
            - name: location
              value: "0.0,0.0"
            - name: description
              value: "ATMs are non responsive, teams to be sent to investigate."
            - name: status
              value: Open
            - name: category
              value: Internal
            - name: startDate
              value: 11/09/2019 00:00:00
            - name: actionOwner1
              value: John Wick
            - name: actionDetails1
              value: investigation to take place asap.
            - name: actionDate1
              value: 11/09/2019 00:00:00
            - name: severity
              value: Severity 3 - Minor Outage (Some Service Degradation)
          link:
          - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
            host: https://api.au.whispir.com
            port: -1
            rel: self
            method: GET
          - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/events/421FEEBA93GF53A2
            host: https://api.au.whispir.com
            port: -1
            rel: self
            method: PUT
            type: "application/vnd.whispir.event-v1+xml,application/vnd.whispir.event-v1+json"
          - uri: https://api.au.whispir.com/workspaces/26C20B1A09XS3RA2/messages?label=2701095%20-%20Outage%20of%20Local%20Systems%20in%20Sydney
            host: https://api.au.whispir.com
            port: -1
            rel: retrieveEventMessages
            method: GET
    import:
      description: Import model object
      properties:
        resourceId:
          description: "The resource identifier returned from the POST to /resources.\
            \ Resource referred to must be a valid CSV, XML, or JSON file."
          example: 4FBBC384BCE3DAABFE3
          type: string
        importType:
          description: "This defines the resource that will be created through this\
            \ import process. \n\n*'contact'* is the only supported *importType* at\
            \ this stage."
          example: contact
          type: string
        importOptions:
          $ref: '#/components/schemas/fieldMapping'
        importMode:
          description: The type of contact import that is occurring.
          enum:
          - replace
          - duplicate
          - ignore
          example: replace
          type: string
      required:
      - importMode
      - importOptions
      - importType
      - resourceId
      title: Import
      type: object
      xml:
        name: import
        prefix: ns2
      x-tags:
      - Imports
      x-examples:
        Import resource example:
          resourceId: 4FBBC384BCE3DAABFE3
          importType: contact
          importOptions:
            firstName: firstName
            lastName: lastName
            workMobilePhone1: workMobilePhone1
            workCountry: workCountry
            timezone: timeZone
          importMode: replace
    fieldMapping:
      description: Mapping the data column in your resource file to the contact field
        value
      properties:
        firstName:
          description: First Name of the Contact. Value of this field is used to map
            the field within the resource.
          example: firstName
          type: string
        lastName:
          description: Last Name of the Contact. Value of this field is used to map
            the field within the resource.
          example: lastName
          type: string
        workMobilePhone1:
          description: The mobile phone number of the Contact. Value of this field
            is used to map the field within the newly created resource.
          example: workMobilePhone1
          type: string
        workCountry:
          description: The country field of the contact. The value of this field is
            used to map to the field within the newly created contact.
          example: workCountry
          type: string
        timezone:
          description: The timezone field of the contact. The value of this field
            is used to map to the timezone field within the newly created contact.
          example: timeZone
          type: string
      required:
      - firstName
      - lastName
      - timezone
      - workCountry
      - workMobilePhone1
      title: Field Mapping
      type: object
      xml:
        name: fieldMapping
      x-examples:
        example-1:
          firstName: firstName
          lastName: lastName
          workMobilePhone1: workMobilePhone1
          workCountry: workCountry
          timezone: timeZone
      x-tags:
      - Imports
    attachment:
      description: "Attachments can be of any type [e.g. PDF, images and documents],\
        \ and the maximum size of all attached files combined is 10 MB\n\nAttachments\
        \ must be provided in the payload of the message. URLs can be referenced in\
        \ the email but will not be added as message attachments."
      example:
        attachmentDesc: My photo
        derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
        attachmentName: TestIcon.png
      properties:
        attachmentName:
          description: "The name of the attachment, including the extension."
          example: TestIcon.png
          type: string
        derefUri:
          description: The Base64 encoded value for the email attachment.
          example: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
          type: string
        attachmentDesc:
          description: A description for the attachment.
          example: My photo
          type: string
      required:
      - attachmentName
      - derefUri
      title: Attachment
      type: object
      x-examples:
        JSON:
          attachmentName: sample.json
          attachmentDesc: Sample
          derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
      x-tags:
      - Messages
    link:
      description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
        \ describing all discoverable resources in relation to the original request."
      items:
        $ref: '#/components/schemas/link_inner'
      readOnly: true
      title: Link
      type: array
      x-examples:
        Example:
        - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
          rel: detailedResponsesWithResponseRule
          method: GET
          host: api.au.whispir.com
          port: -1
    messageStatus:
      description: "The message status object, describing the delivery of the sent\
        \ message."
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        messageStatuses:
        - link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          name: "61400400400"
          categories:
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          info: '  SMS message sent. SMSCODE=008 SMS message received by device. SMSCODE=001 '
          status:
          - ""
          - ""
        - link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          name: "61400400400"
          categories:
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          - recipientCount: 1
            name: Sent
            percentageTotal: 100.0%
          info: '  SMS message sent. SMSCODE=008 SMS message received by device. SMSCODE=001 '
          status:
          - ""
          - ""
        status: '1 to 1 of 1    '
      properties:
        messageStatuses:
          description: The object defining the message delivery status.
          items:
            $ref: '#/components/schemas/messageStatus_messageStatuses_inner'
          type: array
          uniqueItems: true
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        status:
          description: Present when `view` is `detailed`.
          example: '1 to 1 of 1    '
          type: string
      title: Message Status
      type: object
      x-examples:
        Summary:
          messageStatuses:
          - link:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messagestatus
              rel: self
              method: GET
              host: api.au.whispir.com
              port: -1
            categories:
            - name: Sent
              recipientCount: 0
              percentageTotal: 0.0%
            - name: Pending
              recipientCount: 0
              percentageTotal: 0.0%
            - name: Received
              recipientCount: 1
              percentageTotal: 100.0%
            - name: Acknowledged
              recipientCount: 0
              percentageTotal: 0.0%
            - name: Undeliverable
              recipientCount: 0
              percentageTotal: 0.0%
          link: []
        Detailed:
          messageStatuses:
          - name: "61400400400"
            info: '  SMS message sent. SMSCODE=008 SMS message received by device.
              SMSCODE=001 '
            link:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messagestatus?view=detailed
              rel: self
              method: GET
              host: api.au.whispir.com
              port: -1
            status:
            - type: email
              status: ""
              destination: ""
            - type: sms
              status: DELIVRD
              destination: "61400400400"
              sentTimestamp: 1647466923000
              receivedTimestamp: 1647466931000
            - type: voice
              status: ""
              destination: ""
          status: '1 to 1 of 1    '
          link: []
      x-tags:
      - Messages
    messageResponseSummary:
      description: The summary message response object.
      properties:
        messageresponses:
          description: The message response statuses.
          items:
            $ref: '#/components/schemas/messageResponseSummary_messageresponses_inner'
          readOnly: true
          type: array
          uniqueItems: true
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - link
      - messageresponses
      title: Message Response Summary
      type: object
      x-examples:
        Example:
          messageresponses:
          - percentageTotal: 50%
            responseCount: "1"
            link: []
            type: noresponse
          - percentageTotal: 50%
            responseCount: "1"
            link: []
            type: notmatched
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=summary
            rel: self
            method: GET
      x-tags:
      - Messages
    messageResponseDetailed:
      description: The detailed message response object.
      properties:
        messageresponses:
          description: The message response statuses.
          items:
            $ref: '#/components/schemas/messageResponseDetailed_messageresponses_inner'
          readOnly: true
          type: array
          uniqueItems: true
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        status:
          description: The message response pagination status.
          example: '1 to 1 of 1    '
          readOnly: true
          type: string
      required:
      - link
      - messageresponses
      title: Message Response Detailed
      type: object
      x-examples:
        Example:
          messageresponses:
          - percentageTotal: 50%
            responseCount: "1"
            link: []
            type: noresponse
          - percentageTotal: 50%
            responseCount: "1"
            link: []
            type: notmatched
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=summary
            rel: self
            method: GET
      x-tags:
      - Messages
    dlr:
      description: A fixed object structure used by for Whispir internally for tracking
        purposes.
      example:
        period: ""
        expiryHour: 0
        bool: true
        publishToWeb: true
        feedIds: ""
        rule: ""
        expiryDay: 0
        type: ""
        expiryMin: 0
      properties:
        period:
          description: The period of the message delivery.
          example: ""
          type: string
        rule:
          description: The rule of the message delivery.
          example: ""
          type: string
        type:
          description: The type of the message delivery.
          example: ""
          type: string
        publishToWeb:
          description: Specifies whether the message was published to the web.
          type: boolean
        expiryDay:
          description: Specifies the number of days before the message expires.
          example: 0
          type: number
        expiryHour:
          description: Specifies the number of hours before the message expires.
          example: 0
          type: number
        expiryMin:
          description: Specifies the number of minutes before the message expires.
          example: 0
          type: number
        feedIds:
          description: The feeds identifier for the message delivery.
          example: ""
          type: string
        bool:
          description: The bool field for the message delivery.
          type: boolean
      readOnly: true
      required:
      - bool
      - expiryDay
      - expiryHour
      - expiryMin
      - feedIds
      - period
      - publishToWeb
      - rule
      - type
      title: Delivery Receipt
      type: object
      x-examples:
        Example:
          period: ""
          rule: ""
          type: ""
          publishToWeb: false
          expiryDay: 0
          expiryHour: 0
          expiryMin: 0
          feedIds: ""
          bool: false
    callbackCall:
      description: A callback call object
      example:
        messageLocation: https://api.au.whispir.com/messages/F4651CB151ACF0504FF09CB4D57922A5
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        messageId: 8D12688BFCC21BD51174C833F9BC9B9D
        callback:
          name: test callback
          attemptedDate: 22/10/20 09:28
          id: 93528522590CDF9A
          url: https://google.com
          statusMessage: OK
          statusCode: 200
        from:
          voice: "61400400400"
          mri: support@whispir.com
          name: John Wick
          mobile: "61400400400"
          email: support@whispir.com
        id: C96962B74DC57EF30F00E7097AC81A45
        responseMessage:
          acknowledged: 22/10/20 10:29
          channel: sms
          undeliverable: 22/10/20 10:29
          content: Delivered successfully to 61430430306 at 22/10/20 09:28
        status: SUCCESS
      properties:
        id:
          description: The unique ID of the specific call within Whispir
          example: C96962B74DC57EF30F00E7097AC81A45
          maxLength: 32
          readOnly: true
          type: string
        messageId:
          description: The unique ID of the message within Whispir
          example: 8D12688BFCC21BD51174C833F9BC9B9D
          maxLength: 32
          minLength: 1
          readOnly: true
          type: string
        status:
          description: The status of this particular callback attempt.
          enum:
          - SUCCESS
          - FAILED
          minLength: 1
          type: string
        messageLocation:
          description: The fully qualified URL to the original message within Whispir
          example: https://api.au.whispir.com/messages/F4651CB151ACF0504FF09CB4D57922A5
          maxLength: 256
          minLength: 1
          readOnly: true
          type: string
        from:
          $ref: '#/components/schemas/callbackCall_from'
        responseMessage:
          $ref: '#/components/schemas/callbackCall_responseMessage'
        callback:
          $ref: '#/components/schemas/callbackCall_callback'
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      required:
      - status
      title: Callback Call
      type: object
      x-examples:
        Example:
          id: 6AB8FF0111C32F1271E1165F3344AD73
          messageId: 2E585D7FA580335D5C1809F6DD2DFF0B
          status: SUCCESS
          messageLocation: https://api.au.whispir.com/messages/F4651CB151ACF0504FF09CB4D57922A5
          from:
            name: Cynthia Pushie
            mobile: "61430430306"
            email: cren@whispir.com
            voice: "61430430306"
          responseMessage:
            channel: SMS
            acknowledged: 22/10/20 10:28
            content: Delivered successfully to 61430430306 at 22/10/20 09:28
          callback:
            id: 93528522590CDF9A
            name: PVTcallback
            url: https://0cfae5ba271e4b1e3f6f6e3767c50b21.m.pipedream.net
            attemptedDate: 2022-03-21T09:26:11.327Z
            statusCode: "200"
            statusMessage: OK
          link:
          - uri: https://api.au.whispir.com/callbacks/93528522590CDF9A/calls/6AB8FF0111C32F1271E1165F3344AD73
            rel: updateCallbackHistory
            method: PUT
            type: "application/vnd.whispir.api-call-v1+xml,application/vnd.whispir.api-call-v1+json"
            host: api.au.whispir.com
            port: -1
          - uri: https://api.au.whispir.com/callbacks/93528522590CDF9A/calls/6AB8FF0111C32F1271E1165F3344AD73
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
      x-tags:
      - Callbacks
    customList:
      description: "A custom list is a predefined list of options that can be inserted\
        \ into a message or template. A list might be made up of capital city names,\
        \ days of the week, incident types, business phone numbers and so on. Custom\
        \ lists make it easy to add information quickly and consistently to your message\
        \ content."
      example:
        createdDate: 09/06/15 10:18
        sortType: As Displayed
        name: Day of Week
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        customlabellists:
        - name: Internal Systems
          value: Internal Systems
        - name: Internal Systems
          value: Internal Systems
        id: 4B4625BAEB7E4D58
        type: MESSAGE
        linked: enabled
      properties:
        id:
          description: Specifies the unique ID of the list
          example: 4B4625BAEB7E4D58
          readOnly: true
          type: string
        name:
          description: Specifies the name of the list
          example: Day of Week
          readOnly: true
          type: string
        type:
          description: Specifies the type
          enum:
          - INCIDENT
          - MESSAGE
          - CONTACT
          - RSS
          example: MESSAGE
          readOnly: true
          type: string
        createdDate:
          description: Specifies the creation date of the list
          example: 09/06/15 10:18
          readOnly: true
          type: string
        sortType:
          description: Specifies the sorting order
          enum:
          - As Displayed
          - Ascending
          - Descending
          example: As Displayed
          readOnly: true
          type: string
        linked:
          description: Specifies the linked status. When enabled the value selected
            for one channel is automatically applied on the other channels.
          enum:
          - disabled
          - enabled
          example: enabled
          readOnly: true
          type: string
        customlabellists:
          description: Contains the individual items that make up this list
          items:
            $ref: '#/components/schemas/customList_customlabellists_inner'
          readOnly: true
          type: array
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      readOnly: true
      title: Custom List
      type: object
      x-examples:
        Custom List example:
          id: 4B4625BAEB7E4D58
          name: Day of Week
          type: INCIDENT
          createdDate: 09/06/15 10:18
          sortType: As Displayed
          linked: disabled
          customlabellists:
          - name: Internal Systems
            value: Internal Systems
          - name: External Systems
            value: External Systems
          - name: Infrastructure
            value: Infrastructure
          link:
          - uri: https://api.au.whispir.com/customlists/4B4625BAEB7E4D58
            rel: self
            method: GET
            host: api.au.whispir.com
            port: -1
      x-tags:
      - Custom Lists
    getMessages_200_response:
      description: The list messages response object.
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        messages:
        - to: "61400400400"
          subject: Test Message
          body: This is the body of my test SMS message
        - to: "61400400400"
          subject: Test Message
          body: This is the body of my test SMS message
        status: status
      properties:
        messages:
          description: The list of retrieved messages.
          items:
            $ref: '#/components/schemas/message'
          minItems: 1
          readOnly: true
          type: array
          uniqueItems: true
        status:
          description: The status of the list request.
          readOnly: true
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
      x-examples:
        Example:
          messages:
          - subject: Test Message
            repetitionCount: 0
            repeatDays: 0
            repeatHrs: 0
            repeatMin: 0
            from: Test User
            direction: OUTGOING
            responseCount: "0"
            createdTime: 1647467664000
            link:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/E9F52215AD0787EBECDD691916955C1E
              rel: self
              method: GET
              host: api.au.whispir.com
              port: -1
            whatsappValidMessage: true
            validBody: false
            validSubject: true
          - subject: Test Message
            repetitionCount: 0
            repeatDays: 0
            repeatHrs: 0
            repeatMin: 0
            from: Test User
            direction: OUTGOING
            responseCount: "0"
            createdTime: 1647466923000
            link:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8
              rel: self
              method: GET
              host: api.au.whispir.com
              port: -1
            whatsappValidMessage: true
            validBody: false
            validSubject: true
          status: ""
          link: []
    getMessages_400_response:
      description: The bad request response object.
      properties:
        errorSummary:
          description: The summary of the error encountered.
          example: Your request was malformed and could not be processed by the server.
            Please try again
          minLength: 1
          type: string
        errorText:
          description: The detailed description of the error encountered.
          example: Bad Request
          minLength: 1
          type: string
        errorDetail:
          description: The additional details describing the error.
          example: "\"java.io.EOFException: No content to map to Object due to end\
            \ of inpu"
          minLength: 1
          type: string
      required:
      - errorDetail
      - errorSummary
      - errorText
      type: object
      x-examples:
        Example:
          errorSummary: Your request was malformed and could not be processed by the
            server. Please try again
          errorText: Bad Request
          errorDetail: "java.io.EOFException: No content to map to Object due to end\
            \ of input"
    getMessages_401_response:
      description: The unauthorised response object.
      properties:
        links:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        errorSummary:
          description: The summary of the error encountered.
          example: Your username and password combination was incorrect. Please check
            your authentication details and try again
          minLength: 1
          type: string
        errorText:
          description: The detailed description of the error encountered.
          example: Unauthorised
          minLength: 1
          type: string
        errorDetail:
          description: The additional details describing the error.
          example: An exception occurred.
          type: string
      required:
      - errorDetail
      - errorSummary
      - errorText
      type: object
    getMessages_403_response:
      description: The forbidden response object.
      properties:
        message:
          description: The error message.
          example: Forbidden
          type: string
      required:
      - message
      type: object
    getMessages_404_response:
      description: The not found response object.
      properties:
        errorSummary:
          description: The summary of the error encountered.
          example: The resource that you have requested does not exist. Please check
            the identifier and try again
          minLength: 1
          type: string
        errorText:
          description: The detailed description of the error encountered.
          example: Not Found
          minLength: 1
          type: string
        errorDetail:
          description: The additional details describing the error.
          example: An exception occurred.
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getMessages_405_response:
      description: The method not allowed response object.
      properties:
        errorSummary:
          description: The summary of the error encountered.
          example: The method that you have tried to use is not allowed for this resource
          minLength: 1
          type: string
        errorText:
          description: The detailed description of the error encountered.
          example: Method Not Allowed
          minLength: 1
          type: string
        errorDetail:
          description: The additional details describing the error.
          example: An exception occurred.
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getMessages_415_response:
      description: The unsupported media type response object.
      properties:
        errorSummary:
          description: The summary of the error encountered.
          example: "The media type you have supplied in the request does not match\
            \ any of the available on the server. Please check the documentation for\
            \ the correct media-type definitions, or contact support@whispir.com to\
            \ determine what media-type you should be using"
          minLength: 1
          type: string
        errorText:
          description: The detailed description of the error encountered.
          example: Unsupported Media Type
          minLength: 1
          type: string
        errorDetail:
          description: The additional details describing the error.
          example: "javax.ws.rs.NotSupportedException: Cannot consume content type"
          minLength: 1
          type: string
      type: object
    getMessages_422_response:
      description: The unprocessable entity response object.
      properties:
        errorSummary:
          description: The summary of the error encountered.
          example: "Your request did not contain all of the information required to\
            \ perform this method. Please check your request for the required fields\
            \ to be passed in and try again. Alternatively, contact your administrator\
            \ or support@whispir.com for more information"
          minLength: 1
          type: string
        errorText:
          description: The detailed description of the error encountered.
          example: "A Template name already exists in the current Workspace, please\
            \ select another name and try again."
          minLength: 1
          type: string
        errorDetail:
          description: The additional details describing the error.
          example: An exception occurred.
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getMessages_500_response:
      description: The internal server response object.
      properties:
        message:
          description: The error message.
          example: Internal Server Error
          type: string
      type: object
    getMessages_501_response:
      description: The method not implemented response object.
      properties:
        errorSummary:
          description: The summary of the error encountered.
          example: "The method that you have tried to use is not implemented for this\
            \ resource. Please check the documentation, or contact your administrator.\
            \ Alternatively you can get further information by contacting support@whispir.com"
          minLength: 1
          type: string
        errorText:
          description: The detailed description of the error encountered.
          example: Not Implemented
          minLength: 1
          type: string
        errorDetail:
          description: The additional details describing the error.
          example: An exception occurred.
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getMessageResponsesById_200_response:
      description: The message response object.
      oneOf:
      - $ref: '#/components/schemas/messageResponseDetailed'
      - $ref: '#/components/schemas/messageResponseSummary'
      x-examples:
        Example:
          messageresponses:
          - percentageTotal: 50%
            responseCount: "1"
            link: []
            type: noresponse
          - percentageTotal: 50%
            responseCount: "1"
            link: []
            type: notmatched
          link:
          - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=summary
            rel: self
            method: GET
    getResources_200_response:
      description: List of resources object
      example:
        resources:
        - scope: private
          name: sample.json
          derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
          mimeType: application/json
        - scope: private
          name: sample.json
          derefUri: eyAKICAgICJzYW1wbGUiOiB0cnVlCn0=
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 9B9E2425AAFEEE49E9D9112B6BAC22A9
          mimeType: application/json
        status: 1 to 2 of 2
      properties:
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no callbacks available.
          example: 1 to 2 of 2
          readOnly: true
          type: string
        resources:
          description: List of resources
          items:
            $ref: '#/components/schemas/resource'
          readOnly: true
          type: array
      type: object
    getTemplates_200_response_messagetemplates_inner:
      example:
        messageTemplateName: Test Template
        messageTemplateDescription: The test messate template.
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        id: 236EA3E3E63439DA
      properties:
        messageTemplateName:
          description: Specifies the name of the message template
          example: Test Template
          minLength: 1
          readOnly: true
          type: string
        messageTemplateDescription:
          description: "Specifies the description of the message template, so that\
            \ anyone can understand its purpose"
          example: The test messate template.
          minLength: 1
          readOnly: true
          type: string
        id:
          description: Specifies the template id needed for all the API Operations
          example: 236EA3E3E63439DA
          minLength: 1
          readOnly: true
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getTemplates_200_response:
      description: Returns a list of templates
      example:
        messagetemplates:
        - messageTemplateName: Test Template
          messageTemplateDescription: The test messate template.
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 236EA3E3E63439DA
        - messageTemplateName: Test Template
          messageTemplateDescription: The test messate template.
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 236EA3E3E63439DA
        link:
        - "{}"
        - "{}"
        status: 1 to 1 of 1
      properties:
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no message templates available.
          example: 1 to 1 of 1
          minLength: 1
          readOnly: true
          type: string
        messagetemplates:
          description: Specifies the name of the message template
          items:
            $ref: '#/components/schemas/getTemplates_200_response_messagetemplates_inner'
          minItems: 1
          readOnly: true
          type: array
          uniqueItems: true
        link:
          description: Provides a list of URLs that can be used to manipulate or access
            the message template. This following attribute may return an empty array.
          items:
            type: object
          readOnly: true
          type: array
      required:
      - messagetemplates
      - status
      type: object
      x-examples:
        Example:
          status: '1 to 1 of 1    '
          messagetemplates:
          - messageTemplateName: Sample SMS Template with tags
            messageTemplateDescription: Template to provide an example on whispir.io
              no.1
            id: 3148356543415EE7
            link:
            - uri: https://api.au.whispir.com/workspaces/618CAD33669AD31A/templates/3148356543415EE7
              rel: self
              method: GET
              host: api.au.whispir.com
              port: -1
          link: []
    getResponseRules_200_response:
      example:
        responseRules:
        - responseTemplatePatterns:
            colour: '#00947d'
            textPrompt: "YES"
            spokenVoicePrompt: to select YES
            name: Yes Rule
            pattern: startswith
            voicePrompt: "1"
          name: Response Rule 1
          description: My Response Rule
        - responseTemplatePatterns:
            colour: '#00947d'
            textPrompt: "YES"
            spokenVoicePrompt: to select YES
            name: Yes Rule
            pattern: startswith
            voicePrompt: "1"
          name: Response Rule 1
          description: My Response Rule
        status: 1 to 8 of 8
      properties:
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no response rules available.
          example: 1 to 8 of 8
          readOnly: true
          type: string
        responseRules:
          description: The list of response rules
          items:
            $ref: '#/components/schemas/responseRule'
          readOnly: true
          type: array
      required:
      - responseRules
      - status
      type: object
    getContacts_200_response:
      description: List contacts object
      example:
        contacts:
        - personalSuburb: Melboure
          role1: Administrator
          businessUnit: Core Platform
          workEmailAddress1: testUser@example.com
          role2: Analyst
          workEmailAddress2: newUser@example.com
          workSatellitePhone: "61600600600"
          workSuburb: Melboure
          companyName: Whispir
          jobTitle: Software Engineer
          type: PROJECT
          workPostalAddress2: 360 Collins St
          workPostalAddress1: Level 15
          division: Technology
          workPostalState: Victoria
          workOtherPhone: "61700700700"
          otherMobile: "61900900900"
          personalFax1: "5008000"
          personalEmailAddress2: personalSecondaryUser@example.com
          personalEmailAddress1: personalPrimaryUser@example.com
          workPostCode: "3000"
          teamName2: Bumblebee
          devices:
          - ""
          - ""
          teamName1: Optimus Prime
          personalAddress2: 360 Collins St
          personalFaxAreaCode1: "09"
          personalAddress1: Level 15
          otherFirstName: Harold
          otherTitle: Mr
          workPhoneAreaCode1: "09"
          workAddress1: Level 15
          personalCountry: Australia
          workPhoneAreaCode2: "09"
          workAddress2: 360 Collins St
          firstName: John
          workPhone2: "5007000"
          workPhone1: "5006000"
          messagingoptions:
          - secondary: WorkMobilePhone1
            channel: sms
            tertiary: WorkMobilePhone1
            enabled: true
            primary: WorkMobilePhone1
          - secondary: WorkMobilePhone1
            channel: sms
            tertiary: WorkMobilePhone1
            enabled: true
            primary: WorkMobilePhone1
          otherPhone1: "5009000"
          status: A
          lastName: Wick
          lastModifiedTime: 2022-03-29T16:30:18+11:00
          timezone: Australia/Melbourne
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          personalState: Victoria
          otherPhoneAreaCode1: "09"
          workCountry: Australia
          title: Dr
          personalPhone2: "5007000"
          personalPhoneAreaCode2: "09"
          workState: Victoria
          personalPhone1: "5006000"
          personalPhoneAreaCode1: "09"
          workPostalPostCode: "3000"
          workPostalSuburb: Melboure
          department: Research & Development
          mri: "61400400400"
          workFax1: "5008000"
          workFaxAreaCode1: "09"
          workMobilePhone2: "61500500500"
          workMobilePhone1: "61400400400"
          otherLastName: Wickman
          locations:
          - latitude: 41.9028
            type: CurrentLocation
            longitude: -12.4964
          - latitude: 41.9028
            type: CurrentLocation
            longitude: -12.4964
          personalPostCode: "3000"
        - personalSuburb: Melboure
          role1: Administrator
          businessUnit: Core Platform
          workEmailAddress1: testUser@example.com
          role2: Analyst
          workEmailAddress2: newUser@example.com
          workSatellitePhone: "61600600600"
          workSuburb: Melboure
          companyName: Whispir
          jobTitle: Software Engineer
          type: PROJECT
          workPostalAddress2: 360 Collins St
          workPostalAddress1: Level 15
          division: Technology
          workPostalState: Victoria
          workOtherPhone: "61700700700"
          otherMobile: "61900900900"
          personalFax1: "5008000"
          personalEmailAddress2: personalSecondaryUser@example.com
          personalEmailAddress1: personalPrimaryUser@example.com
          workPostCode: "3000"
          teamName2: Bumblebee
          devices:
          - ""
          - ""
          teamName1: Optimus Prime
          personalAddress2: 360 Collins St
          personalFaxAreaCode1: "09"
          personalAddress1: Level 15
          otherFirstName: Harold
          otherTitle: Mr
          workPhoneAreaCode1: "09"
          workAddress1: Level 15
          personalCountry: Australia
          workPhoneAreaCode2: "09"
          workAddress2: 360 Collins St
          firstName: John
          workPhone2: "5007000"
          workPhone1: "5006000"
          messagingoptions:
          - secondary: WorkMobilePhone1
            channel: sms
            tertiary: WorkMobilePhone1
            enabled: true
            primary: WorkMobilePhone1
          - secondary: WorkMobilePhone1
            channel: sms
            tertiary: WorkMobilePhone1
            enabled: true
            primary: WorkMobilePhone1
          otherPhone1: "5009000"
          status: A
          lastName: Wick
          lastModifiedTime: 2022-03-29T16:30:18+11:00
          timezone: Australia/Melbourne
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          personalState: Victoria
          otherPhoneAreaCode1: "09"
          workCountry: Australia
          title: Dr
          personalPhone2: "5007000"
          personalPhoneAreaCode2: "09"
          workState: Victoria
          personalPhone1: "5006000"
          personalPhoneAreaCode1: "09"
          workPostalPostCode: "3000"
          workPostalSuburb: Melboure
          department: Research & Development
          mri: "61400400400"
          workFax1: "5008000"
          workFaxAreaCode1: "09"
          workMobilePhone2: "61500500500"
          workMobilePhone1: "61400400400"
          otherLastName: Wickman
          locations:
          - latitude: 41.9028
            type: CurrentLocation
            longitude: -12.4964
          - latitude: 41.9028
            type: CurrentLocation
            longitude: -12.4964
          personalPostCode: "3000"
        status: 1 to 8 of 8
      properties:
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no callbacks available.
          example: 1 to 8 of 8
          readOnly: true
          type: string
        contacts:
          description: list of contacts
          items:
            $ref: '#/components/schemas/contact'
          type: array
      type: object
    getDistributionLists_200_response_distributionLists_inner:
      oneOf:
      - $ref: '#/components/schemas/distributionlist'
      - $ref: '#/components/schemas/dynamicdistributionlist'
    getDistributionLists_200_response:
      description: list of distribution lists
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        distributionLists:
        - null
        - null
        status: 1 to 1 of 1
      properties:
        distributionLists:
          description: Either a static or dynamic distribution list
          items:
            $ref: '#/components/schemas/getDistributionLists_200_response_distributionLists_inner'
          type: array
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no callbacks available.
          example: 1 to 1 of 1
          readOnly: true
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    postDistributionLists_request:
      description: Either a static or dynamic distribution list
      oneOf:
      - $ref: '#/components/schemas/distributionlist'
      - $ref: '#/components/schemas/dynamicdistributionlist'
    getScenarios_200_response:
      description: List of retrieved scenarios
      example:
        scenarios:
        - voice:
            other: ""
            footer: ""
            header: "This is the introduction, read out to the recipient prior to\
              \ any key press."
            resources:
              attachment:
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
            body: "This is the body of the voice call, read out after the key press"
            type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
          allowedUserIds: 4DC922649AFE370C
          web:
            body: This is the content of my web publishing or Rich Push Message
            type: text/plain
          social:
            social:
            - id: social
              body: Facebook Content
              type: text/plain
            - id: social
              body: Facebook Content
              type: text/plain
          subject: Fire Evacuation
          name: Fire Evacuation Block A
          description: Fire evacuation notification for A block residents
          to: "61400400400"
          label: fire-evacuation
          allowedUsers: SELECTEDUSERS
          message:
            to: "61400400400"
            subject: Test Message
            body: This is the body of my test SMS message
          email:
            footer: This is the footer of my message.
            resources:
              attachments:
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
            body: This is the body of my email message.
            type: text/plain
        - voice:
            other: ""
            footer: ""
            header: "This is the introduction, read out to the recipient prior to\
              \ any key press."
            resources:
              attachment:
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
            body: "This is the body of the voice call, read out after the key press"
            type: "Pin:7171,ConfCall:1800123123,ConfAccountNo:098711234,ConfPinNo:8181,ConfModPinNo:4242"
          allowedUserIds: 4DC922649AFE370C
          web:
            body: This is the content of my web publishing or Rich Push Message
            type: text/plain
          social:
            social:
            - id: social
              body: Facebook Content
              type: text/plain
            - id: social
              body: Facebook Content
              type: text/plain
          subject: Fire Evacuation
          name: Fire Evacuation Block A
          description: Fire evacuation notification for A block residents
          to: "61400400400"
          label: fire-evacuation
          allowedUsers: SELECTEDUSERS
          message:
            to: "61400400400"
            subject: Test Message
            body: This is the body of my test SMS message
          email:
            footer: This is the footer of my message.
            resources:
              attachments:
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
              - attachmentDesc: My photo
                derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
                attachmentName: TestIcon.png
            body: This is the body of my email message.
            type: text/plain
      properties:
        scenarios:
          description: Scenario object
          items:
            $ref: '#/components/schemas/scenario'
          type: array
      type: object
    getCallbacks_200_response_callbacks_inner:
      example:
        retriesEnabled: false
        name: callback1
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        id: D7D2295E2A08388C
        url: https://e05237bf.ngrol.io/
      properties:
        id:
          description: "The id of the callback. \n\nThis is the value that should\
            \ be passed when referring to the callback using the API endpoints"
          example: D7D2295E2A08388C
          minLength: 1
          readOnly: true
          type: string
        name:
          description: "The name of the callback. \n\nThis is the value that should\
            \ be passed in the message payload for triggering the callbacks"
          example: callback1
          minLength: 1
          readOnly: true
          type: string
        url:
          description: The destination url on your servers that Whispir should reach
            out to.
          example: https://e05237bf.ngrol.io/
          minLength: 1
          readOnly: true
          type: string
        retriesEnabled:
          default: false
          description: "If retriesEnabled is false, then Whispir will only try once\
            \ and when a failure (non 200 OK response code) happens, it will not retry\
            \ again\n\nWhen true, it will try every 5 mins for a maximum of 10 times.\n\
            \nRefer to callback calls for more details on retrieving the SUCCESS and\
            \ FAIL logs"
          readOnly: true
          type: boolean
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getCallbacks_200_response:
      description: The callback object.
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        callbacks:
        - retriesEnabled: false
          name: callback1
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: D7D2295E2A08388C
          url: https://e05237bf.ngrol.io/
        - retriesEnabled: false
          name: callback1
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: D7D2295E2A08388C
          url: https://e05237bf.ngrol.io/
        status: 1 to 1 of 1
      properties:
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no callbacks available.
          example: 1 to 1 of 1
          minLength: 1
          readOnly: true
          type: string
        callbacks:
          description: A list of callbacks
          items:
            $ref: '#/components/schemas/getCallbacks_200_response_callbacks_inner'
          minItems: 1
          readOnly: true
          type: array
          uniqueItems: true
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
      x-examples:
        example-1:
          status: '1 to 1 of 1    '
          callbacks:
          - id: D7D2295E2A08388C
            name: callback1
            url: https://e05237bf.ngrok.io/
            retriesEnabled: false
            link:
            - uri: https://api.au.whispir.com/callbacks/D7D2295E2A08388C
              rel: self
              method: GET
              host: api.au.whispir.com
              port: -1
          link: []
    getCallbackCalls_200_response:
      description: A list of callbacks
      example:
        calls:
        - messageLocation: https://api.au.whispir.com/messages/F4651CB151ACF0504FF09CB4D57922A5
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          messageId: 8D12688BFCC21BD51174C833F9BC9B9D
          callback:
            name: test callback
            attemptedDate: 22/10/20 09:28
            id: 93528522590CDF9A
            url: https://google.com
            statusMessage: OK
            statusCode: 200
          from:
            voice: "61400400400"
            mri: support@whispir.com
            name: John Wick
            mobile: "61400400400"
            email: support@whispir.com
          id: C96962B74DC57EF30F00E7097AC81A45
          responseMessage:
            acknowledged: 22/10/20 10:29
            channel: sms
            undeliverable: 22/10/20 10:29
            content: Delivered successfully to 61430430306 at 22/10/20 09:28
          status: SUCCESS
        - messageLocation: https://api.au.whispir.com/messages/F4651CB151ACF0504FF09CB4D57922A5
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          messageId: 8D12688BFCC21BD51174C833F9BC9B9D
          callback:
            name: test callback
            attemptedDate: 22/10/20 09:28
            id: 93528522590CDF9A
            url: https://google.com
            statusMessage: OK
            statusCode: 200
          from:
            voice: "61400400400"
            mri: support@whispir.com
            name: John Wick
            mobile: "61400400400"
            email: support@whispir.com
          id: C96962B74DC57EF30F00E7097AC81A45
          responseMessage:
            acknowledged: 22/10/20 10:29
            channel: sms
            undeliverable: 22/10/20 10:29
            content: Delivered successfully to 61430430306 at 22/10/20 09:28
          status: SUCCESS
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        status: 1 to 8 of 8
      properties:
        calls:
          description: A list of callbacks
          items:
            $ref: '#/components/schemas/callbackCall'
          type: array
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no callbacks available.
          example: 1 to 8 of 8
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getWorkspaces_200_response:
      description: List of workspaces
      example:
        workspaces:
        - billingcostcentre: Hollywood
          projectNumber: "2001"
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 70F2492146292826
          projectName: A Space Odessey
          status: A
        - billingcostcentre: Hollywood
          projectNumber: "2001"
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 70F2492146292826
          projectName: A Space Odessey
          status: A
        status: "status: 1 to 1 of 1"
      properties:
        workspaces:
          description: List of workspaces
          items:
            $ref: '#/components/schemas/workspace'
          readOnly: true
          type: array
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no callbacks available.
          example: "status: 1 to 1 of 1"
          readOnly: true
          type: string
      type: object
    getActivities_200_response:
      description: Example
      example:
        activities:
        - module: Conversation
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          action: Create
          description: Logged out
          workspaceName: Company
          time: 03/08/22 15:17
          fullname: Whispir User
          user: whispir user
          status: Successful
        - module: Conversation
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          action: Create
          description: Logged out
          workspaceName: Company
          time: 03/08/22 15:17
          fullname: Whispir User
          user: whispir user
          status: Successful
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
      properties:
        activities:
          description: List of activities
          items:
            $ref: '#/components/schemas/activity'
          readOnly: true
          type: array
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
      x-examples:
        example-1:
          activities:
          - user: cadmin
            time: 04/08/22 11:19
            action: Logout
            description: Logged out
            status: Successful
            module: System
            workspaceName: Company
            fullname: IUX Admin
            link:
            - uri: https://api.au.whispir.com/activities/726E75D22E359A8C
              rel: self
              method: GET
              host: api.au.whispir.com
              port: -1
            - uri: https://api.au.whispir.com/activities/726E75D22E359A8C
              rel: addActivityDetail
              method: POST
              type: "application/vnd.whispir.activity-v1+json,application/vnd.whispir.activity-v1+xml"
              host: api.au.whispir.com
              port: -1
          link: []
    getWorkspaceActivities_200_response:
      example:
        activities:
        - module: Conversation
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          action: Create
          description: Logged out
          workspaceName: Company
          time: 03/08/22 15:17
          fullname: Whispir User
          user: whispir user
          status: Successful
        - module: Conversation
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          action: Create
          description: Logged out
          workspaceName: Company
          time: 03/08/22 15:17
          fullname: Whispir User
          user: whispir user
          status: Successful
        status: "status: 1 to 1 of 1"
      properties:
        activities:
          description: List of activities
          items:
            $ref: '#/components/schemas/activity'
          readOnly: true
          type: array
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no activities available.
          example: "status: 1 to 1 of 1"
          readOnly: true
          type: string
      type: object
    getCustomLists_200_response:
      description: List of custom lists
      example:
        customlabels:
        - createdDate: 09/06/15 10:18
          sortType: As Displayed
          name: Day of Week
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          customlabellists:
          - name: Internal Systems
            value: Internal Systems
          - name: Internal Systems
            value: Internal Systems
          id: 4B4625BAEB7E4D58
          type: MESSAGE
          linked: enabled
        - createdDate: 09/06/15 10:18
          sortType: As Displayed
          name: Day of Week
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          customlabellists:
          - name: Internal Systems
            value: Internal Systems
          - name: Internal Systems
            value: Internal Systems
          id: 4B4625BAEB7E4D58
          type: MESSAGE
          linked: enabled
        status: 1 to 1 of 1
      properties:
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no callbacks available.
          example: 1 to 1 of 1
          readOnly: true
          type: string
        customlabels:
          description: A list of custom lists
          items:
            $ref: '#/components/schemas/customList'
          readOnly: true
          type: array
      type: object
    getUsers_200_response:
      description: List users object
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        users:
        - firstName: John
          lastName: Wick
          workEmailAddress1: testUser@example.com
          companyName: Whispir
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 4DC922649AFE370C
        - firstName: John
          lastName: Wick
          workEmailAddress1: testUser@example.com
          companyName: Whispir
          link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 4DC922649AFE370C
        status: 1 to 20 of 73
      properties:
        users:
          description: List of retrieved users
          items:
            $ref: '#/components/schemas/listUsers'
          readOnly: true
          type: array
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no users available.
          example: 1 to 20 of 73
          readOnly: true
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    getEvents_200_response:
      description: List of events
      example:
        events:
        - link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 888E0A343770A7D1
          eventLabel: 2701095 - Outage of Local Systems in Sydney
          eventFormList:
          - eventFieldList:
            - name: actionOwner1
              value: John Wick
            - name: actionOwner1
              value: John Wick
            formName: Metro Event
          - eventFieldList:
            - name: actionOwner1
              value: John Wick
            - name: actionOwner1
              value: John Wick
            formName: Metro Event
          status: Open
        - link:
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          - method: GET
            port: 0.8008281904610115
            rel: self
            host: api.au.whispir.com
            uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          id: 888E0A343770A7D1
          eventLabel: 2701095 - Outage of Local Systems in Sydney
          eventFormList:
          - eventFieldList:
            - name: actionOwner1
              value: John Wick
            - name: actionOwner1
              value: John Wick
            formName: Metro Event
          - eventFieldList:
            - name: actionOwner1
              value: John Wick
            - name: actionOwner1
              value: John Wick
            formName: Metro Event
          status: Open
        status: 1 to 2 of 2
      properties:
        status:
          description: Provides the total number of records fetched. This attribute
            may return "No records found" when there are no events available.
          example: 1 to 2 of 2
          readOnly: true
          type: string
        events:
          description: List of events
          items:
            $ref: '#/components/schemas/event'
          readOnly: true
          type: array
      type: object
    postAuth_200_response:
      description: The create auth response object.
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        token: your-generated-token-string
      properties:
        token:
          description: The JWT token.
          example: your-generated-token-string
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    email_resources:
      description: The resources to attach to the email Message.
      example:
        attachments:
        - attachmentDesc: My photo
          derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
          attachmentName: TestIcon.png
        - attachmentDesc: My photo
          derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
          attachmentName: TestIcon.png
      properties:
        attachments:
          description: A list of attachments to attach to the email Message.
          items:
            $ref: '#/components/schemas/attachment'
          type: array
          uniqueItems: false
      type: object
      writeOnly: true
    voice_resources:
      description: Provides a configuration object for specifying custom audio for
        the voice header and body.
      example:
        attachment:
        - attachmentDesc: My photo
          derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
          attachmentName: TestIcon.png
        - attachmentDesc: My photo
          derefUri: iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==
          attachmentName: TestIcon.png
      properties:
        attachment:
          description: "The header and body attachments containing WAV files. Read\
            \ the following section for configuring each voice field attachment:\n\
            \nIn addition to the parameters already specified for the TTS Voice calls,\
            \ each attached WAV file must have the `attachmentDesc` named these specific\
            \ values, to override the TTS voice:\n\n| Voice field    | attachmentDesc\
            \ |\n| -------------- |--------------- |\n| header         | `\"voiceintro.wav\"\
            ` |\n| body           | `\"voicebody.wav\"` |"
          items:
            $ref: '#/components/schemas/attachment'
          type: array
      type: object
    social_social_inner:
      description: The social channel object.
      example:
        id: social
        body: Facebook Content
        type: text/plain
      properties:
        id:
          description: |-
            The identifier for the social content channel. Read the following section for information on each channel.

            | Channel        | id |
            | -------------- |--------------- |
            | Twitter        | `"social"` |
            | Facebook       | `"social_long"` |
          enum:
          - social
          - social_long
          type: string
        body:
          description: The social content body.
          example: Facebook Content
          type: string
        type:
          description: The social message content type.
          enum:
          - text/plain
          - text/html
          type: string
      type: object
    features_pushOptions_fcm:
      description: The fcm object holds attributes specific to the contacts' Firebase-registered
        Android devices
      example:
        androidChannelId: my_app_notification_channel_id
        image: https://mycompany.com/sales/campaign.png
        sound: /res/raw/notification_sound.wav
        action: campaign_action
      properties:
        androidChannelId:
          description: "Translates to the <span style=\"color:red\">*android_channel_id*</span>\
            \ attribute in FCM.\nNote: use this attribute for devices running Android\
            \ versions 8 or later."
          example: my_app_notification_channel_id
          type: string
        sound:
          description: "The sound to play when the device receives the notification.\n\
            The value *default* will play the system sound, otherwise this attribute\
            \ must point to a sound resource bundled in the app, e.g. */res/raw/notification_sound.wav*\n\
            \nNote: This attribute can be used for devices running Android versions\
            \ older than Android 8. For versions 8+ please use the *androidChannelId*"
          example: /res/raw/notification_sound.wav
          type: string
        action:
          description: |-
            The action linked with a user click on the notification.
            Translates to the <span style="color:red">*click_action*</span> attribute in FCM.
          example: campaign_action
          type: string
        image:
          description: "The URL of an image to be downloaded and displayed in the\
            \ notification.\n\nDetails of the Android support for images in push notifications\
            \ can be found [here](https://firebase.google.com/docs/cloud-messaging/android/send-image)"
          example: https://mycompany.com/sales/campaign.png
          type: string
      type: object
    features_pushOptions_apns:
      description: The apns object holds attributes specific to the contacts' APNS-registered
        (Apple Push Notification Service) iOS devices
      example:
        sound: Library/Sounds/alert_sound.wav
        action: campaign_action
      properties:
        sound:
          description: "The sound to play when the device receives the notification.\n\
            The value *default* will play the system sound, otherwise this attribute\
            \ must point to a sound resource in your app's main bundle or in the *Library/Sounds*\
            \ folder of your app's container directory."
          example: Library/Sounds/alert_sound.wav
          type: string
        action:
          description: |
            The action linked with a user click on the notification.
            Translates to the <span style="color:red">*category*</span> attribute in APNS.
          example: campaign_action
          type: string
      type: object
    features_pushOptions:
      description: The object defining options for push messages.
      example:
        fcm:
          androidChannelId: my_app_notification_channel_id
          image: https://mycompany.com/sales/campaign.png
          sound: /res/raw/notification_sound.wav
          action: campaign_action
        escalationMins: "3"
        data: "{}"
        appId: app342983
        apns:
          sound: Library/Sounds/alert_sound.wav
          action: campaign_action
        priority: NORMAL
        notifications: enabled
      properties:
        notifications:
          description: A flag indicating whether notifications should be enabled for
            message replies.
          enum:
          - enabled
          - disabled
          type: string
        escalationMins:
          description: The number of minutes to wait for a reply until escalating
            to the next contact.
          example: "3"
          type: string
        appId:
          description: The identifier for the registered application.
          example: app342983
          type: string
        priority:
          default: NORMAL
          description: "The priority of the notification. \n\nNORMAL (the default\
            \ value) will indicate to FCM/APNS to take into consideration the target\
            \ device's battery consumption at the expense of delivering the message\
            \ with a delay. \n\nThe value NORMAL maps to priority *NORMAL* in FCM\
            \ and priority *5* in APNS. \n\nThe value HIGH maps to priority *HIGH*\
            \ in FCM and *10* in APNS."
          enum:
          - NORMAL
          - HIGH
          example: NORMAL
          type: string
        fcm:
          $ref: '#/components/schemas/features_pushOptions_fcm'
        apns:
          $ref: '#/components/schemas/features_pushOptions_apns'
        data:
          description: "Custom key-value pairs of the notification's payload. These\
            \ values can be used by the target app for enhanced functionality provided\
            \ that it has been designed to handle them (images, videos, links etc).\n\
            \nThese attributes translate to <span style=\"color:red\">*data*</span>\
            \  in the FCM payload.\n\nFor APNS, the custom attributes of *data* are\
            \ inserted as custom properties outside of the <span style=\"color:red\"\
            >*aps*</span> payload."
          type: object
      required:
      - appId
      type: object
    features_aliasOption:
      description: The object defining options for message sender aliasing.
      example:
        aliasName: Marketing
      properties:
        aliasName:
          description: The name of the alias configured to modify the message sender.
          example: Marketing
          type: string
      type: object
    distributionlist_distlistdetails_inner:
      properties:
        id:
          description: Id of contact
          example: 123ADAB420493B83
          readOnly: true
          type: string
        name:
          description: Name of Contact
          example: John Smith
          readOnly: true
          type: string
        type:
          description: Type of Contact
          example: User
          readOnly: true
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
      type: object
    callback_callbacks:
      description: The object to specify which events callbacks should be enabled
        for.
      example:
        undeliverable: disabled
        reply: disabled
      properties:
        reply:
          default: disabled
          description: A boolean flag specifying whether message reply callbacks are
            enabled.
          enum:
          - enabled
          - disabled
          type: string
        undeliverable:
          default: disabled
          description: A boolean flag specifying whether undeliverable message callbacks
            are enabled.
          enum:
          - enabled
          - disabled
          type: string
      required:
      - reply
      - undeliverable
      type: object
    locations_inner:
      description: The location object.
      example:
        latitude: 41.9028
        type: CurrentLocation
        longitude: -12.4964
      properties:
        latitude:
          description: "The measurement of distance north or south of the Equator,\
            \ for the contact."
          example: 41.9028
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: "The measurement of distance east or west of the prime meridian,\
            \ for the contact."
          example: -12.4964
          maximum: 180
          minimum: -180
          type: number
        type:
          description: A description for the location. At least one element of the
            `locations` array must have a `type` equal to `CurrentLocation`.
          example: CurrentLocation
          type: string
      type: object
    messagingoptions_inner:
      description: The object to configure message channel options.
      example:
        secondary: WorkMobilePhone1
        channel: sms
        tertiary: WorkMobilePhone1
        enabled: true
        primary: WorkMobilePhone1
      properties:
        channel:
          description: The message channel.
          enum:
          - sms
          - email
          - voice
          type: string
        enabled:
          description: A boolean flag indicating whether messaging is enabled for
            the `channel`.
          example: true
          type: boolean
        primary:
          description: The primary contact address for the `channel`.
          enum:
          - WorkMobilePhone1
          - WorkMobilePhone2
          - WorkEmailAddress1
          - WorkEmailAddress2
          - PersonalMobilePhone1
          - PersonalEmailAddress1
          type: string
        secondary:
          description: The secondary contact address for the `channel`.
          enum:
          - WorkMobilePhone1
          - WorkMobilePhone2
          - WorkEmailAddress1
          - WorkEmailAddress2
          - PersonalMobilePhone1
          - PersonalEmailAddress1
          type: string
        tertiary:
          description: The tertiary contact address for the `channel`.
          enum:
          - WorkMobilePhone1
          - WorkMobilePhone2
          - WorkEmailAddress1
          - WorkEmailAddress2
          - PersonalMobilePhone1
          - PersonalEmailAddress1
          type: string
      type: object
    event_eventFormList_inner_eventFieldList_inner:
      description: A key-value pair of name and its value
      example:
        name: actionOwner1
        value: John Wick
      properties:
        name:
          description: Specifies the name of the event field
          example: actionOwner1
          type: string
        value:
          description: Specifies the value of a given field
          example: John Wick
          type: string
      type: object
    event_eventFormList_inner:
      description: Constitutes the name of the form and its fields
      example:
        eventFieldList:
        - name: actionOwner1
          value: John Wick
        - name: actionOwner1
          value: John Wick
        formName: Metro Event
      properties:
        formName:
          description: Specifies the name of the event form
          example: Metro Event
          type: string
        eventFieldList:
          description: "Contains a list of event fields, see create /POST event endpoint\
            \ to learn more about the available fields"
          items:
            $ref: '#/components/schemas/event_eventFormList_inner_eventFieldList_inner'
          type: array
      type: object
    link_inner:
      description: The HATEOAS link object.
      example:
        method: GET
        port: 0.8008281904610115
        rel: self
        host: api.au.whispir.com
        uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
      properties:
        uri:
          description: The Universal Resource Identifier for the related resource.
          example: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
          format: uri
          readOnly: true
          type: string
        rel:
          description: The description of the related resource.
          example: self
          readOnly: true
          type: string
        method:
          description: "The [REST](https://en.wikipedia.org/wiki/Representational_state_transfer)\
            \ method required to request the related resource."
          example: GET
          readOnly: true
          type: string
        host:
          description: The host of the related resource.
          example: api.au.whispir.com
          readOnly: true
          type: string
        port:
          description: The port of the related resource.
          enum:
          - -1
          readOnly: true
          type: number
      type: object
    messageStatus_messageStatuses_inner_categories_inner:
      additionalProperties: false
      example:
        recipientCount: 1
        name: Sent
        percentageTotal: 100.0%
      properties:
        name:
          description: The delivery status of the message.
          enum:
          - Sent
          - Pending
          - Received
          - Acknowledged
          - Undeliverable
          type: string
        recipientCount:
          description: The number of recipients with the given `name` status.
          example: 1
          type: number
        percentageTotal:
          description: The percentage of recipients with the given `name` status.
          example: 100.0%
          type: string
      type: object
    messageStatus_messageStatuses_inner:
      example:
        link:
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        - method: GET
          port: 0.8008281904610115
          rel: self
          host: api.au.whispir.com
          uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses
        name: "61400400400"
        categories:
        - recipientCount: 1
          name: Sent
          percentageTotal: 100.0%
        - recipientCount: 1
          name: Sent
          percentageTotal: 100.0%
        - recipientCount: 1
          name: Sent
          percentageTotal: 100.0%
        - recipientCount: 1
          name: Sent
          percentageTotal: 100.0%
        - recipientCount: 1
          name: Sent
          percentageTotal: 100.0%
        info: '  SMS message sent. SMSCODE=008 SMS message received by device. SMSCODE=001 '
        status:
        - ""
        - ""
      properties:
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        categories:
          description: Present when `view` is `summary`.
          items:
            $ref: '#/components/schemas/messageStatus_messageStatuses_inner_categories_inner'
          maxItems: 5
          minItems: 5
          type: array
          uniqueItems: true
        name:
          description: Present when `view` is `detailed`.
          example: "61400400400"
          type: string
        info:
          description: Present when `view` is `detailed`.
          example: '  SMS message sent. SMSCODE=008 SMS message received by device.
            SMSCODE=001 '
          type: string
        status:
          description: Present when `view` is `detailed`.
          items: {}
          type: array
      type: object
    messageResponseSummary_messageresponses_inner:
      description: "First object if `view` is `summary`, second object if `view` is\
        \ `detailed`."
      properties:
        percentageTotal:
          description: Details the percentage of responses received for the sent message
            across all channels.
          example: 100%
          readOnly: true
          type: string
        responseCount:
          description: Details the number of responses received for the sent message
            across all channels.
          example: "1"
          readOnly: true
          type: string
        link:
          description: "A [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS) link object,\
            \ describing all discoverable resources in relation to the original request."
          items:
            $ref: '#/components/schemas/link_inner'
          readOnly: true
          title: Link
          type: array
          x-examples:
            Example:
            - uri: https://api.au.whispir.com/workspaces/9A4C5521FFC7B15B/messages/747AB7E716C1802B6476784AEB5C9BB8/messageresponses?view=detailed&filter=responserule
              rel: detailedResponsesWithResponseRule
              method: GET
              host: api.au.whispir.com
              port: -1
        type:
          description: "The message response category. \n* `noresponse` - the message\
            \ was sent but was not replied to\n* `notmatched` - the message was replied\
            \ to and the answer didn't match any search criteria"
          enum:
          - noresponse
          - notmatched
          readOnly: true
          type: string
      required:
      - link
      - percentageTotal
      - responseCount
      - type
      type: object
    messageResponseDetailed_messageresponses_inner_from:
      description: The message responder object.
      properties:
        name:
          description: The message responder's name.
          example: Test User
          readOnly: true
          type: string
        mri:
          description: The message responder's MRI.
          example: testUser.au@User.whispir.com
          readOnly: true
          type: string
        mobile:
          description: The message responder's mobile number.
          example: "61400400400"
          readOnly: true
          type: string
        email:
          description: The message responder's email address.
          example: tuser@whispir.com
          readOnly: true
          type: string
        voice:
          description: The message responder's voice number.
          example: "61400400400"
          readOnly: true
          type: string
      readOnly: true
      required:
      - email
      - mobile
      - mri
      - name
      - voice
      type: object
    messageResponseDetailed_messageresponses_inner_responseMessage:
      description: The message response object.
      properties:
        content:
          description: The message response content.
          example: A test response from the recipient.
          readOnly: true
          type: string
        acknowledged:
          description: The message response acknowledgement status.
          example: "true"
          readOnly: true
          type: string
        channel:
          description: The message response channel.
          enum:
          - N/A
          - sms
          - email
          - voice
          readOnly: true
          type: string
      readOnly: true
      type: object
    messageResponseDetailed_messageresponses_inner:
      properties:
        from:
          $ref: '#/components/schemas/messageResponseDetailed_messageresponses_inner_from'
        responseCategory:
          description: "The message response category. \n* `noresponse` - the message\
            \ was sent but was not replied to\n* `notmatched` - the message was replied\
            \ to and the answer didn't match any search criteria"
          enum:
          - noresponse
          - notmatched
          readOnly: true
          required:
          - acknowledged
          - channel
          - content
          type: string
        responseMessage:
          $ref: '#/components/schemas/messageResponseDetailed_messageresponses_inner_responseMessage'
      required:
      - from
      - responseCategory
      - responseMessage
      type: object
    callbackCall_from:
      description: The details about this particular message sender/responder
      example:
        voice: "61400400400"
        mri: support@whispir.com
        name: John Wick
        mobile: "61400400400"
        email: support@whispir.com
      properties:
        name:
          description: The name of the sender of this message
          example: John Wick
          minLength: 1
          readOnly: true
          type: string
        mri:
          description: The unique identifier for this contact within Whispir
          example: support@whispir.com
          readOnly: true
          type: string
        mobile:
          description: The mobile phone number associated with this sender
          example: "61400400400"
          minLength: 1
          readOnly: true
          type: string
        voice:
          description: The phone number associated with the voice channel for this
            sender
          example: "61400400400"
          minLength: 1
          readOnly: true
          type: string
        email:
          description: The email address associated with the email channel for this
            sender
          example: support@whispir.com
          readOnly: true
          type: string
      readOnly: true
      type: object
    callbackCall_responseMessage:
      description: "The details about this particular message that have been sent\
        \ to the callback\n\nIMPORTANT: Depending on the flow, you may only see  one\
        \ of the acknowledged or undeliverable keys with timestamps as their value"
      example:
        acknowledged: 22/10/20 10:29
        channel: sms
        undeliverable: 22/10/20 10:29
        content: Delivered successfully to 61430430306 at 22/10/20 09:28
      properties:
        channel:
          description: "The channel that this message was sent on. Either SMS, email\
            \ or voice"
          enum:
          - sms
          - email
          - voice
          - N/A
          minLength: 1
          readOnly: true
          type: string
        acknowledged:
          description: The date/time that this message was acknowledged
          example: 22/10/20 10:29
          minLength: 1
          readOnly: true
          type: string
        undeliverable:
          description: The date/time that this message was marked as undeliverable
          example: 22/10/20 10:29
          readOnly: true
          type: string
        content:
          description: The content of the message
          example: Delivered successfully to 61430430306 at 22/10/20 09:28
          minLength: 1
          readOnly: true
          type: string
      readOnly: true
      type: object
    callbackCall_callback:
      description: The details about this particular callback attempt
      example:
        name: test callback
        attemptedDate: 22/10/20 09:28
        id: 93528522590CDF9A
        url: https://google.com
        statusMessage: OK
        statusCode: 200
      properties:
        id:
          description: The ID of the callback attempting to be invoked
          example: 93528522590CDF9A
          minLength: 1
          readOnly: true
          type: string
        name:
          description: The name of the callback server attempting to be invoked
          example: test callback
          minLength: 1
          readOnly: true
          type: string
        url:
          description: The URL of the callback server attempting to be invoked
          example: https://google.com
          minLength: 1
          readOnly: true
          type: string
        attemptedDate:
          description: The date/time that the callback server was attempted to be
            invoked
          example: 22/10/20 09:28
          minLength: 1
          readOnly: true
          type: string
        statusCode:
          description: The statuscode that was returned from the callback service
          example: 200
          readOnly: true
          type: integer
        statusMessage:
          description: The status message that was returned from the callback service
          example: OK
          minLength: 1
          readOnly: true
          type: string
      readOnly: true
      type: object
    customList_customlabellists_inner:
      description: |-
        Contains the individual items that make up this list

        The ‘name’ is the text that is shown to the user
        The ‘value’ is the internally passed in value
      example:
        name: Internal Systems
        value: Internal Systems
      properties:
        name:
          description: Specifies the text that is show to the user
          example: Internal Systems
          readOnly: true
          type: string
        value:
          description: Specifies the value that is passed internally
          example: Internal Systems
          readOnly: true
          type: string
      readOnly: true
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    ApiKeyAuth:
      in: header
      name: Api-Key
      type: apiKey
    BearerAuth:
      scheme: bearer
      type: http

